//  Translated by epsc  version December 2021  
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int LibeErrno;
nctempchar1 *LibeErrstr;
int LibeErrinit ();
int LibeGeterrno ();
int LibeClearerr ();
nctempchar1 * LibeGeterrstr ();
nctempchar1 * LibeGetenv (nctempchar1 *name);
;
;
;
;
;
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
;
;
;
;
;
;
;
float LibeSincosmax;
float LibeSincoslim;
float LibeLnmax;
float LibeLnmin;
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSincos (float x,float y,float sign);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeAtan (float f);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeMathinit ();
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1 * LibeStradd (nctempchar1 *t,nctempchar1 *s);
nctempchar1 * LibeStrsave (nctempchar1 *s);
int LibeIsalhpa (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoaf (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoae (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
struct LibeFdescr {int cnt;
int ptr;
int bufsize;
nctempchar1 *base;
int readflg;
int writflg;
int unbflg;
int errflg;
int eoflg;
int fd;
};
typedef struct nctempLibeFdescr1 {int d[1]; struct LibeFdescr *a; } nctempLibeFdescr1;
struct nctempLibeFdescr2 {int d[2]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr3 {int d[3]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr4 {int d[4]; struct LibeFdescr *a; } ;
;
struct nctempLibeFdescr1 *LibeFarr;
;
nctempchar1 *LibeTmpstr;
int LibeIoinit ();
int LibeFlushbuff (int fp);
int LibeFillbuff (int fp);
int LibeFlush (int fp);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibePutf (int fp,float fval,nctempchar1 *form);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibeRead (int fp,int n,nctempchar1 *buffer);
int LibeWrite (int fp,int n,nctempchar1 *buffer);
int LibeSeek (int fp,int pos,int flag);
int LibeIodelete ();
int NBLOCKS;
int NTHREADS;
int LibeSetnb (int nb);
int LibeSetnt (int nt);
int LibeGetnb ();
int LibeGetnt ();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeSystem (nctempchar1 *cmd);
int LibeInit ();
int LibeExit ();
struct diff {int l;
int lmax;
nctempfloat2 *coeffs;
nctempfloat1 *w;
};
typedef struct nctempdiff1 {int d[1]; struct diff *a; } nctempdiff1;
struct nctempdiff2 {int d[2]; struct diff *a; } ;
struct nctempdiff3 {int d[3]; struct diff *a; } ;
struct nctempdiff4 {int d[4]; struct diff *a; } ;
struct diff* DiffNew (int l);
int DiffDxminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDxplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
struct rec {int nr;
nctempint1 *rx;
nctempint1 *ry;
int fd;
int nt;
nctempfloat2 *p;
nctempfloat2 *sxx;
nctempfloat2 *syy;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *wrk;
int resamp;
int pit;
};
typedef struct nctemprec1 {int d[1]; struct rec *a; } nctemprec1;
struct nctemprec2 {int d[2]; struct rec *a; } ;
struct nctemprec3 {int d[3]; struct rec *a; } ;
struct nctemprec4 {int d[4]; struct rec *a; } ;
struct rec* RecNew (nctempint1 *rx,nctempint1 *ry,int nt,int resamp);
int RecReceiver (struct rec* Rec,int it,nctempfloat2 *p,nctempfloat2 *vx,nctempfloat2 *vy);
nctempfloat2 * RecGetrec (struct rec* Rec,int data);
struct src {nctempint1 *Sx;
nctempint1 *Sy;
nctempfloat2 *Sqyy;
nctempfloat2 *Sqxx;
nctempfloat2 *Sfx;
nctempfloat2 *Sfy;
int Ns;
};
typedef struct nctempsrc1 {int d[1]; struct src *a; } nctempsrc1;
struct nctempsrc2 {int d[2]; struct src *a; } ;
struct nctempsrc3 {int d[3]; struct src *a; } ;
struct nctempsrc4 {int d[4]; struct src *a; } ;
struct src* SrcNew (nctempint1 *sx,nctempint1 *sy,nctempfloat2 *sqxx,nctempfloat2 *sqyy,nctempfloat2 *sfx,nctempfloat2 *sfy);
int SrcDel (struct src* Src);
int Srcricker (nctempfloat1 *source,float t0,float f0,int nt,float dt);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Qlx;
nctempfloat2 *Qly;
nctempfloat2 *Qmx;
nctempfloat2 *Qmy;
nctempfloat2 *Qpx;
nctempfloat2 *Qpy;
nctempfloat2 *Lambda;
nctempfloat2 *Mu;
nctempfloat2 *Muxy;
nctempfloat2 *Dmuxyx;
nctempfloat2 *Dmuxyy;
nctempfloat2 *Dlambdax;
nctempfloat2 *Dlambday;
nctempfloat2 *Dmux;
nctempfloat2 *Dmuy;
nctempfloat2 *Drhopx;
nctempfloat2 *Drhopy;
nctempfloat2 *Rho;
nctempfloat2 *Rhox;
nctempfloat2 *Rhoy;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Beta1x;
nctempfloat2 *Beta2x;
nctempfloat2 *Beta1y;
nctempfloat2 *Beta2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
nctempfloat1 *dx1;
nctempfloat1 *dy1;
nctempfloat1 *dx2;
nctempfloat1 *dy2;
float Dx;
float Dt;
int Freesurface;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
;
;
;
;
int Modeld (nctempfloat1 *d,float dx,int nb);
int Modele (nctempfloat1 *d,float dx,int nb);
nctempfloat2 * Modelcopy (nctempfloat2 *a);
int Modelstaggerx (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelstaggery (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelslscoeffs (nctempfloat2 *Qx,nctempfloat2 *Qy,nctempfloat2 *modx,nctempfloat2 *mody,nctempfloat2 *coeff1x,nctempfloat2 *coeff1y,nctempfloat2 *coeff2x,nctempfloat2 *coeff2y,struct model* Model);
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Freesurface);
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Rheol,int Freesurface);
float ModelStability (struct model* Model);
struct el2d {nctempfloat2 *p;
nctempfloat2 *sigmaxx;
nctempfloat2 *sigmayy;
nctempfloat2 *sigmaxy;
nctempfloat2 *sigmayx;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *exx;
nctempfloat2 *eyy;
nctempfloat2 *exy;
nctempfloat2 *eyx;
nctempfloat2 *e;
nctempfloat2 *gammaxx;
nctempfloat2 *gammayy;
nctempfloat2 *gammaxy;
nctempfloat2 *gammayx;
nctempfloat2 *thetaxxx;
nctempfloat2 *thetayyy;
nctempfloat2 *thetaxyx;
nctempfloat2 *thetayxy;
int ts;
int fdp;
int fdvx;
int fdvy;
int fde;
int fdexy;
int sresamp;
nctempint1 *snpflags;
};
typedef struct nctempel2d1 {int d[1]; struct el2d *a; } nctempel2d1;
struct nctempel2d2 {int d[2]; struct el2d *a; } ;
struct nctempel2d3 {int d[3]; struct el2d *a; } ;
struct nctempel2d4 {int d[4]; struct el2d *a; } ;
struct el2d* El2dNew (struct model* Model,int sresamp,nctempint1 *snpflags)
{
struct el2d* El2d;
int i;
int j;
struct el2d *nctemp5=(struct el2d*)RunMalloc(sizeof(struct el2d));
El2d =nctemp5;
El2d->sresamp =sresamp;
El2d->snpflags=snpflags;
int nctemp23=Model->Nx;
nctemp23=nctemp23*Model->Ny;
nctempfloat2 *nctemp22;
nctemp22=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp22->d[0]=Model->Nx;
nctemp22->d[1]=Model->Ny;
nctemp22->a=(float *)RunMalloc(sizeof(float)*nctemp23);
El2d->p=nctemp22;
int nctemp34=Model->Nx;
nctemp34=nctemp34*Model->Ny;
nctempfloat2 *nctemp33;
nctemp33=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp33->d[0]=Model->Nx;
nctemp33->d[1]=Model->Ny;
nctemp33->a=(float *)RunMalloc(sizeof(float)*nctemp34);
El2d->sigmaxx=nctemp33;
int nctemp45=Model->Nx;
nctemp45=nctemp45*Model->Ny;
nctempfloat2 *nctemp44;
nctemp44=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp44->d[0]=Model->Nx;
nctemp44->d[1]=Model->Ny;
nctemp44->a=(float *)RunMalloc(sizeof(float)*nctemp45);
El2d->sigmayy=nctemp44;
int nctemp56=Model->Nx;
nctemp56=nctemp56*Model->Ny;
nctempfloat2 *nctemp55;
nctemp55=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp55->d[0]=Model->Nx;
nctemp55->d[1]=Model->Ny;
nctemp55->a=(float *)RunMalloc(sizeof(float)*nctemp56);
El2d->p=nctemp55;
int nctemp67=Model->Nx;
nctemp67=nctemp67*Model->Ny;
nctempfloat2 *nctemp66;
nctemp66=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp66->d[0]=Model->Nx;
nctemp66->d[1]=Model->Ny;
nctemp66->a=(float *)RunMalloc(sizeof(float)*nctemp67);
El2d->sigmaxy=nctemp66;
int nctemp78=Model->Nx;
nctemp78=nctemp78*Model->Ny;
nctempfloat2 *nctemp77;
nctemp77=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp77->d[0]=Model->Nx;
nctemp77->d[1]=Model->Ny;
nctemp77->a=(float *)RunMalloc(sizeof(float)*nctemp78);
El2d->sigmayx=nctemp77;
int nctemp89=Model->Nx;
nctemp89=nctemp89*Model->Ny;
nctempfloat2 *nctemp88;
nctemp88=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp88->d[0]=Model->Nx;
nctemp88->d[1]=Model->Ny;
nctemp88->a=(float *)RunMalloc(sizeof(float)*nctemp89);
El2d->vx=nctemp88;
int nctemp100=Model->Nx;
nctemp100=nctemp100*Model->Ny;
nctempfloat2 *nctemp99;
nctemp99=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp99->d[0]=Model->Nx;
nctemp99->d[1]=Model->Ny;
nctemp99->a=(float *)RunMalloc(sizeof(float)*nctemp100);
El2d->vy=nctemp99;
int nctemp111=Model->Nx;
nctemp111=nctemp111*Model->Ny;
nctempfloat2 *nctemp110;
nctemp110=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp110->d[0]=Model->Nx;
nctemp110->d[1]=Model->Ny;
nctemp110->a=(float *)RunMalloc(sizeof(float)*nctemp111);
El2d->exx=nctemp110;
int nctemp122=Model->Nx;
nctemp122=nctemp122*Model->Ny;
nctempfloat2 *nctemp121;
nctemp121=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp121->d[0]=Model->Nx;
nctemp121->d[1]=Model->Ny;
nctemp121->a=(float *)RunMalloc(sizeof(float)*nctemp122);
El2d->eyy=nctemp121;
int nctemp133=Model->Nx;
nctemp133=nctemp133*Model->Ny;
nctempfloat2 *nctemp132;
nctemp132=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp132->d[0]=Model->Nx;
nctemp132->d[1]=Model->Ny;
nctemp132->a=(float *)RunMalloc(sizeof(float)*nctemp133);
El2d->exy=nctemp132;
int nctemp144=Model->Nx;
nctemp144=nctemp144*Model->Ny;
nctempfloat2 *nctemp143;
nctemp143=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp143->d[0]=Model->Nx;
nctemp143->d[1]=Model->Ny;
nctemp143->a=(float *)RunMalloc(sizeof(float)*nctemp144);
El2d->eyx=nctemp143;
int nctemp155=Model->Nx;
nctemp155=nctemp155*Model->Ny;
nctempfloat2 *nctemp154;
nctemp154=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp154->d[0]=Model->Nx;
nctemp154->d[1]=Model->Ny;
nctemp154->a=(float *)RunMalloc(sizeof(float)*nctemp155);
El2d->e=nctemp154;
int nctemp166=Model->Nx;
nctemp166=nctemp166*Model->Ny;
nctempfloat2 *nctemp165;
nctemp165=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp165->d[0]=Model->Nx;
nctemp165->d[1]=Model->Ny;
nctemp165->a=(float *)RunMalloc(sizeof(float)*nctemp166);
El2d->gammaxx=nctemp165;
int nctemp177=Model->Nx;
nctemp177=nctemp177*Model->Ny;
nctempfloat2 *nctemp176;
nctemp176=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp176->d[0]=Model->Nx;
nctemp176->d[1]=Model->Ny;
nctemp176->a=(float *)RunMalloc(sizeof(float)*nctemp177);
El2d->gammayy=nctemp176;
int nctemp188=Model->Nx;
nctemp188=nctemp188*Model->Ny;
nctempfloat2 *nctemp187;
nctemp187=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp187->d[0]=Model->Nx;
nctemp187->d[1]=Model->Ny;
nctemp187->a=(float *)RunMalloc(sizeof(float)*nctemp188);
El2d->gammaxy=nctemp187;
int nctemp199=Model->Nx;
nctemp199=nctemp199*Model->Ny;
nctempfloat2 *nctemp198;
nctemp198=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp198->d[0]=Model->Nx;
nctemp198->d[1]=Model->Ny;
nctemp198->a=(float *)RunMalloc(sizeof(float)*nctemp199);
El2d->gammayx=nctemp198;
int nctemp210=Model->Nx;
nctemp210=nctemp210*Model->Ny;
nctempfloat2 *nctemp209;
nctemp209=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp209->d[0]=Model->Nx;
nctemp209->d[1]=Model->Ny;
nctemp209->a=(float *)RunMalloc(sizeof(float)*nctemp210);
El2d->thetaxxx=nctemp209;
int nctemp221=Model->Nx;
nctemp221=nctemp221*Model->Ny;
nctempfloat2 *nctemp220;
nctemp220=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp220->d[0]=Model->Nx;
nctemp220->d[1]=Model->Ny;
nctemp220->a=(float *)RunMalloc(sizeof(float)*nctemp221);
El2d->thetayyy=nctemp220;
int nctemp232=Model->Nx;
nctemp232=nctemp232*Model->Ny;
nctempfloat2 *nctemp231;
nctemp231=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp231->d[0]=Model->Nx;
nctemp231->d[1]=Model->Ny;
nctemp231->a=(float *)RunMalloc(sizeof(float)*nctemp232);
El2d->thetayxy=nctemp231;
int nctemp243=Model->Nx;
nctemp243=nctemp243*Model->Ny;
nctempfloat2 *nctemp242;
nctemp242=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp242->d[0]=Model->Nx;
nctemp242->d[1]=Model->Ny;
nctemp242->a=(float *)RunMalloc(sizeof(float)*nctemp243);
El2d->thetaxyx=nctemp242;
i =0;
int nctemp252 = (i < Model->Nx);
while(nctemp252){
{
j =0;
int nctemp260 = (j < Model->Ny);
while(nctemp260){
{
int nctemp267=i;
nctemp267=j*El2d->p->d[0]+nctemp267;
El2d->p->a[nctemp267] =0.0;
int nctemp274=i;
nctemp274=j*El2d->sigmaxx->d[0]+nctemp274;
El2d->sigmaxx->a[nctemp274] =0.0;
int nctemp281=i;
nctemp281=j*El2d->sigmayy->d[0]+nctemp281;
El2d->sigmayy->a[nctemp281] =0.0;
int nctemp288=i;
nctemp288=j*El2d->sigmaxy->d[0]+nctemp288;
El2d->sigmaxy->a[nctemp288] =0.0;
int nctemp295=i;
nctemp295=j*El2d->sigmayx->d[0]+nctemp295;
El2d->sigmayx->a[nctemp295] =0.0;
int nctemp302=i;
nctemp302=j*El2d->vx->d[0]+nctemp302;
El2d->vx->a[nctemp302] =0.0;
int nctemp309=i;
nctemp309=j*El2d->vy->d[0]+nctemp309;
El2d->vy->a[nctemp309] =0.0;
int nctemp316=i;
nctemp316=j*El2d->exx->d[0]+nctemp316;
El2d->exx->a[nctemp316] =0.0;
int nctemp323=i;
nctemp323=j*El2d->eyy->d[0]+nctemp323;
El2d->eyy->a[nctemp323] =0.0;
int nctemp330=i;
nctemp330=j*El2d->exy->d[0]+nctemp330;
El2d->exy->a[nctemp330] =0.0;
int nctemp337=i;
nctemp337=j*El2d->eyx->d[0]+nctemp337;
El2d->eyx->a[nctemp337] =0.0;
int nctemp344=i;
nctemp344=j*El2d->e->d[0]+nctemp344;
El2d->e->a[nctemp344] =0.0;
int nctemp351=i;
nctemp351=j*El2d->gammaxx->d[0]+nctemp351;
El2d->gammaxx->a[nctemp351] =0.0;
int nctemp358=i;
nctemp358=j*El2d->gammayy->d[0]+nctemp358;
El2d->gammayy->a[nctemp358] =0.0;
int nctemp365=i;
nctemp365=j*El2d->gammaxy->d[0]+nctemp365;
El2d->gammaxy->a[nctemp365] =0.0;
int nctemp372=i;
nctemp372=j*El2d->gammayx->d[0]+nctemp372;
El2d->gammayx->a[nctemp372] =0.0;
int nctemp379=i;
nctemp379=j*El2d->thetaxxx->d[0]+nctemp379;
El2d->thetaxxx->a[nctemp379] =0.0;
int nctemp386=i;
nctemp386=j*El2d->thetayyy->d[0]+nctemp386;
El2d->thetayyy->a[nctemp386] =0.0;
int nctemp393=i;
nctemp393=j*El2d->thetayxy->d[0]+nctemp393;
El2d->thetayxy->a[nctemp393] =0.0;
int nctemp400=i;
nctemp400=j*El2d->thetaxyx->d[0]+nctemp400;
El2d->thetaxyx->a[nctemp400] =0.0;
El2d->ts =0;
}
int nctemp416 = j + 1;
j =nctemp416;
int nctemp417 = (j < Model->Ny);
nctemp260=nctemp417;
}
}
int nctemp429 = i + 1;
i =nctemp429;
int nctemp430 = (i < Model->Nx);
nctemp252=nctemp430;
}
struct nctempchar1 *nctemp437;
static struct nctempchar1 nctemp438 = {{ 9}, (char*)"snap 0: \0"};
nctemp437=&nctemp438;
nctempchar1* nctemp435= nctemp437;
int nctemp439=LibePs(nctemp435);
int nctemp443=0;
int nctemp441= El2d->snpflags->a[nctemp443];
int nctemp445=LibePi(nctemp441);
struct nctempchar1 *nctemp449;
static struct nctempchar1 nctemp450 = {{ 3}, (char*)"\n\0"};
nctemp449=&nctemp450;
nctempchar1* nctemp447= nctemp449;
int nctemp451=LibePs(nctemp447);
int nctemp455=0;
int nctemp452 = (El2d->snpflags->a[nctemp455] ==1);
if(nctemp452)
{
struct nctempchar1 *nctemp464;
static struct nctempchar1 nctemp465 = {{ 10}, (char*)"snp-p.bin\0"};
nctemp464=&nctemp465;
nctempchar1* nctemp462= nctemp464;
struct nctempchar1 *nctemp468;
static struct nctempchar1 nctemp469 = {{ 2}, (char*)"w\0"};
nctemp468=&nctemp469;
nctempchar1* nctemp466= nctemp468;
int nctemp470=LibeOpen(nctemp462,nctemp466);
El2d->fdp =nctemp470;
}
struct nctempchar1 *nctemp474;
static struct nctempchar1 nctemp475 = {{ 9}, (char*)"snap 1: \0"};
nctemp474=&nctemp475;
nctempchar1* nctemp472= nctemp474;
int nctemp476=LibePs(nctemp472);
int nctemp480=1;
int nctemp478= El2d->snpflags->a[nctemp480];
int nctemp482=LibePi(nctemp478);
struct nctempchar1 *nctemp486;
static struct nctempchar1 nctemp487 = {{ 3}, (char*)"\n\0"};
nctemp486=&nctemp487;
nctempchar1* nctemp484= nctemp486;
int nctemp488=LibePs(nctemp484);
int nctemp492=1;
int nctemp489 = (El2d->snpflags->a[nctemp492] ==1);
if(nctemp489)
{
struct nctempchar1 *nctemp501;
static struct nctempchar1 nctemp502 = {{ 11}, (char*)"snp-vx.bin\0"};
nctemp501=&nctemp502;
nctempchar1* nctemp499= nctemp501;
struct nctempchar1 *nctemp505;
static struct nctempchar1 nctemp506 = {{ 2}, (char*)"w\0"};
nctemp505=&nctemp506;
nctempchar1* nctemp503= nctemp505;
int nctemp507=LibeOpen(nctemp499,nctemp503);
El2d->fdvx =nctemp507;
}
struct nctempchar1 *nctemp511;
static struct nctempchar1 nctemp512 = {{ 9}, (char*)"snap 2: \0"};
nctemp511=&nctemp512;
nctempchar1* nctemp509= nctemp511;
int nctemp513=LibePs(nctemp509);
int nctemp517=2;
int nctemp515= El2d->snpflags->a[nctemp517];
int nctemp519=LibePi(nctemp515);
struct nctempchar1 *nctemp523;
static struct nctempchar1 nctemp524 = {{ 3}, (char*)"\n\0"};
nctemp523=&nctemp524;
nctempchar1* nctemp521= nctemp523;
int nctemp525=LibePs(nctemp521);
int nctemp529=2;
int nctemp526 = (El2d->snpflags->a[nctemp529] ==1);
if(nctemp526)
{
struct nctempchar1 *nctemp538;
static struct nctempchar1 nctemp539 = {{ 11}, (char*)"snp-vy.bin\0"};
nctemp538=&nctemp539;
nctempchar1* nctemp536= nctemp538;
struct nctempchar1 *nctemp542;
static struct nctempchar1 nctemp543 = {{ 2}, (char*)"w\0"};
nctemp542=&nctemp543;
nctempchar1* nctemp540= nctemp542;
int nctemp544=LibeOpen(nctemp536,nctemp540);
El2d->fdvy =nctemp544;
}
struct nctempchar1 *nctemp548;
static struct nctempchar1 nctemp549 = {{ 9}, (char*)"snap 3: \0"};
nctemp548=&nctemp549;
nctempchar1* nctemp546= nctemp548;
int nctemp550=LibePs(nctemp546);
int nctemp554=3;
int nctemp552= El2d->snpflags->a[nctemp554];
int nctemp556=LibePi(nctemp552);
struct nctempchar1 *nctemp560;
static struct nctempchar1 nctemp561 = {{ 3}, (char*)"\n\0"};
nctemp560=&nctemp561;
nctempchar1* nctemp558= nctemp560;
int nctemp562=LibePs(nctemp558);
int nctemp566=3;
int nctemp563 = (El2d->snpflags->a[nctemp566] ==1);
if(nctemp563)
{
struct nctempchar1 *nctemp575;
static struct nctempchar1 nctemp576 = {{ 10}, (char*)"snp-e.bin\0"};
nctemp575=&nctemp576;
nctempchar1* nctemp573= nctemp575;
struct nctempchar1 *nctemp579;
static struct nctempchar1 nctemp580 = {{ 2}, (char*)"w\0"};
nctemp579=&nctemp580;
nctempchar1* nctemp577= nctemp579;
int nctemp581=LibeOpen(nctemp573,nctemp577);
El2d->fde =nctemp581;
}
struct nctempchar1 *nctemp585;
static struct nctempchar1 nctemp586 = {{ 9}, (char*)"snap 4: \0"};
nctemp585=&nctemp586;
nctempchar1* nctemp583= nctemp585;
int nctemp587=LibePs(nctemp583);
int nctemp591=4;
int nctemp589= El2d->snpflags->a[nctemp591];
int nctemp593=LibePi(nctemp589);
struct nctempchar1 *nctemp597;
static struct nctempchar1 nctemp598 = {{ 3}, (char*)"\n\0"};
nctemp597=&nctemp598;
nctempchar1* nctemp595= nctemp597;
int nctemp599=LibePs(nctemp595);
int nctemp603=4;
int nctemp600 = (El2d->snpflags->a[nctemp603] ==1);
if(nctemp600)
{
struct nctempchar1 *nctemp612;
static struct nctempchar1 nctemp613 = {{ 12}, (char*)"snp-exy.bin\0"};
nctemp612=&nctemp613;
nctempchar1* nctemp610= nctemp612;
struct nctempchar1 *nctemp616;
static struct nctempchar1 nctemp617 = {{ 2}, (char*)"w\0"};
nctemp616=&nctemp617;
nctempchar1* nctemp614= nctemp616;
int nctemp618=LibeOpen(nctemp610,nctemp614);
El2d->fdexy =nctemp618;
}
return El2d;
}
__global__ void kernel_El2dvx (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp630=0;
int nctemp632=nx;
int nctemp635=0;
int nctemp637=ny;
int nctemp628=(nctemp632-nctemp630)*(nctemp637-nctemp635);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp628;nctempno+=blockDim.x*gridDim.x){
j=nctemp635+nctempno/(nctemp632-nctemp630);
i=nctemp630+nctempno%(nctemp632-nctemp630);
{
int nctemp642=i;
nctemp642=j*El2d->vx->d[0]+nctemp642;
int nctemp662=i;
nctemp662=j*Model->Rhox->d[0]+nctemp662;
float nctemp665 = Model->Dt * Model->Rhox->a[nctemp662];
int nctemp670=i;
nctemp670=j*El2d->exx->d[0]+nctemp670;
int nctemp674=i;
nctemp674=j*El2d->exy->d[0]+nctemp674;
float nctemp677 = El2d->exx->a[nctemp670] + El2d->exy->a[nctemp674];
float nctemp678 = nctemp665 * nctemp677;
int nctemp687=i;
nctemp687=j*El2d->thetaxxx->d[0]+nctemp687;
float nctemp690 = Model->Dt * El2d->thetaxxx->a[nctemp687];
int nctemp692=i;
nctemp692=j*Model->Drhopx->d[0]+nctemp692;
float nctemp695 = nctemp690 * Model->Drhopx->a[nctemp692];
float nctemp696 = nctemp678 + nctemp695;
int nctemp705=i;
nctemp705=j*El2d->thetayxy->d[0]+nctemp705;
float nctemp708 = Model->Dt * El2d->thetayxy->a[nctemp705];
int nctemp710=i;
nctemp710=j*Model->Drhopy->d[0]+nctemp710;
float nctemp713 = nctemp708 * Model->Drhopy->a[nctemp710];
float nctemp714 = nctemp696 + nctemp713;
int nctemp716=i;
nctemp716=j*El2d->vx->d[0]+nctemp716;
float nctemp719 = nctemp714 + El2d->vx->a[nctemp716];
El2d->vx->a[nctemp642] =nctemp719;
int nctemp723=i;
nctemp723=j*El2d->thetaxxx->d[0]+nctemp723;
int nctemp733=i;
nctemp733=j*Model->Eta1x->d[0]+nctemp733;
int nctemp737=i;
nctemp737=j*El2d->thetaxxx->d[0]+nctemp737;
float nctemp740 = Model->Eta1x->a[nctemp733] * El2d->thetaxxx->a[nctemp737];
int nctemp745=i;
nctemp745=j*Model->Eta2x->d[0]+nctemp745;
int nctemp749=i;
nctemp749=j*El2d->exx->d[0]+nctemp749;
float nctemp752 = Model->Eta2x->a[nctemp745] * El2d->exx->a[nctemp749];
float nctemp753 = nctemp740 + nctemp752;
El2d->thetaxxx->a[nctemp723] =nctemp753;
int nctemp757=i;
nctemp757=j*El2d->thetayxy->d[0]+nctemp757;
int nctemp767=i;
nctemp767=j*Model->Eta1y->d[0]+nctemp767;
int nctemp771=i;
nctemp771=j*El2d->thetayxy->d[0]+nctemp771;
float nctemp774 = Model->Eta1y->a[nctemp767] * El2d->thetayxy->a[nctemp771];
int nctemp779=i;
nctemp779=j*Model->Eta2y->d[0]+nctemp779;
int nctemp783=i;
nctemp783=j*El2d->exy->d[0]+nctemp783;
float nctemp786 = Model->Eta2y->a[nctemp779] * El2d->exy->a[nctemp783];
float nctemp787 = nctemp774 + nctemp786;
El2d->thetayxy->a[nctemp757] =nctemp787;
}
}
}
int El2dvx (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvx<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dvy (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp798=0;
int nctemp800=nx;
int nctemp803=0;
int nctemp805=ny;
int nctemp796=(nctemp800-nctemp798)*(nctemp805-nctemp803);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp796;nctempno+=blockDim.x*gridDim.x){
j=nctemp803+nctempno/(nctemp800-nctemp798);
i=nctemp798+nctempno%(nctemp800-nctemp798);
{
int nctemp810=i;
nctemp810=j*El2d->vy->d[0]+nctemp810;
int nctemp830=i;
nctemp830=j*Model->Rhoy->d[0]+nctemp830;
float nctemp833 = Model->Dt * Model->Rhoy->a[nctemp830];
int nctemp838=i;
nctemp838=j*El2d->eyy->d[0]+nctemp838;
int nctemp842=i;
nctemp842=j*El2d->eyx->d[0]+nctemp842;
float nctemp845 = El2d->eyy->a[nctemp838] + El2d->eyx->a[nctemp842];
float nctemp846 = nctemp833 * nctemp845;
int nctemp855=i;
nctemp855=j*El2d->thetayyy->d[0]+nctemp855;
float nctemp858 = Model->Dt * El2d->thetayyy->a[nctemp855];
int nctemp860=i;
nctemp860=j*Model->Drhopy->d[0]+nctemp860;
float nctemp863 = nctemp858 * Model->Drhopy->a[nctemp860];
float nctemp864 = nctemp846 + nctemp863;
int nctemp873=i;
nctemp873=j*El2d->thetaxyx->d[0]+nctemp873;
float nctemp876 = Model->Dt * El2d->thetaxyx->a[nctemp873];
int nctemp878=i;
nctemp878=j*Model->Drhopx->d[0]+nctemp878;
float nctemp881 = nctemp876 * Model->Drhopx->a[nctemp878];
float nctemp882 = nctemp864 + nctemp881;
int nctemp884=i;
nctemp884=j*El2d->vy->d[0]+nctemp884;
float nctemp887 = nctemp882 + El2d->vy->a[nctemp884];
El2d->vy->a[nctemp810] =nctemp887;
int nctemp891=i;
nctemp891=j*El2d->thetayyy->d[0]+nctemp891;
int nctemp901=i;
nctemp901=j*Model->Eta1y->d[0]+nctemp901;
int nctemp905=i;
nctemp905=j*El2d->thetayyy->d[0]+nctemp905;
float nctemp908 = Model->Eta1y->a[nctemp901] * El2d->thetayyy->a[nctemp905];
int nctemp913=i;
nctemp913=j*Model->Eta2y->d[0]+nctemp913;
int nctemp917=i;
nctemp917=j*El2d->eyy->d[0]+nctemp917;
float nctemp920 = Model->Eta2y->a[nctemp913] * El2d->eyy->a[nctemp917];
float nctemp921 = nctemp908 + nctemp920;
El2d->thetayyy->a[nctemp891] =nctemp921;
int nctemp925=i;
nctemp925=j*El2d->thetaxyx->d[0]+nctemp925;
int nctemp935=i;
nctemp935=j*Model->Eta1x->d[0]+nctemp935;
int nctemp939=i;
nctemp939=j*El2d->thetaxyx->d[0]+nctemp939;
float nctemp942 = Model->Eta1x->a[nctemp935] * El2d->thetaxyx->a[nctemp939];
int nctemp947=i;
nctemp947=j*Model->Eta2x->d[0]+nctemp947;
int nctemp951=i;
nctemp951=j*El2d->eyx->d[0]+nctemp951;
float nctemp954 = Model->Eta2x->a[nctemp947] * El2d->eyx->a[nctemp951];
float nctemp955 = nctemp942 + nctemp954;
El2d->thetaxyx->a[nctemp925] =nctemp955;
}
}
}
int El2dvy (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvy<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2de (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp966=0;
int nctemp968=nx;
int nctemp971=0;
int nctemp973=ny;
int nctemp964=(nctemp968-nctemp966)*(nctemp973-nctemp971);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp964;nctempno+=blockDim.x*gridDim.x){
j=nctemp971+nctempno/(nctemp968-nctemp966);
i=nctemp966+nctempno%(nctemp968-nctemp966);
{
int nctemp978=i;
nctemp978=j*El2d->e->d[0]+nctemp978;
int nctemp985=i;
nctemp985=j*El2d->exx->d[0]+nctemp985;
int nctemp989=i;
nctemp989=j*El2d->eyy->d[0]+nctemp989;
float nctemp992 = El2d->exx->a[nctemp985] + El2d->eyy->a[nctemp989];
El2d->e->a[nctemp978] =nctemp992;
}
}
}
int El2de (struct el2d* El2d,struct model* Model)
{
  kernel_El2de<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp1003=0;
int nctemp1005=nx;
int nctemp1008=0;
int nctemp1010=ny;
int nctemp1001=(nctemp1005-nctemp1003)*(nctemp1010-nctemp1008);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp1001;nctempno+=blockDim.x*gridDim.x){
j=nctemp1008+nctempno/(nctemp1005-nctemp1003);
i=nctemp1003+nctempno%(nctemp1005-nctemp1003);
{
int nctemp1015=i;
nctemp1015=j*El2d->exy->d[0]+nctemp1015;
int nctemp1026=i;
nctemp1026=j*tmp1->d[0]+nctemp1026;
int nctemp1030=i;
nctemp1030=j*tmp2->d[0]+nctemp1030;
float nctemp1033 = tmp1->a[nctemp1026] + tmp2->a[nctemp1030];
float nctemp1034 = 0.5 * nctemp1033;
El2d->exy->a[nctemp1015] =nctemp1034;
}
}
}
int El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2dexy<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp1045=0;
int nctemp1047=nx;
int nctemp1050=0;
int nctemp1052=ny;
int nctemp1043=(nctemp1047-nctemp1045)*(nctemp1052-nctemp1050);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp1043;nctempno+=blockDim.x*gridDim.x){
j=nctemp1050+nctempno/(nctemp1047-nctemp1045);
i=nctemp1045+nctempno%(nctemp1047-nctemp1045);
{
int nctemp1057=i;
nctemp1057=j*El2d->eyx->d[0]+nctemp1057;
int nctemp1068=i;
nctemp1068=j*tmp1->d[0]+nctemp1068;
int nctemp1072=i;
nctemp1072=j*tmp2->d[0]+nctemp1072;
float nctemp1075 = tmp1->a[nctemp1068] + tmp2->a[nctemp1072];
float nctemp1076 = 0.5 * nctemp1075;
El2d->eyx->a[nctemp1057] =nctemp1076;
}
}
}
int El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2deyx<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2dstress (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp1087=0;
int nctemp1089=nx;
int nctemp1092=0;
int nctemp1094=ny;
int nctemp1085=(nctemp1089-nctemp1087)*(nctemp1094-nctemp1092);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp1085;nctempno+=blockDim.x*gridDim.x){
j=nctemp1092+nctempno/(nctemp1089-nctemp1087);
i=nctemp1087+nctempno%(nctemp1089-nctemp1087);
{
int nctemp1099=i;
nctemp1099=j*El2d->sigmaxx->d[0]+nctemp1099;
int nctemp1122=i;
nctemp1122=j*Model->Lambda->d[0]+nctemp1122;
float nctemp1125 = Model->Dt * Model->Lambda->a[nctemp1122];
int nctemp1130=i;
nctemp1130=j*El2d->exx->d[0]+nctemp1130;
int nctemp1134=i;
nctemp1134=j*El2d->eyy->d[0]+nctemp1134;
float nctemp1137 = El2d->exx->a[nctemp1130] + El2d->eyy->a[nctemp1134];
float nctemp1138 = nctemp1125 * nctemp1137;
float nctemp1150 = 2.0 * Model->Dt;
int nctemp1152=i;
nctemp1152=j*Model->Mu->d[0]+nctemp1152;
float nctemp1155 = nctemp1150 * Model->Mu->a[nctemp1152];
int nctemp1157=i;
nctemp1157=j*El2d->exx->d[0]+nctemp1157;
float nctemp1160 = nctemp1155 * El2d->exx->a[nctemp1157];
float nctemp1161 = nctemp1138 + nctemp1160;
int nctemp1173=i;
nctemp1173=j*El2d->gammaxx->d[0]+nctemp1173;
int nctemp1177=i;
nctemp1177=j*Model->Dlambdax->d[0]+nctemp1177;
float nctemp1180 = El2d->gammaxx->a[nctemp1173] * Model->Dlambdax->a[nctemp1177];
int nctemp1185=i;
nctemp1185=j*El2d->gammayy->d[0]+nctemp1185;
int nctemp1189=i;
nctemp1189=j*Model->Dlambday->d[0]+nctemp1189;
float nctemp1192 = El2d->gammayy->a[nctemp1185] * Model->Dlambday->a[nctemp1189];
float nctemp1193 = nctemp1180 + nctemp1192;
float nctemp1194 = Model->Dt * nctemp1193;
float nctemp1195 = nctemp1161 + nctemp1194;
float nctemp1207 = 2.0 * Model->Dt;
int nctemp1209=i;
nctemp1209=j*El2d->gammaxx->d[0]+nctemp1209;
float nctemp1212 = nctemp1207 * El2d->gammaxx->a[nctemp1209];
int nctemp1214=i;
nctemp1214=j*Model->Dmux->d[0]+nctemp1214;
float nctemp1217 = nctemp1212 * Model->Dmux->a[nctemp1214];
float nctemp1218 = nctemp1195 + nctemp1217;
int nctemp1220=i;
nctemp1220=j*El2d->sigmaxx->d[0]+nctemp1220;
float nctemp1223 = nctemp1218 + El2d->sigmaxx->a[nctemp1220];
El2d->sigmaxx->a[nctemp1099] =nctemp1223;
int nctemp1227=i;
nctemp1227=j*El2d->sigmayy->d[0]+nctemp1227;
int nctemp1250=i;
nctemp1250=j*Model->Lambda->d[0]+nctemp1250;
float nctemp1253 = Model->Dt * Model->Lambda->a[nctemp1250];
int nctemp1258=i;
nctemp1258=j*El2d->exx->d[0]+nctemp1258;
int nctemp1262=i;
nctemp1262=j*El2d->eyy->d[0]+nctemp1262;
float nctemp1265 = El2d->exx->a[nctemp1258] + El2d->eyy->a[nctemp1262];
float nctemp1266 = nctemp1253 * nctemp1265;
float nctemp1278 = 2.0 * Model->Dt;
int nctemp1280=i;
nctemp1280=j*Model->Mu->d[0]+nctemp1280;
float nctemp1283 = nctemp1278 * Model->Mu->a[nctemp1280];
int nctemp1285=i;
nctemp1285=j*El2d->eyy->d[0]+nctemp1285;
float nctemp1288 = nctemp1283 * El2d->eyy->a[nctemp1285];
float nctemp1289 = nctemp1266 + nctemp1288;
int nctemp1301=i;
nctemp1301=j*El2d->gammaxx->d[0]+nctemp1301;
int nctemp1305=i;
nctemp1305=j*Model->Dlambdax->d[0]+nctemp1305;
float nctemp1308 = El2d->gammaxx->a[nctemp1301] * Model->Dlambdax->a[nctemp1305];
int nctemp1313=i;
nctemp1313=j*El2d->gammayy->d[0]+nctemp1313;
int nctemp1317=i;
nctemp1317=j*Model->Dlambday->d[0]+nctemp1317;
float nctemp1320 = El2d->gammayy->a[nctemp1313] * Model->Dlambday->a[nctemp1317];
float nctemp1321 = nctemp1308 + nctemp1320;
float nctemp1322 = Model->Dt * nctemp1321;
float nctemp1323 = nctemp1289 + nctemp1322;
float nctemp1335 = 2.0 * Model->Dt;
int nctemp1337=i;
nctemp1337=j*El2d->gammayy->d[0]+nctemp1337;
float nctemp1340 = nctemp1335 * El2d->gammayy->a[nctemp1337];
int nctemp1342=i;
nctemp1342=j*Model->Dmuy->d[0]+nctemp1342;
float nctemp1345 = nctemp1340 * Model->Dmuy->a[nctemp1342];
float nctemp1346 = nctemp1323 + nctemp1345;
int nctemp1348=i;
nctemp1348=j*El2d->sigmayy->d[0]+nctemp1348;
float nctemp1351 = nctemp1346 + El2d->sigmayy->a[nctemp1348];
El2d->sigmayy->a[nctemp1227] =nctemp1351;
int nctemp1355=i;
nctemp1355=j*El2d->p->d[0]+nctemp1355;
int nctemp1366=i;
nctemp1366=j*El2d->sigmaxx->d[0]+nctemp1366;
int nctemp1370=i;
nctemp1370=j*El2d->sigmayy->d[0]+nctemp1370;
float nctemp1373 = El2d->sigmaxx->a[nctemp1366] + El2d->sigmayy->a[nctemp1370];
float nctemp1374 = 0.5 * nctemp1373;
El2d->p->a[nctemp1355] =nctemp1374;
int nctemp1378=i;
nctemp1378=j*El2d->sigmaxy->d[0]+nctemp1378;
float nctemp1398 = 2.0 * Model->Dt;
int nctemp1400=i;
nctemp1400=j*Model->Muxy->d[0]+nctemp1400;
float nctemp1403 = nctemp1398 * Model->Muxy->a[nctemp1400];
int nctemp1405=i;
nctemp1405=j*El2d->exy->d[0]+nctemp1405;
float nctemp1408 = nctemp1403 * El2d->exy->a[nctemp1405];
float nctemp1420 = 2.0 * Model->Dt;
int nctemp1422=i;
nctemp1422=j*El2d->gammaxy->d[0]+nctemp1422;
float nctemp1425 = nctemp1420 * El2d->gammaxy->a[nctemp1422];
int nctemp1427=i;
nctemp1427=j*Model->Dmuxyy->d[0]+nctemp1427;
float nctemp1430 = nctemp1425 * Model->Dmuxyy->a[nctemp1427];
float nctemp1431 = nctemp1408 + nctemp1430;
int nctemp1433=i;
nctemp1433=j*El2d->sigmaxy->d[0]+nctemp1433;
float nctemp1436 = nctemp1431 + El2d->sigmaxy->a[nctemp1433];
El2d->sigmaxy->a[nctemp1378] =nctemp1436;
int nctemp1440=i;
nctemp1440=j*El2d->sigmayx->d[0]+nctemp1440;
float nctemp1460 = 2.0 * Model->Dt;
int nctemp1462=i;
nctemp1462=j*Model->Muxy->d[0]+nctemp1462;
float nctemp1465 = nctemp1460 * Model->Muxy->a[nctemp1462];
int nctemp1467=i;
nctemp1467=j*El2d->exy->d[0]+nctemp1467;
float nctemp1470 = nctemp1465 * El2d->exy->a[nctemp1467];
float nctemp1482 = 2.0 * Model->Dt;
int nctemp1484=i;
nctemp1484=j*El2d->gammayx->d[0]+nctemp1484;
float nctemp1487 = nctemp1482 * El2d->gammayx->a[nctemp1484];
int nctemp1489=i;
nctemp1489=j*Model->Dmuxyx->d[0]+nctemp1489;
float nctemp1492 = nctemp1487 * Model->Dmuxyx->a[nctemp1489];
float nctemp1493 = nctemp1470 + nctemp1492;
int nctemp1495=i;
nctemp1495=j*El2d->sigmayx->d[0]+nctemp1495;
float nctemp1498 = nctemp1493 + El2d->sigmayx->a[nctemp1495];
El2d->sigmayx->a[nctemp1440] =nctemp1498;
int nctemp1502=i;
nctemp1502=j*El2d->gammaxx->d[0]+nctemp1502;
int nctemp1512=i;
nctemp1512=j*Model->Alpha1x->d[0]+nctemp1512;
int nctemp1516=i;
nctemp1516=j*El2d->gammaxx->d[0]+nctemp1516;
float nctemp1519 = Model->Alpha1x->a[nctemp1512] * El2d->gammaxx->a[nctemp1516];
int nctemp1524=i;
nctemp1524=j*Model->Alpha2x->d[0]+nctemp1524;
int nctemp1528=i;
nctemp1528=j*El2d->exx->d[0]+nctemp1528;
float nctemp1531 = Model->Alpha2x->a[nctemp1524] * El2d->exx->a[nctemp1528];
float nctemp1532 = nctemp1519 + nctemp1531;
El2d->gammaxx->a[nctemp1502] =nctemp1532;
int nctemp1536=i;
nctemp1536=j*El2d->gammayy->d[0]+nctemp1536;
int nctemp1546=i;
nctemp1546=j*Model->Alpha1y->d[0]+nctemp1546;
int nctemp1550=i;
nctemp1550=j*El2d->gammayy->d[0]+nctemp1550;
float nctemp1553 = Model->Alpha1y->a[nctemp1546] * El2d->gammayy->a[nctemp1550];
int nctemp1558=i;
nctemp1558=j*Model->Alpha2y->d[0]+nctemp1558;
int nctemp1562=i;
nctemp1562=j*El2d->eyy->d[0]+nctemp1562;
float nctemp1565 = Model->Alpha2y->a[nctemp1558] * El2d->eyy->a[nctemp1562];
float nctemp1566 = nctemp1553 + nctemp1565;
El2d->gammayy->a[nctemp1536] =nctemp1566;
int nctemp1570=i;
nctemp1570=j*El2d->gammaxy->d[0]+nctemp1570;
int nctemp1580=i;
nctemp1580=j*Model->Beta1y->d[0]+nctemp1580;
int nctemp1584=i;
nctemp1584=j*El2d->gammaxy->d[0]+nctemp1584;
float nctemp1587 = Model->Beta1y->a[nctemp1580] * El2d->gammaxy->a[nctemp1584];
int nctemp1592=i;
nctemp1592=j*Model->Beta2y->d[0]+nctemp1592;
int nctemp1596=i;
nctemp1596=j*El2d->exy->d[0]+nctemp1596;
float nctemp1599 = Model->Beta2y->a[nctemp1592] * El2d->exy->a[nctemp1596];
float nctemp1600 = nctemp1587 + nctemp1599;
El2d->gammaxy->a[nctemp1570] =nctemp1600;
int nctemp1604=i;
nctemp1604=j*El2d->gammayx->d[0]+nctemp1604;
int nctemp1614=i;
nctemp1614=j*Model->Beta1x->d[0]+nctemp1614;
int nctemp1618=i;
nctemp1618=j*El2d->gammayx->d[0]+nctemp1618;
float nctemp1621 = Model->Beta1x->a[nctemp1614] * El2d->gammayx->a[nctemp1618];
int nctemp1626=i;
nctemp1626=j*Model->Beta2x->d[0]+nctemp1626;
int nctemp1630=i;
nctemp1630=j*El2d->eyx->d[0]+nctemp1630;
float nctemp1633 = Model->Beta2x->a[nctemp1626] * El2d->eyx->a[nctemp1630];
float nctemp1634 = nctemp1621 + nctemp1633;
El2d->gammayx->a[nctemp1604] =nctemp1634;
}
}
}
int El2dstress (struct el2d* El2d,struct model* Model)
{
  kernel_El2dstress<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
int El2dSnap (struct el2d* El2d,int it)
{
int n;
int Nx;
int Ny;
nctempchar1 *tmp;
int nctemp1635 = (El2d->sresamp <= 0);
if(nctemp1635)
{
return 1;
}
int nctemp1644=El2d->sigmaxx->d[0];Nx =nctemp1644;
int nctemp1652=El2d->sigmaxx->d[1];Ny =nctemp1652;
int nctemp1664 = Nx * Ny;
n =nctemp1664;
int nctemp1668= it;
int nctemp1670= El2d->sresamp;
int nctemp1672=LibeMod(nctemp1668,nctemp1670);
int nctemp1665 = (nctemp1672 ==0);
if(nctemp1665)
{
int nctemp1677=0;
int nctemp1674 = (El2d->snpflags->a[nctemp1677] ==1);
if(nctemp1674)
{
nctempchar1 nctemp1686;
nctempchar1 *nctemp1685;
nctemp1686=*(nctempchar1*)(El2d->p);
int nctemp1693 = 4 * n;
nctemp1686.d[0]=nctemp1693;
nctemp1685=&nctemp1686;
tmp=nctemp1685;
int nctemp1695= El2d->fdp;
int nctemp1702 = 4 * n;
int nctemp1697= nctemp1702;
nctempchar1* nctemp1703= tmp;
int nctemp1706=LibeWrite(nctemp1695,nctemp1697,nctemp1703);
}
int nctemp1710=1;
int nctemp1707 = (El2d->snpflags->a[nctemp1710] ==1);
if(nctemp1707)
{
nctempchar1 nctemp1719;
nctempchar1 *nctemp1718;
nctemp1719=*(nctempchar1*)(El2d->vx);
int nctemp1726 = 4 * n;
nctemp1719.d[0]=nctemp1726;
nctemp1718=&nctemp1719;
tmp=nctemp1718;
int nctemp1728= El2d->fdvx;
int nctemp1735 = 4 * n;
int nctemp1730= nctemp1735;
nctempchar1* nctemp1736= tmp;
int nctemp1739=LibeWrite(nctemp1728,nctemp1730,nctemp1736);
}
int nctemp1743=2;
int nctemp1740 = (El2d->snpflags->a[nctemp1743] ==1);
if(nctemp1740)
{
nctempchar1 nctemp1752;
nctempchar1 *nctemp1751;
nctemp1752=*(nctempchar1*)(El2d->vy);
int nctemp1759 = 4 * n;
nctemp1752.d[0]=nctemp1759;
nctemp1751=&nctemp1752;
tmp=nctemp1751;
int nctemp1761= El2d->fdvy;
int nctemp1768 = 4 * n;
int nctemp1763= nctemp1768;
nctempchar1* nctemp1769= tmp;
int nctemp1772=LibeWrite(nctemp1761,nctemp1763,nctemp1769);
}
int nctemp1776=3;
int nctemp1773 = (El2d->snpflags->a[nctemp1776] ==1);
if(nctemp1773)
{
nctempchar1 nctemp1785;
nctempchar1 *nctemp1784;
nctemp1785=*(nctempchar1*)(El2d->e);
int nctemp1792 = 4 * n;
nctemp1785.d[0]=nctemp1792;
nctemp1784=&nctemp1785;
tmp=nctemp1784;
int nctemp1794= El2d->fde;
int nctemp1801 = 4 * n;
int nctemp1796= nctemp1801;
nctempchar1* nctemp1802= tmp;
int nctemp1805=LibeWrite(nctemp1794,nctemp1796,nctemp1802);
}
int nctemp1809=4;
int nctemp1806 = (El2d->snpflags->a[nctemp1809] ==1);
if(nctemp1806)
{
nctempchar1 nctemp1818;
nctempchar1 *nctemp1817;
nctemp1818=*(nctempchar1*)(El2d->exy);
int nctemp1825 = 4 * n;
nctemp1818.d[0]=nctemp1825;
nctemp1817=&nctemp1818;
tmp=nctemp1817;
int nctemp1827= El2d->fdexy;
int nctemp1834 = 4 * n;
int nctemp1829= nctemp1834;
nctempchar1* nctemp1835= tmp;
int nctemp1838=LibeWrite(nctemp1827,nctemp1829,nctemp1835);
}
}
return 1;
}
int El2dSolve (struct el2d* El2d,struct model* Model,struct src* Src,struct rec* Rec,int nt,int l)
{
int sx;
int sy;
struct diff* Diff;
int ns;
int ne;
nctempfloat2 *tmp1;
nctempfloat2 *tmp2;
int i;
int k;
float perc;
float oldperc;
int iperc;
int nctemp1844= l;
struct diff* nctemp1846=DiffNew(nctemp1844);
Diff =nctemp1846;
int nctemp1853=Model->Nx;
nctemp1853=nctemp1853*Model->Ny;
nctempfloat2 *nctemp1852;
nctemp1852=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1852->d[0]=Model->Nx;
nctemp1852->d[1]=Model->Ny;
nctemp1852->a=(float *)RunMalloc(sizeof(float)*nctemp1853);
tmp1=nctemp1852;
int nctemp1864=Model->Nx;
nctemp1864=nctemp1864*Model->Ny;
nctempfloat2 *nctemp1863;
nctemp1863=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1863->d[0]=Model->Nx;
nctemp1863->d[1]=Model->Ny;
nctemp1863->a=(float *)RunMalloc(sizeof(float)*nctemp1864);
tmp2=nctemp1863;
oldperc =0.0;
ns =El2d->ts;
int nctemp1885 = ns + nt;
ne =nctemp1885;
i =ns;
int nctemp1890 = (i < ne);
while(nctemp1890){
{
struct diff* nctemp1895= Diff;
nctempfloat2* nctemp1897= El2d->sigmaxx;
nctempfloat2* nctemp1900= El2d->exx;
float nctemp1903= Model->Dx;
int nctemp1905=DiffDxplus(nctemp1895,nctemp1897,nctemp1900,nctemp1903);
struct diff* nctemp1907= Diff;
nctempfloat2* nctemp1909= El2d->sigmaxy;
nctempfloat2* nctemp1912= El2d->exy;
float nctemp1915= Model->Dx;
int nctemp1917=DiffDyminus(nctemp1907,nctemp1909,nctemp1912,nctemp1915);
struct el2d* nctemp1919= El2d;
struct model* nctemp1921= Model;
int nctemp1923=El2dvx(nctemp1919,nctemp1921);
struct diff* nctemp1925= Diff;
nctempfloat2* nctemp1927= El2d->sigmayy;
nctempfloat2* nctemp1930= El2d->eyy;
float nctemp1933= Model->Dx;
int nctemp1935=DiffDyplus(nctemp1925,nctemp1927,nctemp1930,nctemp1933);
struct diff* nctemp1937= Diff;
nctempfloat2* nctemp1939= El2d->sigmaxy;
nctempfloat2* nctemp1942= El2d->eyx;
float nctemp1945= Model->Dx;
int nctemp1947=DiffDxminus(nctemp1937,nctemp1939,nctemp1942,nctemp1945);
struct el2d* nctemp1949= El2d;
struct model* nctemp1951= Model;
int nctemp1953=El2dvy(nctemp1949,nctemp1951);
struct diff* nctemp1955= Diff;
nctempfloat2* nctemp1957= El2d->vx;
nctempfloat2* nctemp1960= El2d->exx;
float nctemp1963= Model->Dx;
int nctemp1965=DiffDxminus(nctemp1955,nctemp1957,nctemp1960,nctemp1963);
struct diff* nctemp1967= Diff;
nctempfloat2* nctemp1969= El2d->vy;
nctempfloat2* nctemp1972= El2d->eyy;
float nctemp1975= Model->Dx;
int nctemp1977=DiffDyminus(nctemp1967,nctemp1969,nctemp1972,nctemp1975);
struct diff* nctemp1979= Diff;
nctempfloat2* nctemp1981= El2d->vy;
nctempfloat2* nctemp1984= tmp1;
float nctemp1987= Model->Dx;
int nctemp1989=DiffDxplus(nctemp1979,nctemp1981,nctemp1984,nctemp1987);
struct diff* nctemp1991= Diff;
nctempfloat2* nctemp1993= El2d->vx;
nctempfloat2* nctemp1996= tmp2;
float nctemp1999= Model->Dx;
int nctemp2001=DiffDyplus(nctemp1991,nctemp1993,nctemp1996,nctemp1999);
struct el2d* nctemp2003= El2d;
struct model* nctemp2005= Model;
nctempfloat2* nctemp2007= tmp1;
nctempfloat2* nctemp2010= tmp2;
int nctemp2013=El2dexy(nctemp2003,nctemp2005,nctemp2007,nctemp2010);
struct el2d* nctemp2015= El2d;
struct model* nctemp2017= Model;
nctempfloat2* nctemp2019= tmp1;
nctempfloat2* nctemp2022= tmp2;
int nctemp2025=El2deyx(nctemp2015,nctemp2017,nctemp2019,nctemp2022);
struct el2d* nctemp2027= El2d;
struct model* nctemp2029= Model;
int nctemp2031=El2de(nctemp2027,nctemp2029);
struct el2d* nctemp2033= El2d;
struct model* nctemp2035= Model;
int nctemp2037=El2dstress(nctemp2033,nctemp2035);
k =0;
int nctemp2042 = (k < Src->Ns);
while(nctemp2042){
{
int nctemp2050=k;
sx =Src->Sx->a[nctemp2050];
int nctemp2056=k;
sy =Src->Sy->a[nctemp2056];
int nctemp2061=sx;
nctemp2061=sy*El2d->sigmaxx->d[0]+nctemp2061;
int nctemp2068=sx;
nctemp2068=sy*El2d->sigmaxx->d[0]+nctemp2068;
int nctemp2079=i;
nctemp2079=k*Src->Sqxx->d[0]+nctemp2079;
float nctemp2087 = Model->Dx * Model->Dx;
float nctemp2088 = Src->Sqxx->a[nctemp2079] / nctemp2087;
float nctemp2089 = Model->Dt * nctemp2088;
float nctemp2090 = El2d->sigmaxx->a[nctemp2068] + nctemp2089;
El2d->sigmaxx->a[nctemp2061] =nctemp2090;
int nctemp2094=sx;
nctemp2094=sy*El2d->sigmayy->d[0]+nctemp2094;
int nctemp2101=sx;
nctemp2101=sy*El2d->sigmayy->d[0]+nctemp2101;
int nctemp2112=i;
nctemp2112=k*Src->Sqyy->d[0]+nctemp2112;
float nctemp2120 = Model->Dx * Model->Dx;
float nctemp2121 = Src->Sqyy->a[nctemp2112] / nctemp2120;
float nctemp2122 = Model->Dt * nctemp2121;
float nctemp2123 = El2d->sigmayy->a[nctemp2101] + nctemp2122;
El2d->sigmayy->a[nctemp2094] =nctemp2123;
int nctemp2127=sx;
nctemp2127=sy*El2d->vx->d[0]+nctemp2127;
int nctemp2134=sx;
nctemp2134=sy*El2d->vx->d[0]+nctemp2134;
int nctemp2145=i;
nctemp2145=k*Src->Sfx->d[0]+nctemp2145;
float nctemp2153 = Model->Dx * Model->Dx;
float nctemp2154 = Src->Sfx->a[nctemp2145] / nctemp2153;
float nctemp2155 = Model->Dt * nctemp2154;
float nctemp2156 = El2d->vx->a[nctemp2134] + nctemp2155;
El2d->vx->a[nctemp2127] =nctemp2156;
int nctemp2160=sx;
nctemp2160=sy*El2d->vy->d[0]+nctemp2160;
int nctemp2167=sx;
nctemp2167=sy*El2d->vy->d[0]+nctemp2167;
int nctemp2178=i;
nctemp2178=k*Src->Sfy->d[0]+nctemp2178;
float nctemp2186 = Model->Dx * Model->Dx;
float nctemp2187 = Src->Sfy->a[nctemp2178] / nctemp2186;
float nctemp2188 = Model->Dt * nctemp2187;
float nctemp2189 = El2d->vy->a[nctemp2167] + nctemp2188;
El2d->vy->a[nctemp2160] =nctemp2189;
}
int nctemp2198 = k + 1;
k =nctemp2198;
int nctemp2199 = (k < Src->Ns);
nctemp2042=nctemp2199;
}
float nctemp2214=(float)(i);
int nctemp2227 = ne - ns;
int nctemp2229 = nctemp2227 - 1;
float nctemp2218=(float)(nctemp2229);
float nctemp2230 = nctemp2214 / nctemp2218;
float nctemp2231 = 1000.0 * nctemp2230;
perc =nctemp2231;
float nctemp2239 = perc - oldperc;
int nctemp2232 = (nctemp2239 >= 10.0);
if(nctemp2232)
{
int nctemp2248=(int)(perc);
int nctemp2252 = nctemp2248 / 10;
iperc =nctemp2252;
int nctemp2256= iperc;
int nctemp2258= 10;
int nctemp2260=LibeMod(nctemp2256,nctemp2258);
int nctemp2253 = (nctemp2260 ==0);
if(nctemp2253)
{
int nctemp2263= 4;
int nctemp2265= iperc;
int nctemp2267=LibePuti(nctemp2263,nctemp2265);
int nctemp2269= 4;
struct nctempchar1 *nctemp2273;
static struct nctempchar1 nctemp2274 = {{ 3}, (char*)"\n\0"};
nctemp2273=&nctemp2274;
nctempchar1* nctemp2271= nctemp2273;
int nctemp2275=LibePuts(nctemp2269,nctemp2271);
int nctemp2277= 4;
int nctemp2279=LibeFlush(nctemp2277);
}
oldperc =perc;
}
struct rec* nctemp2285= Rec;
int nctemp2287= i;
nctempfloat2* nctemp2289= El2d->p;
nctempfloat2* nctemp2292= El2d->vx;
nctempfloat2* nctemp2295= El2d->vy;
int nctemp2298=RecReceiver(nctemp2285,nctemp2287,nctemp2289,nctemp2292,nctemp2295);
struct el2d* nctemp2300= El2d;
int nctemp2302= i;
int nctemp2304=El2dSnap(nctemp2300,nctemp2302);
}
int nctemp2313 = i + 1;
i =nctemp2313;
int nctemp2314 = (i < ne);
nctemp1890=nctemp2314;
}
int nctemp2326 = El2d->ts + ne;
El2d->ts =nctemp2326;
return 1;
}
}
