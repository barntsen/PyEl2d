//  Translated by epsc  version December 2021  
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
struct diff {int l;
int lmax;
nctempfloat2 *coeffs;
nctempfloat1 *w;
};
typedef struct nctempdiff1 {int d[1]; struct diff *a; } nctempdiff1;
struct nctempdiff2 {int d[2]; struct diff *a; } ;
struct nctempdiff3 {int d[3]; struct diff *a; } ;
struct nctempdiff4 {int d[4]; struct diff *a; } ;
struct diff* DiffNew (int l);
int DiffDxminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDxplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
struct rec {int nr;
nctempint1 *rx;
nctempint1 *ry;
int fd;
int nt;
nctempfloat2 *p;
nctempfloat2 *sxx;
nctempfloat2 *syy;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *wrk;
int resamp;
int pit;
};
typedef struct nctemprec1 {int d[1]; struct rec *a; } nctemprec1;
struct nctemprec2 {int d[2]; struct rec *a; } ;
struct nctemprec3 {int d[3]; struct rec *a; } ;
struct nctemprec4 {int d[4]; struct rec *a; } ;
struct rec* RecNew (nctempint1 *rx,nctempint1 *ry,int nt,int resamp);
int RecReceiver (struct rec* Rec,int it,nctempfloat2 *p,nctempfloat2 *vx,nctempfloat2 *vy);
nctempfloat2 * RecGetrec (struct rec* Rec,int data);
struct src {nctempint1 *Sx;
nctempint1 *Sy;
nctempfloat2 *Sqyy;
nctempfloat2 *Sqxx;
nctempfloat2 *Sfx;
nctempfloat2 *Sfy;
int Ns;
};
typedef struct nctempsrc1 {int d[1]; struct src *a; } nctempsrc1;
struct nctempsrc2 {int d[2]; struct src *a; } ;
struct nctempsrc3 {int d[3]; struct src *a; } ;
struct nctempsrc4 {int d[4]; struct src *a; } ;
struct src* SrcNew (nctempint1 *sx,nctempint1 *sy,nctempfloat2 *sqxx,nctempfloat2 *sqyy,nctempfloat2 *sfx,nctempfloat2 *sfy);
int SrcDel (struct src* Src);
int Srcricker (nctempfloat1 *source,float t0,float f0,int nt,float dt);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Qlx;
nctempfloat2 *Qly;
nctempfloat2 *Qmx;
nctempfloat2 *Qmy;
nctempfloat2 *Qpx;
nctempfloat2 *Qpy;
nctempfloat2 *Lambda;
nctempfloat2 *Mu;
nctempfloat2 *Muxy;
nctempfloat2 *Dmuxyx;
nctempfloat2 *Dmuxyy;
nctempfloat2 *Dlambdax;
nctempfloat2 *Dlambday;
nctempfloat2 *Dmux;
nctempfloat2 *Dmuy;
nctempfloat2 *Drhopx;
nctempfloat2 *Drhopy;
nctempfloat2 *Rho;
nctempfloat2 *Rhox;
nctempfloat2 *Rhoy;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Beta1x;
nctempfloat2 *Beta2x;
nctempfloat2 *Beta1y;
nctempfloat2 *Beta2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
nctempfloat1 *dx1;
nctempfloat1 *dy1;
nctempfloat1 *dx2;
nctempfloat1 *dy2;
float Dx;
float Dt;
int Freesurface;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
;
;
;
;
int Modeld (nctempfloat1 *d,float dx,int nb);
int Modele (nctempfloat1 *d,float dx,int nb);
nctempfloat2 * Modelcopy (nctempfloat2 *a);
int Modelstaggerx (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelstaggery (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelslscoeffs (nctempfloat2 *Qx,nctempfloat2 *Qy,nctempfloat2 *modx,nctempfloat2 *mody,nctempfloat2 *coeff1x,nctempfloat2 *coeff1y,nctempfloat2 *coeff2x,nctempfloat2 *coeff2y,struct model* Model);
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Freesurface);
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Rheol,int Freesurface);
float ModelStability (struct model* Model);
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int LibeErrno;
nctempchar1 *LibeErrstr;
int LibeErrinit ();
int LibeGeterrno ();
int LibeClearerr ();
nctempchar1 * LibeGeterrstr ();
nctempchar1 * LibeGetenv (nctempchar1 *name);
;
;
;
;
;
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
;
;
;
;
;
;
;
float LibeSincosmax;
float LibeSincoslim;
float LibeLnmax;
float LibeLnmin;
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSincos (float x,float y,float sign);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeAtan (float f);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeMathinit ();
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1 * LibeStradd (nctempchar1 *t,nctempchar1 *s);
nctempchar1 * LibeStrsave (nctempchar1 *s);
int LibeIsalhpa (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoaf (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoae (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
struct LibeFdescr {int cnt;
int ptr;
int bufsize;
nctempchar1 *base;
int readflg;
int writflg;
int unbflg;
int errflg;
int eoflg;
int fd;
};
typedef struct nctempLibeFdescr1 {int d[1]; struct LibeFdescr *a; } nctempLibeFdescr1;
struct nctempLibeFdescr2 {int d[2]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr3 {int d[3]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr4 {int d[4]; struct LibeFdescr *a; } ;
;
struct nctempLibeFdescr1 *LibeFarr;
;
nctempchar1 *LibeTmpstr;
int LibeIoinit ();
int LibeFlushbuff (int fp);
int LibeFillbuff (int fp);
int LibeFlush (int fp);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibePutf (int fp,float fval,nctempchar1 *form);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibeRead (int fp,int n,nctempchar1 *buffer);
int LibeWrite (int fp,int n,nctempchar1 *buffer);
int LibeSeek (int fp,int pos,int flag);
int LibeIodelete ();
int NBLOCKS;
int NTHREADS;
int LibeSetnb (int nb);
int LibeSetnt (int nt);
int LibeGetnb ();
int LibeGetnt ();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeSystem (nctempchar1 *cmd);
int LibeInit ();
int LibeExit ();
struct el2d {nctempfloat2 *p;
nctempfloat2 *sigmaxx;
nctempfloat2 *sigmayy;
nctempfloat2 *sigmaxy;
nctempfloat2 *sigmayx;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *exx;
nctempfloat2 *eyy;
nctempfloat2 *exy;
nctempfloat2 *eyx;
nctempfloat2 *e;
nctempfloat2 *gammaxx;
nctempfloat2 *gammayy;
nctempfloat2 *gammaxy;
nctempfloat2 *gammayx;
nctempfloat2 *thetaxxx;
nctempfloat2 *thetayyy;
nctempfloat2 *thetaxyx;
nctempfloat2 *thetayxy;
int ts;
int fdp;
int fdvx;
int fdvy;
int fde;
int fdexy;
int sresamp;
nctempint1 *snpflags;
};
typedef struct nctempel2d1 {int d[1]; struct el2d *a; } nctempel2d1;
struct nctempel2d2 {int d[2]; struct el2d *a; } ;
struct nctempel2d3 {int d[3]; struct el2d *a; } ;
struct nctempel2d4 {int d[4]; struct el2d *a; } ;
struct el2d* El2dNew (struct model* Model,int sresamp,nctempint1 *snpflags)
{
struct el2d* El2d;
int i;
int j;
struct el2d *nctemp5=(struct el2d*)RunMalloc(sizeof(struct el2d));
El2d =nctemp5;
El2d->sresamp =sresamp;
El2d->snpflags=snpflags;
int nctemp23=Model->Nx;
nctemp23=nctemp23*Model->Ny;
nctempfloat2 *nctemp22;
nctemp22=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp22->d[0]=Model->Nx;
nctemp22->d[1]=Model->Ny;
nctemp22->a=(float *)RunMalloc(sizeof(float)*nctemp23);
El2d->p=nctemp22;
int nctemp34=Model->Nx;
nctemp34=nctemp34*Model->Ny;
nctempfloat2 *nctemp33;
nctemp33=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp33->d[0]=Model->Nx;
nctemp33->d[1]=Model->Ny;
nctemp33->a=(float *)RunMalloc(sizeof(float)*nctemp34);
El2d->sigmaxx=nctemp33;
int nctemp45=Model->Nx;
nctemp45=nctemp45*Model->Ny;
nctempfloat2 *nctemp44;
nctemp44=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp44->d[0]=Model->Nx;
nctemp44->d[1]=Model->Ny;
nctemp44->a=(float *)RunMalloc(sizeof(float)*nctemp45);
El2d->sigmayy=nctemp44;
int nctemp56=Model->Nx;
nctemp56=nctemp56*Model->Ny;
nctempfloat2 *nctemp55;
nctemp55=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp55->d[0]=Model->Nx;
nctemp55->d[1]=Model->Ny;
nctemp55->a=(float *)RunMalloc(sizeof(float)*nctemp56);
El2d->p=nctemp55;
int nctemp67=Model->Nx;
nctemp67=nctemp67*Model->Ny;
nctempfloat2 *nctemp66;
nctemp66=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp66->d[0]=Model->Nx;
nctemp66->d[1]=Model->Ny;
nctemp66->a=(float *)RunMalloc(sizeof(float)*nctemp67);
El2d->sigmaxy=nctemp66;
int nctemp78=Model->Nx;
nctemp78=nctemp78*Model->Ny;
nctempfloat2 *nctemp77;
nctemp77=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp77->d[0]=Model->Nx;
nctemp77->d[1]=Model->Ny;
nctemp77->a=(float *)RunMalloc(sizeof(float)*nctemp78);
El2d->sigmayx=nctemp77;
int nctemp89=Model->Nx;
nctemp89=nctemp89*Model->Ny;
nctempfloat2 *nctemp88;
nctemp88=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp88->d[0]=Model->Nx;
nctemp88->d[1]=Model->Ny;
nctemp88->a=(float *)RunMalloc(sizeof(float)*nctemp89);
El2d->vx=nctemp88;
int nctemp100=Model->Nx;
nctemp100=nctemp100*Model->Ny;
nctempfloat2 *nctemp99;
nctemp99=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp99->d[0]=Model->Nx;
nctemp99->d[1]=Model->Ny;
nctemp99->a=(float *)RunMalloc(sizeof(float)*nctemp100);
El2d->vy=nctemp99;
int nctemp111=Model->Nx;
nctemp111=nctemp111*Model->Ny;
nctempfloat2 *nctemp110;
nctemp110=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp110->d[0]=Model->Nx;
nctemp110->d[1]=Model->Ny;
nctemp110->a=(float *)RunMalloc(sizeof(float)*nctemp111);
El2d->exx=nctemp110;
int nctemp122=Model->Nx;
nctemp122=nctemp122*Model->Ny;
nctempfloat2 *nctemp121;
nctemp121=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp121->d[0]=Model->Nx;
nctemp121->d[1]=Model->Ny;
nctemp121->a=(float *)RunMalloc(sizeof(float)*nctemp122);
El2d->eyy=nctemp121;
int nctemp133=Model->Nx;
nctemp133=nctemp133*Model->Ny;
nctempfloat2 *nctemp132;
nctemp132=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp132->d[0]=Model->Nx;
nctemp132->d[1]=Model->Ny;
nctemp132->a=(float *)RunMalloc(sizeof(float)*nctemp133);
El2d->exy=nctemp132;
int nctemp144=Model->Nx;
nctemp144=nctemp144*Model->Ny;
nctempfloat2 *nctemp143;
nctemp143=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp143->d[0]=Model->Nx;
nctemp143->d[1]=Model->Ny;
nctemp143->a=(float *)RunMalloc(sizeof(float)*nctemp144);
El2d->eyx=nctemp143;
int nctemp155=Model->Nx;
nctemp155=nctemp155*Model->Ny;
nctempfloat2 *nctemp154;
nctemp154=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp154->d[0]=Model->Nx;
nctemp154->d[1]=Model->Ny;
nctemp154->a=(float *)RunMalloc(sizeof(float)*nctemp155);
El2d->e=nctemp154;
int nctemp166=Model->Nx;
nctemp166=nctemp166*Model->Ny;
nctempfloat2 *nctemp165;
nctemp165=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp165->d[0]=Model->Nx;
nctemp165->d[1]=Model->Ny;
nctemp165->a=(float *)RunMalloc(sizeof(float)*nctemp166);
El2d->gammaxx=nctemp165;
int nctemp177=Model->Nx;
nctemp177=nctemp177*Model->Ny;
nctempfloat2 *nctemp176;
nctemp176=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp176->d[0]=Model->Nx;
nctemp176->d[1]=Model->Ny;
nctemp176->a=(float *)RunMalloc(sizeof(float)*nctemp177);
El2d->gammayy=nctemp176;
int nctemp188=Model->Nx;
nctemp188=nctemp188*Model->Ny;
nctempfloat2 *nctemp187;
nctemp187=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp187->d[0]=Model->Nx;
nctemp187->d[1]=Model->Ny;
nctemp187->a=(float *)RunMalloc(sizeof(float)*nctemp188);
El2d->gammaxy=nctemp187;
int nctemp199=Model->Nx;
nctemp199=nctemp199*Model->Ny;
nctempfloat2 *nctemp198;
nctemp198=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp198->d[0]=Model->Nx;
nctemp198->d[1]=Model->Ny;
nctemp198->a=(float *)RunMalloc(sizeof(float)*nctemp199);
El2d->gammayx=nctemp198;
int nctemp210=Model->Nx;
nctemp210=nctemp210*Model->Ny;
nctempfloat2 *nctemp209;
nctemp209=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp209->d[0]=Model->Nx;
nctemp209->d[1]=Model->Ny;
nctemp209->a=(float *)RunMalloc(sizeof(float)*nctemp210);
El2d->thetaxxx=nctemp209;
int nctemp221=Model->Nx;
nctemp221=nctemp221*Model->Ny;
nctempfloat2 *nctemp220;
nctemp220=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp220->d[0]=Model->Nx;
nctemp220->d[1]=Model->Ny;
nctemp220->a=(float *)RunMalloc(sizeof(float)*nctemp221);
El2d->thetayyy=nctemp220;
int nctemp232=Model->Nx;
nctemp232=nctemp232*Model->Ny;
nctempfloat2 *nctemp231;
nctemp231=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp231->d[0]=Model->Nx;
nctemp231->d[1]=Model->Ny;
nctemp231->a=(float *)RunMalloc(sizeof(float)*nctemp232);
El2d->thetayxy=nctemp231;
int nctemp243=Model->Nx;
nctemp243=nctemp243*Model->Ny;
nctempfloat2 *nctemp242;
nctemp242=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp242->d[0]=Model->Nx;
nctemp242->d[1]=Model->Ny;
nctemp242->a=(float *)RunMalloc(sizeof(float)*nctemp243);
El2d->thetaxyx=nctemp242;
i =0;
int nctemp252 = (i < Model->Nx);
while(nctemp252){
{
j =0;
int nctemp260 = (j < Model->Ny);
while(nctemp260){
{
int nctemp267=i;
nctemp267=j*El2d->p->d[0]+nctemp267;
El2d->p->a[nctemp267] =0.0;
int nctemp274=i;
nctemp274=j*El2d->sigmaxx->d[0]+nctemp274;
El2d->sigmaxx->a[nctemp274] =0.0;
int nctemp281=i;
nctemp281=j*El2d->sigmayy->d[0]+nctemp281;
El2d->sigmayy->a[nctemp281] =0.0;
int nctemp288=i;
nctemp288=j*El2d->sigmaxy->d[0]+nctemp288;
El2d->sigmaxy->a[nctemp288] =0.0;
int nctemp295=i;
nctemp295=j*El2d->sigmayx->d[0]+nctemp295;
El2d->sigmayx->a[nctemp295] =0.0;
int nctemp302=i;
nctemp302=j*El2d->vx->d[0]+nctemp302;
El2d->vx->a[nctemp302] =0.0;
int nctemp309=i;
nctemp309=j*El2d->vy->d[0]+nctemp309;
El2d->vy->a[nctemp309] =0.0;
int nctemp316=i;
nctemp316=j*El2d->exx->d[0]+nctemp316;
El2d->exx->a[nctemp316] =0.0;
int nctemp323=i;
nctemp323=j*El2d->eyy->d[0]+nctemp323;
El2d->eyy->a[nctemp323] =0.0;
int nctemp330=i;
nctemp330=j*El2d->exy->d[0]+nctemp330;
El2d->exy->a[nctemp330] =0.0;
int nctemp337=i;
nctemp337=j*El2d->eyx->d[0]+nctemp337;
El2d->eyx->a[nctemp337] =0.0;
int nctemp344=i;
nctemp344=j*El2d->e->d[0]+nctemp344;
El2d->e->a[nctemp344] =0.0;
int nctemp351=i;
nctemp351=j*El2d->gammaxx->d[0]+nctemp351;
El2d->gammaxx->a[nctemp351] =0.0;
int nctemp358=i;
nctemp358=j*El2d->gammayy->d[0]+nctemp358;
El2d->gammayy->a[nctemp358] =0.0;
int nctemp365=i;
nctemp365=j*El2d->gammaxy->d[0]+nctemp365;
El2d->gammaxy->a[nctemp365] =0.0;
int nctemp372=i;
nctemp372=j*El2d->gammayx->d[0]+nctemp372;
El2d->gammayx->a[nctemp372] =0.0;
int nctemp379=i;
nctemp379=j*El2d->thetaxxx->d[0]+nctemp379;
El2d->thetaxxx->a[nctemp379] =0.0;
int nctemp386=i;
nctemp386=j*El2d->thetayyy->d[0]+nctemp386;
El2d->thetayyy->a[nctemp386] =0.0;
int nctemp393=i;
nctemp393=j*El2d->thetayxy->d[0]+nctemp393;
El2d->thetayxy->a[nctemp393] =0.0;
int nctemp400=i;
nctemp400=j*El2d->thetaxyx->d[0]+nctemp400;
El2d->thetaxyx->a[nctemp400] =0.0;
El2d->ts =0;
}
int nctemp416 = j + 1;
j =nctemp416;
int nctemp417 = (j < Model->Ny);
nctemp260=nctemp417;
}
}
int nctemp429 = i + 1;
i =nctemp429;
int nctemp430 = (i < Model->Nx);
nctemp252=nctemp430;
}
int nctemp437=0;
int nctemp434 = (El2d->snpflags->a[nctemp437] ==1);
if(nctemp434)
{
struct nctempchar1 *nctemp446;
static struct nctempchar1 nctemp447 = {{ 10}, (char*)"snp-p.bin\0"};
nctemp446=&nctemp447;
nctempchar1* nctemp444= nctemp446;
struct nctempchar1 *nctemp450;
static struct nctempchar1 nctemp451 = {{ 2}, (char*)"w\0"};
nctemp450=&nctemp451;
nctempchar1* nctemp448= nctemp450;
int nctemp452=LibeOpen(nctemp444,nctemp448);
El2d->fdp =nctemp452;
}
int nctemp456=1;
int nctemp453 = (El2d->snpflags->a[nctemp456] ==1);
if(nctemp453)
{
struct nctempchar1 *nctemp465;
static struct nctempchar1 nctemp466 = {{ 11}, (char*)"snp-vx.bin\0"};
nctemp465=&nctemp466;
nctempchar1* nctemp463= nctemp465;
struct nctempchar1 *nctemp469;
static struct nctempchar1 nctemp470 = {{ 2}, (char*)"w\0"};
nctemp469=&nctemp470;
nctempchar1* nctemp467= nctemp469;
int nctemp471=LibeOpen(nctemp463,nctemp467);
El2d->fdvx =nctemp471;
}
int nctemp475=2;
int nctemp472 = (El2d->snpflags->a[nctemp475] ==1);
if(nctemp472)
{
struct nctempchar1 *nctemp484;
static struct nctempchar1 nctemp485 = {{ 11}, (char*)"snp-vy.bin\0"};
nctemp484=&nctemp485;
nctempchar1* nctemp482= nctemp484;
struct nctempchar1 *nctemp488;
static struct nctempchar1 nctemp489 = {{ 2}, (char*)"w\0"};
nctemp488=&nctemp489;
nctempchar1* nctemp486= nctemp488;
int nctemp490=LibeOpen(nctemp482,nctemp486);
El2d->fdvy =nctemp490;
}
int nctemp494=3;
int nctemp491 = (El2d->snpflags->a[nctemp494] ==1);
if(nctemp491)
{
struct nctempchar1 *nctemp503;
static struct nctempchar1 nctemp504 = {{ 10}, (char*)"snp-e.bin\0"};
nctemp503=&nctemp504;
nctempchar1* nctemp501= nctemp503;
struct nctempchar1 *nctemp507;
static struct nctempchar1 nctemp508 = {{ 2}, (char*)"w\0"};
nctemp507=&nctemp508;
nctempchar1* nctemp505= nctemp507;
int nctemp509=LibeOpen(nctemp501,nctemp505);
El2d->fde =nctemp509;
}
struct nctempchar1 *nctemp513;
static struct nctempchar1 nctemp514 = {{ 9}, (char*)"snap 4: \0"};
nctemp513=&nctemp514;
nctempchar1* nctemp511= nctemp513;
int nctemp515=LibePs(nctemp511);
int nctemp519=4;
int nctemp517= El2d->snpflags->a[nctemp519];
int nctemp521=LibePi(nctemp517);
struct nctempchar1 *nctemp525;
static struct nctempchar1 nctemp526 = {{ 3}, (char*)"\n\0"};
nctemp525=&nctemp526;
nctempchar1* nctemp523= nctemp525;
int nctemp527=LibePs(nctemp523);
int nctemp531=4;
int nctemp528 = (El2d->snpflags->a[nctemp531] ==1);
if(nctemp528)
{
struct nctempchar1 *nctemp540;
static struct nctempchar1 nctemp541 = {{ 12}, (char*)"snp-exy.bin\0"};
nctemp540=&nctemp541;
nctempchar1* nctemp538= nctemp540;
struct nctempchar1 *nctemp544;
static struct nctempchar1 nctemp545 = {{ 2}, (char*)"w\0"};
nctemp544=&nctemp545;
nctempchar1* nctemp542= nctemp544;
int nctemp546=LibeOpen(nctemp538,nctemp542);
El2d->fdexy =nctemp546;
}
return El2d;
}
__global__ void kernel_El2dvx (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp558=0;
int nctemp560=nx;
int nctemp563=0;
int nctemp565=ny;
int nctemp556=(nctemp560-nctemp558)*(nctemp565-nctemp563);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp556;nctempno+=blockDim.x*gridDim.x){
j=nctemp563+nctempno/(nctemp560-nctemp558);
i=nctemp558+nctempno%(nctemp560-nctemp558);
{
int nctemp570=i;
nctemp570=j*El2d->vx->d[0]+nctemp570;
int nctemp590=i;
nctemp590=j*Model->Rhox->d[0]+nctemp590;
float nctemp593 = Model->Dt * Model->Rhox->a[nctemp590];
int nctemp598=i;
nctemp598=j*El2d->exx->d[0]+nctemp598;
int nctemp602=i;
nctemp602=j*El2d->exy->d[0]+nctemp602;
float nctemp605 = El2d->exx->a[nctemp598] + El2d->exy->a[nctemp602];
float nctemp606 = nctemp593 * nctemp605;
int nctemp615=i;
nctemp615=j*El2d->thetaxxx->d[0]+nctemp615;
float nctemp618 = Model->Dt * El2d->thetaxxx->a[nctemp615];
int nctemp620=i;
nctemp620=j*Model->Drhopx->d[0]+nctemp620;
float nctemp623 = nctemp618 * Model->Drhopx->a[nctemp620];
float nctemp624 = nctemp606 + nctemp623;
int nctemp633=i;
nctemp633=j*El2d->thetayxy->d[0]+nctemp633;
float nctemp636 = Model->Dt * El2d->thetayxy->a[nctemp633];
int nctemp638=i;
nctemp638=j*Model->Drhopy->d[0]+nctemp638;
float nctemp641 = nctemp636 * Model->Drhopy->a[nctemp638];
float nctemp642 = nctemp624 + nctemp641;
int nctemp644=i;
nctemp644=j*El2d->vx->d[0]+nctemp644;
float nctemp647 = nctemp642 + El2d->vx->a[nctemp644];
El2d->vx->a[nctemp570] =nctemp647;
int nctemp651=i;
nctemp651=j*El2d->thetaxxx->d[0]+nctemp651;
int nctemp661=i;
nctemp661=j*Model->Eta1x->d[0]+nctemp661;
int nctemp665=i;
nctemp665=j*El2d->thetaxxx->d[0]+nctemp665;
float nctemp668 = Model->Eta1x->a[nctemp661] * El2d->thetaxxx->a[nctemp665];
int nctemp673=i;
nctemp673=j*Model->Eta2x->d[0]+nctemp673;
int nctemp677=i;
nctemp677=j*El2d->exx->d[0]+nctemp677;
float nctemp680 = Model->Eta2x->a[nctemp673] * El2d->exx->a[nctemp677];
float nctemp681 = nctemp668 + nctemp680;
El2d->thetaxxx->a[nctemp651] =nctemp681;
int nctemp685=i;
nctemp685=j*El2d->thetayxy->d[0]+nctemp685;
int nctemp695=i;
nctemp695=j*Model->Eta1y->d[0]+nctemp695;
int nctemp699=i;
nctemp699=j*El2d->thetayxy->d[0]+nctemp699;
float nctemp702 = Model->Eta1y->a[nctemp695] * El2d->thetayxy->a[nctemp699];
int nctemp707=i;
nctemp707=j*Model->Eta2y->d[0]+nctemp707;
int nctemp711=i;
nctemp711=j*El2d->exy->d[0]+nctemp711;
float nctemp714 = Model->Eta2y->a[nctemp707] * El2d->exy->a[nctemp711];
float nctemp715 = nctemp702 + nctemp714;
El2d->thetayxy->a[nctemp685] =nctemp715;
}
}
}
int El2dvx (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvx<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dvy (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp726=0;
int nctemp728=nx;
int nctemp731=0;
int nctemp733=ny;
int nctemp724=(nctemp728-nctemp726)*(nctemp733-nctemp731);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp724;nctempno+=blockDim.x*gridDim.x){
j=nctemp731+nctempno/(nctemp728-nctemp726);
i=nctemp726+nctempno%(nctemp728-nctemp726);
{
int nctemp738=i;
nctemp738=j*El2d->vy->d[0]+nctemp738;
int nctemp758=i;
nctemp758=j*Model->Rhoy->d[0]+nctemp758;
float nctemp761 = Model->Dt * Model->Rhoy->a[nctemp758];
int nctemp766=i;
nctemp766=j*El2d->eyy->d[0]+nctemp766;
int nctemp770=i;
nctemp770=j*El2d->eyx->d[0]+nctemp770;
float nctemp773 = El2d->eyy->a[nctemp766] + El2d->eyx->a[nctemp770];
float nctemp774 = nctemp761 * nctemp773;
int nctemp783=i;
nctemp783=j*El2d->thetayyy->d[0]+nctemp783;
float nctemp786 = Model->Dt * El2d->thetayyy->a[nctemp783];
int nctemp788=i;
nctemp788=j*Model->Drhopy->d[0]+nctemp788;
float nctemp791 = nctemp786 * Model->Drhopy->a[nctemp788];
float nctemp792 = nctemp774 + nctemp791;
int nctemp801=i;
nctemp801=j*El2d->thetaxyx->d[0]+nctemp801;
float nctemp804 = Model->Dt * El2d->thetaxyx->a[nctemp801];
int nctemp806=i;
nctemp806=j*Model->Drhopx->d[0]+nctemp806;
float nctemp809 = nctemp804 * Model->Drhopx->a[nctemp806];
float nctemp810 = nctemp792 + nctemp809;
int nctemp812=i;
nctemp812=j*El2d->vy->d[0]+nctemp812;
float nctemp815 = nctemp810 + El2d->vy->a[nctemp812];
El2d->vy->a[nctemp738] =nctemp815;
int nctemp819=i;
nctemp819=j*El2d->thetayyy->d[0]+nctemp819;
int nctemp829=i;
nctemp829=j*Model->Eta1y->d[0]+nctemp829;
int nctemp833=i;
nctemp833=j*El2d->thetayyy->d[0]+nctemp833;
float nctemp836 = Model->Eta1y->a[nctemp829] * El2d->thetayyy->a[nctemp833];
int nctemp841=i;
nctemp841=j*Model->Eta2y->d[0]+nctemp841;
int nctemp845=i;
nctemp845=j*El2d->eyy->d[0]+nctemp845;
float nctemp848 = Model->Eta2y->a[nctemp841] * El2d->eyy->a[nctemp845];
float nctemp849 = nctemp836 + nctemp848;
El2d->thetayyy->a[nctemp819] =nctemp849;
int nctemp853=i;
nctemp853=j*El2d->thetaxyx->d[0]+nctemp853;
int nctemp863=i;
nctemp863=j*Model->Eta1x->d[0]+nctemp863;
int nctemp867=i;
nctemp867=j*El2d->thetaxyx->d[0]+nctemp867;
float nctemp870 = Model->Eta1x->a[nctemp863] * El2d->thetaxyx->a[nctemp867];
int nctemp875=i;
nctemp875=j*Model->Eta2x->d[0]+nctemp875;
int nctemp879=i;
nctemp879=j*El2d->eyx->d[0]+nctemp879;
float nctemp882 = Model->Eta2x->a[nctemp875] * El2d->eyx->a[nctemp879];
float nctemp883 = nctemp870 + nctemp882;
El2d->thetaxyx->a[nctemp853] =nctemp883;
}
}
}
int El2dvy (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvy<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2de (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp894=0;
int nctemp896=nx;
int nctemp899=0;
int nctemp901=ny;
int nctemp892=(nctemp896-nctemp894)*(nctemp901-nctemp899);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp892;nctempno+=blockDim.x*gridDim.x){
j=nctemp899+nctempno/(nctemp896-nctemp894);
i=nctemp894+nctempno%(nctemp896-nctemp894);
{
int nctemp906=i;
nctemp906=j*El2d->e->d[0]+nctemp906;
int nctemp913=i;
nctemp913=j*El2d->exx->d[0]+nctemp913;
int nctemp917=i;
nctemp917=j*El2d->eyy->d[0]+nctemp917;
float nctemp920 = El2d->exx->a[nctemp913] + El2d->eyy->a[nctemp917];
El2d->e->a[nctemp906] =nctemp920;
}
}
}
int El2de (struct el2d* El2d,struct model* Model)
{
  kernel_El2de<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp931=0;
int nctemp933=nx;
int nctemp936=0;
int nctemp938=ny;
int nctemp929=(nctemp933-nctemp931)*(nctemp938-nctemp936);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp929;nctempno+=blockDim.x*gridDim.x){
j=nctemp936+nctempno/(nctemp933-nctemp931);
i=nctemp931+nctempno%(nctemp933-nctemp931);
{
int nctemp943=i;
nctemp943=j*El2d->exy->d[0]+nctemp943;
int nctemp954=i;
nctemp954=j*tmp1->d[0]+nctemp954;
int nctemp958=i;
nctemp958=j*tmp2->d[0]+nctemp958;
float nctemp961 = tmp1->a[nctemp954] + tmp2->a[nctemp958];
float nctemp962 = 0.5 * nctemp961;
El2d->exy->a[nctemp943] =nctemp962;
}
}
}
int El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2dexy<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp973=0;
int nctemp975=nx;
int nctemp978=0;
int nctemp980=ny;
int nctemp971=(nctemp975-nctemp973)*(nctemp980-nctemp978);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp971;nctempno+=blockDim.x*gridDim.x){
j=nctemp978+nctempno/(nctemp975-nctemp973);
i=nctemp973+nctempno%(nctemp975-nctemp973);
{
int nctemp985=i;
nctemp985=j*El2d->eyx->d[0]+nctemp985;
int nctemp996=i;
nctemp996=j*tmp1->d[0]+nctemp996;
int nctemp1000=i;
nctemp1000=j*tmp2->d[0]+nctemp1000;
float nctemp1003 = tmp1->a[nctemp996] + tmp2->a[nctemp1000];
float nctemp1004 = 0.5 * nctemp1003;
El2d->eyx->a[nctemp985] =nctemp1004;
}
}
}
int El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2deyx<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2dstress (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp1015=0;
int nctemp1017=nx;
int nctemp1020=0;
int nctemp1022=ny;
int nctemp1013=(nctemp1017-nctemp1015)*(nctemp1022-nctemp1020);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp1013;nctempno+=blockDim.x*gridDim.x){
j=nctemp1020+nctempno/(nctemp1017-nctemp1015);
i=nctemp1015+nctempno%(nctemp1017-nctemp1015);
{
int nctemp1027=i;
nctemp1027=j*El2d->sigmaxx->d[0]+nctemp1027;
int nctemp1050=i;
nctemp1050=j*Model->Lambda->d[0]+nctemp1050;
float nctemp1053 = Model->Dt * Model->Lambda->a[nctemp1050];
int nctemp1058=i;
nctemp1058=j*El2d->exx->d[0]+nctemp1058;
int nctemp1062=i;
nctemp1062=j*El2d->eyy->d[0]+nctemp1062;
float nctemp1065 = El2d->exx->a[nctemp1058] + El2d->eyy->a[nctemp1062];
float nctemp1066 = nctemp1053 * nctemp1065;
float nctemp1078 = 2.0 * Model->Dt;
int nctemp1080=i;
nctemp1080=j*Model->Mu->d[0]+nctemp1080;
float nctemp1083 = nctemp1078 * Model->Mu->a[nctemp1080];
int nctemp1085=i;
nctemp1085=j*El2d->exx->d[0]+nctemp1085;
float nctemp1088 = nctemp1083 * El2d->exx->a[nctemp1085];
float nctemp1089 = nctemp1066 + nctemp1088;
int nctemp1101=i;
nctemp1101=j*El2d->gammaxx->d[0]+nctemp1101;
int nctemp1105=i;
nctemp1105=j*Model->Dlambdax->d[0]+nctemp1105;
float nctemp1108 = El2d->gammaxx->a[nctemp1101] * Model->Dlambdax->a[nctemp1105];
int nctemp1113=i;
nctemp1113=j*El2d->gammayy->d[0]+nctemp1113;
int nctemp1117=i;
nctemp1117=j*Model->Dlambday->d[0]+nctemp1117;
float nctemp1120 = El2d->gammayy->a[nctemp1113] * Model->Dlambday->a[nctemp1117];
float nctemp1121 = nctemp1108 + nctemp1120;
float nctemp1122 = Model->Dt * nctemp1121;
float nctemp1123 = nctemp1089 + nctemp1122;
float nctemp1135 = 2.0 * Model->Dt;
int nctemp1137=i;
nctemp1137=j*El2d->gammaxx->d[0]+nctemp1137;
float nctemp1140 = nctemp1135 * El2d->gammaxx->a[nctemp1137];
int nctemp1142=i;
nctemp1142=j*Model->Dmux->d[0]+nctemp1142;
float nctemp1145 = nctemp1140 * Model->Dmux->a[nctemp1142];
float nctemp1146 = nctemp1123 + nctemp1145;
int nctemp1148=i;
nctemp1148=j*El2d->sigmaxx->d[0]+nctemp1148;
float nctemp1151 = nctemp1146 + El2d->sigmaxx->a[nctemp1148];
El2d->sigmaxx->a[nctemp1027] =nctemp1151;
int nctemp1155=i;
nctemp1155=j*El2d->sigmayy->d[0]+nctemp1155;
int nctemp1178=i;
nctemp1178=j*Model->Lambda->d[0]+nctemp1178;
float nctemp1181 = Model->Dt * Model->Lambda->a[nctemp1178];
int nctemp1186=i;
nctemp1186=j*El2d->exx->d[0]+nctemp1186;
int nctemp1190=i;
nctemp1190=j*El2d->eyy->d[0]+nctemp1190;
float nctemp1193 = El2d->exx->a[nctemp1186] + El2d->eyy->a[nctemp1190];
float nctemp1194 = nctemp1181 * nctemp1193;
float nctemp1206 = 2.0 * Model->Dt;
int nctemp1208=i;
nctemp1208=j*Model->Mu->d[0]+nctemp1208;
float nctemp1211 = nctemp1206 * Model->Mu->a[nctemp1208];
int nctemp1213=i;
nctemp1213=j*El2d->eyy->d[0]+nctemp1213;
float nctemp1216 = nctemp1211 * El2d->eyy->a[nctemp1213];
float nctemp1217 = nctemp1194 + nctemp1216;
int nctemp1229=i;
nctemp1229=j*El2d->gammaxx->d[0]+nctemp1229;
int nctemp1233=i;
nctemp1233=j*Model->Dlambdax->d[0]+nctemp1233;
float nctemp1236 = El2d->gammaxx->a[nctemp1229] * Model->Dlambdax->a[nctemp1233];
int nctemp1241=i;
nctemp1241=j*El2d->gammayy->d[0]+nctemp1241;
int nctemp1245=i;
nctemp1245=j*Model->Dlambday->d[0]+nctemp1245;
float nctemp1248 = El2d->gammayy->a[nctemp1241] * Model->Dlambday->a[nctemp1245];
float nctemp1249 = nctemp1236 + nctemp1248;
float nctemp1250 = Model->Dt * nctemp1249;
float nctemp1251 = nctemp1217 + nctemp1250;
float nctemp1263 = 2.0 * Model->Dt;
int nctemp1265=i;
nctemp1265=j*El2d->gammayy->d[0]+nctemp1265;
float nctemp1268 = nctemp1263 * El2d->gammayy->a[nctemp1265];
int nctemp1270=i;
nctemp1270=j*Model->Dmuy->d[0]+nctemp1270;
float nctemp1273 = nctemp1268 * Model->Dmuy->a[nctemp1270];
float nctemp1274 = nctemp1251 + nctemp1273;
int nctemp1276=i;
nctemp1276=j*El2d->sigmayy->d[0]+nctemp1276;
float nctemp1279 = nctemp1274 + El2d->sigmayy->a[nctemp1276];
El2d->sigmayy->a[nctemp1155] =nctemp1279;
int nctemp1283=i;
nctemp1283=j*El2d->p->d[0]+nctemp1283;
int nctemp1294=i;
nctemp1294=j*El2d->sigmaxx->d[0]+nctemp1294;
int nctemp1298=i;
nctemp1298=j*El2d->sigmayy->d[0]+nctemp1298;
float nctemp1301 = El2d->sigmaxx->a[nctemp1294] + El2d->sigmayy->a[nctemp1298];
float nctemp1302 = 0.5 * nctemp1301;
El2d->p->a[nctemp1283] =nctemp1302;
int nctemp1306=i;
nctemp1306=j*El2d->sigmaxy->d[0]+nctemp1306;
float nctemp1326 = 2.0 * Model->Dt;
int nctemp1328=i;
nctemp1328=j*Model->Muxy->d[0]+nctemp1328;
float nctemp1331 = nctemp1326 * Model->Muxy->a[nctemp1328];
int nctemp1333=i;
nctemp1333=j*El2d->exy->d[0]+nctemp1333;
float nctemp1336 = nctemp1331 * El2d->exy->a[nctemp1333];
float nctemp1348 = 2.0 * Model->Dt;
int nctemp1350=i;
nctemp1350=j*El2d->gammaxy->d[0]+nctemp1350;
float nctemp1353 = nctemp1348 * El2d->gammaxy->a[nctemp1350];
int nctemp1355=i;
nctemp1355=j*Model->Dmuxyy->d[0]+nctemp1355;
float nctemp1358 = nctemp1353 * Model->Dmuxyy->a[nctemp1355];
float nctemp1359 = nctemp1336 + nctemp1358;
int nctemp1361=i;
nctemp1361=j*El2d->sigmaxy->d[0]+nctemp1361;
float nctemp1364 = nctemp1359 + El2d->sigmaxy->a[nctemp1361];
El2d->sigmaxy->a[nctemp1306] =nctemp1364;
int nctemp1368=i;
nctemp1368=j*El2d->sigmayx->d[0]+nctemp1368;
float nctemp1388 = 2.0 * Model->Dt;
int nctemp1390=i;
nctemp1390=j*Model->Muxy->d[0]+nctemp1390;
float nctemp1393 = nctemp1388 * Model->Muxy->a[nctemp1390];
int nctemp1395=i;
nctemp1395=j*El2d->exy->d[0]+nctemp1395;
float nctemp1398 = nctemp1393 * El2d->exy->a[nctemp1395];
float nctemp1410 = 2.0 * Model->Dt;
int nctemp1412=i;
nctemp1412=j*El2d->gammayx->d[0]+nctemp1412;
float nctemp1415 = nctemp1410 * El2d->gammayx->a[nctemp1412];
int nctemp1417=i;
nctemp1417=j*Model->Dmuxyx->d[0]+nctemp1417;
float nctemp1420 = nctemp1415 * Model->Dmuxyx->a[nctemp1417];
float nctemp1421 = nctemp1398 + nctemp1420;
int nctemp1423=i;
nctemp1423=j*El2d->sigmayx->d[0]+nctemp1423;
float nctemp1426 = nctemp1421 + El2d->sigmayx->a[nctemp1423];
El2d->sigmayx->a[nctemp1368] =nctemp1426;
int nctemp1430=i;
nctemp1430=j*El2d->gammaxx->d[0]+nctemp1430;
int nctemp1440=i;
nctemp1440=j*Model->Alpha1x->d[0]+nctemp1440;
int nctemp1444=i;
nctemp1444=j*El2d->gammaxx->d[0]+nctemp1444;
float nctemp1447 = Model->Alpha1x->a[nctemp1440] * El2d->gammaxx->a[nctemp1444];
int nctemp1452=i;
nctemp1452=j*Model->Alpha2x->d[0]+nctemp1452;
int nctemp1456=i;
nctemp1456=j*El2d->exx->d[0]+nctemp1456;
float nctemp1459 = Model->Alpha2x->a[nctemp1452] * El2d->exx->a[nctemp1456];
float nctemp1460 = nctemp1447 + nctemp1459;
El2d->gammaxx->a[nctemp1430] =nctemp1460;
int nctemp1464=i;
nctemp1464=j*El2d->gammayy->d[0]+nctemp1464;
int nctemp1474=i;
nctemp1474=j*Model->Alpha1y->d[0]+nctemp1474;
int nctemp1478=i;
nctemp1478=j*El2d->gammayy->d[0]+nctemp1478;
float nctemp1481 = Model->Alpha1y->a[nctemp1474] * El2d->gammayy->a[nctemp1478];
int nctemp1486=i;
nctemp1486=j*Model->Alpha2y->d[0]+nctemp1486;
int nctemp1490=i;
nctemp1490=j*El2d->eyy->d[0]+nctemp1490;
float nctemp1493 = Model->Alpha2y->a[nctemp1486] * El2d->eyy->a[nctemp1490];
float nctemp1494 = nctemp1481 + nctemp1493;
El2d->gammayy->a[nctemp1464] =nctemp1494;
int nctemp1498=i;
nctemp1498=j*El2d->gammaxy->d[0]+nctemp1498;
int nctemp1508=i;
nctemp1508=j*Model->Beta1y->d[0]+nctemp1508;
int nctemp1512=i;
nctemp1512=j*El2d->gammaxy->d[0]+nctemp1512;
float nctemp1515 = Model->Beta1y->a[nctemp1508] * El2d->gammaxy->a[nctemp1512];
int nctemp1520=i;
nctemp1520=j*Model->Beta2y->d[0]+nctemp1520;
int nctemp1524=i;
nctemp1524=j*El2d->exy->d[0]+nctemp1524;
float nctemp1527 = Model->Beta2y->a[nctemp1520] * El2d->exy->a[nctemp1524];
float nctemp1528 = nctemp1515 + nctemp1527;
El2d->gammaxy->a[nctemp1498] =nctemp1528;
int nctemp1532=i;
nctemp1532=j*El2d->gammayx->d[0]+nctemp1532;
int nctemp1542=i;
nctemp1542=j*Model->Beta1x->d[0]+nctemp1542;
int nctemp1546=i;
nctemp1546=j*El2d->gammayx->d[0]+nctemp1546;
float nctemp1549 = Model->Beta1x->a[nctemp1542] * El2d->gammayx->a[nctemp1546];
int nctemp1554=i;
nctemp1554=j*Model->Beta2x->d[0]+nctemp1554;
int nctemp1558=i;
nctemp1558=j*El2d->eyx->d[0]+nctemp1558;
float nctemp1561 = Model->Beta2x->a[nctemp1554] * El2d->eyx->a[nctemp1558];
float nctemp1562 = nctemp1549 + nctemp1561;
El2d->gammayx->a[nctemp1532] =nctemp1562;
}
}
}
int El2dstress (struct el2d* El2d,struct model* Model)
{
  kernel_El2dstress<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
int El2dSnap (struct el2d* El2d,int it)
{
int n;
int Nx;
int Ny;
nctempchar1 *tmp;
int nctemp1563 = (El2d->sresamp <= 0);
if(nctemp1563)
{
return 1;
}
int nctemp1572=El2d->sigmaxx->d[0];Nx =nctemp1572;
int nctemp1580=El2d->sigmaxx->d[1];Ny =nctemp1580;
int nctemp1592 = Nx * Ny;
n =nctemp1592;
int nctemp1596= it;
int nctemp1598= El2d->sresamp;
int nctemp1600=LibeMod(nctemp1596,nctemp1598);
int nctemp1593 = (nctemp1600 ==0);
if(nctemp1593)
{
int nctemp1605=0;
int nctemp1602 = (El2d->snpflags->a[nctemp1605] ==1);
if(nctemp1602)
{
nctempchar1 nctemp1614;
nctempchar1 *nctemp1613;
nctemp1614=*(nctempchar1*)(El2d->p);
int nctemp1621 = 4 * n;
nctemp1614.d[0]=nctemp1621;
nctemp1613=&nctemp1614;
tmp=nctemp1613;
int nctemp1623= El2d->fdp;
int nctemp1630 = 4 * n;
int nctemp1625= nctemp1630;
nctempchar1* nctemp1631= tmp;
int nctemp1634=LibeWrite(nctemp1623,nctemp1625,nctemp1631);
}
int nctemp1638=1;
int nctemp1635 = (El2d->snpflags->a[nctemp1638] ==1);
if(nctemp1635)
{
nctempchar1 nctemp1647;
nctempchar1 *nctemp1646;
nctemp1647=*(nctempchar1*)(El2d->vx);
int nctemp1654 = 4 * n;
nctemp1647.d[0]=nctemp1654;
nctemp1646=&nctemp1647;
tmp=nctemp1646;
int nctemp1656= El2d->fdvx;
int nctemp1663 = 4 * n;
int nctemp1658= nctemp1663;
nctempchar1* nctemp1664= tmp;
int nctemp1667=LibeWrite(nctemp1656,nctemp1658,nctemp1664);
}
int nctemp1671=2;
int nctemp1668 = (El2d->snpflags->a[nctemp1671] ==1);
if(nctemp1668)
{
nctempchar1 nctemp1680;
nctempchar1 *nctemp1679;
nctemp1680=*(nctempchar1*)(El2d->vy);
int nctemp1687 = 4 * n;
nctemp1680.d[0]=nctemp1687;
nctemp1679=&nctemp1680;
tmp=nctemp1679;
int nctemp1689= El2d->fdvy;
int nctemp1696 = 4 * n;
int nctemp1691= nctemp1696;
nctempchar1* nctemp1697= tmp;
int nctemp1700=LibeWrite(nctemp1689,nctemp1691,nctemp1697);
}
int nctemp1704=3;
int nctemp1701 = (El2d->snpflags->a[nctemp1704] ==1);
if(nctemp1701)
{
nctempchar1 nctemp1713;
nctempchar1 *nctemp1712;
nctemp1713=*(nctempchar1*)(El2d->e);
int nctemp1720 = 4 * n;
nctemp1713.d[0]=nctemp1720;
nctemp1712=&nctemp1713;
tmp=nctemp1712;
int nctemp1722= El2d->fde;
int nctemp1729 = 4 * n;
int nctemp1724= nctemp1729;
nctempchar1* nctemp1730= tmp;
int nctemp1733=LibeWrite(nctemp1722,nctemp1724,nctemp1730);
}
int nctemp1737=4;
int nctemp1734 = (El2d->snpflags->a[nctemp1737] ==1);
if(nctemp1734)
{
nctempchar1 nctemp1746;
nctempchar1 *nctemp1745;
nctemp1746=*(nctempchar1*)(El2d->exy);
int nctemp1753 = 4 * n;
nctemp1746.d[0]=nctemp1753;
nctemp1745=&nctemp1746;
tmp=nctemp1745;
int nctemp1755= El2d->fdexy;
int nctemp1762 = 4 * n;
int nctemp1757= nctemp1762;
nctempchar1* nctemp1763= tmp;
int nctemp1766=LibeWrite(nctemp1755,nctemp1757,nctemp1763);
}
}
return 1;
}
int El2dSolve (struct el2d* El2d,struct model* Model,struct src* Src,struct rec* Rec,int nt,int l)
{
int sx;
int sy;
struct diff* Diff;
int ns;
int ne;
nctempfloat2 *tmp1;
nctempfloat2 *tmp2;
int i;
int k;
float perc;
float oldperc;
int iperc;
int nctemp1772= l;
struct diff* nctemp1774=DiffNew(nctemp1772);
Diff =nctemp1774;
int nctemp1781=Model->Nx;
nctemp1781=nctemp1781*Model->Ny;
nctempfloat2 *nctemp1780;
nctemp1780=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1780->d[0]=Model->Nx;
nctemp1780->d[1]=Model->Ny;
nctemp1780->a=(float *)RunMalloc(sizeof(float)*nctemp1781);
tmp1=nctemp1780;
int nctemp1792=Model->Nx;
nctemp1792=nctemp1792*Model->Ny;
nctempfloat2 *nctemp1791;
nctemp1791=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1791->d[0]=Model->Nx;
nctemp1791->d[1]=Model->Ny;
nctemp1791->a=(float *)RunMalloc(sizeof(float)*nctemp1792);
tmp2=nctemp1791;
oldperc =0.0;
ns =El2d->ts;
int nctemp1813 = ns + nt;
ne =nctemp1813;
i =ns;
int nctemp1818 = (i < ne);
while(nctemp1818){
{
struct diff* nctemp1823= Diff;
nctempfloat2* nctemp1825= El2d->sigmaxx;
nctempfloat2* nctemp1828= El2d->exx;
float nctemp1831= Model->Dx;
int nctemp1833=DiffDxplus(nctemp1823,nctemp1825,nctemp1828,nctemp1831);
struct diff* nctemp1835= Diff;
nctempfloat2* nctemp1837= El2d->sigmaxy;
nctempfloat2* nctemp1840= El2d->exy;
float nctemp1843= Model->Dx;
int nctemp1845=DiffDyminus(nctemp1835,nctemp1837,nctemp1840,nctemp1843);
struct el2d* nctemp1847= El2d;
struct model* nctemp1849= Model;
int nctemp1851=El2dvx(nctemp1847,nctemp1849);
struct diff* nctemp1853= Diff;
nctempfloat2* nctemp1855= El2d->sigmayy;
nctempfloat2* nctemp1858= El2d->eyy;
float nctemp1861= Model->Dx;
int nctemp1863=DiffDyplus(nctemp1853,nctemp1855,nctemp1858,nctemp1861);
struct diff* nctemp1865= Diff;
nctempfloat2* nctemp1867= El2d->sigmaxy;
nctempfloat2* nctemp1870= El2d->eyx;
float nctemp1873= Model->Dx;
int nctemp1875=DiffDxminus(nctemp1865,nctemp1867,nctemp1870,nctemp1873);
struct el2d* nctemp1877= El2d;
struct model* nctemp1879= Model;
int nctemp1881=El2dvy(nctemp1877,nctemp1879);
struct diff* nctemp1883= Diff;
nctempfloat2* nctemp1885= El2d->vx;
nctempfloat2* nctemp1888= El2d->exx;
float nctemp1891= Model->Dx;
int nctemp1893=DiffDxminus(nctemp1883,nctemp1885,nctemp1888,nctemp1891);
struct diff* nctemp1895= Diff;
nctempfloat2* nctemp1897= El2d->vy;
nctempfloat2* nctemp1900= El2d->eyy;
float nctemp1903= Model->Dx;
int nctemp1905=DiffDyminus(nctemp1895,nctemp1897,nctemp1900,nctemp1903);
struct diff* nctemp1907= Diff;
nctempfloat2* nctemp1909= El2d->vy;
nctempfloat2* nctemp1912= tmp1;
float nctemp1915= Model->Dx;
int nctemp1917=DiffDxplus(nctemp1907,nctemp1909,nctemp1912,nctemp1915);
struct diff* nctemp1919= Diff;
nctempfloat2* nctemp1921= El2d->vx;
nctempfloat2* nctemp1924= tmp2;
float nctemp1927= Model->Dx;
int nctemp1929=DiffDyplus(nctemp1919,nctemp1921,nctemp1924,nctemp1927);
struct el2d* nctemp1931= El2d;
struct model* nctemp1933= Model;
nctempfloat2* nctemp1935= tmp1;
nctempfloat2* nctemp1938= tmp2;
int nctemp1941=El2dexy(nctemp1931,nctemp1933,nctemp1935,nctemp1938);
struct el2d* nctemp1943= El2d;
struct model* nctemp1945= Model;
nctempfloat2* nctemp1947= tmp1;
nctempfloat2* nctemp1950= tmp2;
int nctemp1953=El2deyx(nctemp1943,nctemp1945,nctemp1947,nctemp1950);
struct el2d* nctemp1955= El2d;
struct model* nctemp1957= Model;
int nctemp1959=El2de(nctemp1955,nctemp1957);
struct el2d* nctemp1961= El2d;
struct model* nctemp1963= Model;
int nctemp1965=El2dstress(nctemp1961,nctemp1963);
k =0;
int nctemp1970 = (k < Src->Ns);
while(nctemp1970){
{
int nctemp1978=k;
sx =Src->Sx->a[nctemp1978];
int nctemp1984=k;
sy =Src->Sy->a[nctemp1984];
int nctemp1989=sx;
nctemp1989=sy*El2d->sigmaxx->d[0]+nctemp1989;
int nctemp1996=sx;
nctemp1996=sy*El2d->sigmaxx->d[0]+nctemp1996;
int nctemp2007=i;
nctemp2007=k*Src->Sqxx->d[0]+nctemp2007;
float nctemp2015 = Model->Dx * Model->Dx;
float nctemp2016 = Src->Sqxx->a[nctemp2007] / nctemp2015;
float nctemp2017 = Model->Dt * nctemp2016;
float nctemp2018 = El2d->sigmaxx->a[nctemp1996] + nctemp2017;
El2d->sigmaxx->a[nctemp1989] =nctemp2018;
int nctemp2022=sx;
nctemp2022=sy*El2d->sigmayy->d[0]+nctemp2022;
int nctemp2029=sx;
nctemp2029=sy*El2d->sigmayy->d[0]+nctemp2029;
int nctemp2040=i;
nctemp2040=k*Src->Sqyy->d[0]+nctemp2040;
float nctemp2048 = Model->Dx * Model->Dx;
float nctemp2049 = Src->Sqyy->a[nctemp2040] / nctemp2048;
float nctemp2050 = Model->Dt * nctemp2049;
float nctemp2051 = El2d->sigmayy->a[nctemp2029] + nctemp2050;
El2d->sigmayy->a[nctemp2022] =nctemp2051;
int nctemp2055=sx;
nctemp2055=sy*El2d->vx->d[0]+nctemp2055;
int nctemp2062=sx;
nctemp2062=sy*El2d->vx->d[0]+nctemp2062;
int nctemp2073=i;
nctemp2073=k*Src->Sfx->d[0]+nctemp2073;
float nctemp2081 = Model->Dx * Model->Dx;
float nctemp2082 = Src->Sfx->a[nctemp2073] / nctemp2081;
float nctemp2083 = Model->Dt * nctemp2082;
float nctemp2084 = El2d->vx->a[nctemp2062] + nctemp2083;
El2d->vx->a[nctemp2055] =nctemp2084;
int nctemp2088=sx;
nctemp2088=sy*El2d->vy->d[0]+nctemp2088;
int nctemp2095=sx;
nctemp2095=sy*El2d->vy->d[0]+nctemp2095;
int nctemp2106=i;
nctemp2106=k*Src->Sfy->d[0]+nctemp2106;
float nctemp2114 = Model->Dx * Model->Dx;
float nctemp2115 = Src->Sfy->a[nctemp2106] / nctemp2114;
float nctemp2116 = Model->Dt * nctemp2115;
float nctemp2117 = El2d->vy->a[nctemp2095] + nctemp2116;
El2d->vy->a[nctemp2088] =nctemp2117;
}
int nctemp2126 = k + 1;
k =nctemp2126;
int nctemp2127 = (k < Src->Ns);
nctemp1970=nctemp2127;
}
float nctemp2142=(float)(i);
int nctemp2155 = ne - ns;
int nctemp2157 = nctemp2155 - 1;
float nctemp2146=(float)(nctemp2157);
float nctemp2158 = nctemp2142 / nctemp2146;
float nctemp2159 = 1000.0 * nctemp2158;
perc =nctemp2159;
float nctemp2167 = perc - oldperc;
int nctemp2160 = (nctemp2167 >= 10.0);
if(nctemp2160)
{
int nctemp2176=(int)(perc);
int nctemp2180 = nctemp2176 / 10;
iperc =nctemp2180;
int nctemp2184= iperc;
int nctemp2186= 10;
int nctemp2188=LibeMod(nctemp2184,nctemp2186);
int nctemp2181 = (nctemp2188 ==0);
if(nctemp2181)
{
int nctemp2191= 4;
int nctemp2193= iperc;
int nctemp2195=LibePuti(nctemp2191,nctemp2193);
int nctemp2197= 4;
struct nctempchar1 *nctemp2201;
static struct nctempchar1 nctemp2202 = {{ 3}, (char*)"\n\0"};
nctemp2201=&nctemp2202;
nctempchar1* nctemp2199= nctemp2201;
int nctemp2203=LibePuts(nctemp2197,nctemp2199);
int nctemp2205= 4;
int nctemp2207=LibeFlush(nctemp2205);
}
oldperc =perc;
}
struct rec* nctemp2213= Rec;
int nctemp2215= i;
nctempfloat2* nctemp2217= El2d->p;
nctempfloat2* nctemp2220= El2d->vx;
nctempfloat2* nctemp2223= El2d->vy;
int nctemp2226=RecReceiver(nctemp2213,nctemp2215,nctemp2217,nctemp2220,nctemp2223);
struct el2d* nctemp2228= El2d;
int nctemp2230= i;
int nctemp2232=El2dSnap(nctemp2228,nctemp2230);
}
int nctemp2241 = i + 1;
i =nctemp2241;
int nctemp2242 = (i < ne);
nctemp1818=nctemp2242;
}
int nctemp2254 = El2d->ts + ne;
El2d->ts =nctemp2254;
return 1;
}
}
