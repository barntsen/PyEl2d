//  Translated by epsc  version December 2021  
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int LibeErrno;
nctempchar1 *LibeErrstr;
int LibeErrinit ();
int LibeGeterrno ();
int LibeClearerr ();
nctempchar1 * LibeGeterrstr ();
nctempchar1 * LibeGetenv (nctempchar1 *name);
;
;
;
;
;
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
;
;
;
;
;
;
;
float LibeSincosmax;
float LibeSincoslim;
float LibeLnmax;
float LibeLnmin;
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSincos (float x,float y,float sign);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeAtan (float f);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeMathinit ();
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1 * LibeStradd (nctempchar1 *t,nctempchar1 *s);
nctempchar1 * LibeStrsave (nctempchar1 *s);
int LibeIsalhpa (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoaf (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoae (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
struct LibeFdescr {int cnt;
int ptr;
int bufsize;
nctempchar1 *base;
int readflg;
int writflg;
int unbflg;
int errflg;
int eoflg;
int fd;
};
typedef struct nctempLibeFdescr1 {int d[1]; struct LibeFdescr *a; } nctempLibeFdescr1;
struct nctempLibeFdescr2 {int d[2]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr3 {int d[3]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr4 {int d[4]; struct LibeFdescr *a; } ;
;
struct nctempLibeFdescr1 *LibeFarr;
;
nctempchar1 *LibeTmpstr;
int LibeIoinit ();
int LibeFlushbuff (int fp);
int LibeFillbuff (int fp);
int LibeFlush (int fp);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibePutf (int fp,float fval,nctempchar1 *form);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibeRead (int fp,int n,nctempchar1 *buffer);
int LibeWrite (int fp,int n,nctempchar1 *buffer);
int LibeSeek (int fp,int pos,int flag);
int LibeIodelete ();
int NBLOCKS;
int NTHREADS;
int LibeSetnb (int nb);
int LibeSetnt (int nt);
int LibeGetnb ();
int LibeGetnt ();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeSystem (nctempchar1 *cmd);
int LibeInit ();
int LibeExit ();
struct diff {int l;
int lmax;
nctempfloat2 *coeffs;
nctempfloat1 *w;
};
typedef struct nctempdiff1 {int d[1]; struct diff *a; } nctempdiff1;
struct nctempdiff2 {int d[2]; struct diff *a; } ;
struct nctempdiff3 {int d[3]; struct diff *a; } ;
struct nctempdiff4 {int d[4]; struct diff *a; } ;
struct diff* DiffNew (int l);
int DiffDxminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDxplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
struct rec {int nr;
nctempint1 *rx;
nctempint1 *ry;
int fd;
int nt;
nctempfloat2 *p;
nctempfloat2 *sxx;
nctempfloat2 *syy;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *wrk;
int resamp;
int pit;
};
typedef struct nctemprec1 {int d[1]; struct rec *a; } nctemprec1;
struct nctemprec2 {int d[2]; struct rec *a; } ;
struct nctemprec3 {int d[3]; struct rec *a; } ;
struct nctemprec4 {int d[4]; struct rec *a; } ;
struct rec* RecNew (nctempint1 *rx,nctempint1 *ry,int nt,int resamp);
int RecReceiver (struct rec* Rec,int it,nctempfloat2 *sxx,nctempfloat2 *syy,nctempfloat2 *vx,nctempfloat2 *vy);
nctempfloat2 * RecGetrec (struct rec* Rec,int data);
struct src {nctempint1 *Sx;
nctempint1 *Sy;
nctempfloat2 *Sqyy;
nctempfloat2 *Sqxx;
nctempfloat2 *Sfx;
nctempfloat2 *Sfy;
int Ns;
};
typedef struct nctempsrc1 {int d[1]; struct src *a; } nctempsrc1;
struct nctempsrc2 {int d[2]; struct src *a; } ;
struct nctempsrc3 {int d[3]; struct src *a; } ;
struct nctempsrc4 {int d[4]; struct src *a; } ;
struct src* SrcNew (nctempint1 *sx,nctempint1 *sy,nctempfloat2 *sqxx,nctempfloat2 *sqyy,nctempfloat2 *sfx,nctempfloat2 *sfy);
int SrcDel (struct src* Src);
int Srcricker (nctempfloat1 *source,float t0,float f0,int nt,float dt);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Qlx;
nctempfloat2 *Qly;
nctempfloat2 *Qmx;
nctempfloat2 *Qmy;
nctempfloat2 *Qpx;
nctempfloat2 *Qpy;
nctempfloat2 *Lambda;
nctempfloat2 *Mu;
nctempfloat2 *Muxy;
nctempfloat2 *Dmuxyx;
nctempfloat2 *Dmuxyy;
nctempfloat2 *Dlambdax;
nctempfloat2 *Dlambday;
nctempfloat2 *Dmux;
nctempfloat2 *Dmuy;
nctempfloat2 *Drhopx;
nctempfloat2 *Drhopy;
nctempfloat2 *Rho;
nctempfloat2 *Rhox;
nctempfloat2 *Rhoy;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Beta1x;
nctempfloat2 *Beta2x;
nctempfloat2 *Beta1y;
nctempfloat2 *Beta2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
nctempfloat1 *dx1;
nctempfloat1 *dy1;
nctempfloat1 *dx2;
nctempfloat1 *dy2;
float Dx;
float Dt;
int Freesurface;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
;
;
;
;
int Modeld (nctempfloat1 *d,float dx,int nb);
int Modele (nctempfloat1 *d,float dx,int nb);
nctempfloat2 * Modelcopy (nctempfloat2 *a);
int Modelstaggerx (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelstaggery (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelslscoeffs (nctempfloat2 *Qx,nctempfloat2 *Qy,nctempfloat2 *modx,nctempfloat2 *mody,nctempfloat2 *coeff1x,nctempfloat2 *coeff1y,nctempfloat2 *coeff2x,nctempfloat2 *coeff2y,struct model* Model);
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Freesurface);
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Rheol,int Freesurface);
float ModelStability (struct model* Model);
struct el2d {nctempfloat2 *p;
nctempfloat2 *sigmaxx;
nctempfloat2 *sigmayy;
nctempfloat2 *sigmaxy;
nctempfloat2 *sigmayx;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *exx;
nctempfloat2 *eyy;
nctempfloat2 *exy;
nctempfloat2 *eyx;
nctempfloat2 *gammaxx;
nctempfloat2 *gammayy;
nctempfloat2 *gammaxy;
nctempfloat2 *gammayx;
nctempfloat2 *thetaxxx;
nctempfloat2 *thetayyy;
nctempfloat2 *thetaxyx;
nctempfloat2 *thetayxy;
int ts;
int fdsxx;
int fdsyy;
int fdvx;
int fdvy;
int sresamp;
nctempint1 *snpflags;
};
typedef struct nctempel2d1 {int d[1]; struct el2d *a; } nctempel2d1;
struct nctempel2d2 {int d[2]; struct el2d *a; } ;
struct nctempel2d3 {int d[3]; struct el2d *a; } ;
struct nctempel2d4 {int d[4]; struct el2d *a; } ;
struct el2d* El2dNew (struct model* Model,int sresamp,nctempint1 *snpflags)
{
struct el2d* El2d;
int i;
int j;
struct el2d *nctemp5=(struct el2d*)RunMalloc(sizeof(struct el2d));
El2d =nctemp5;
El2d->sresamp =sresamp;
El2d->snpflags=snpflags;
int nctemp23=Model->Nx;
nctemp23=nctemp23*Model->Ny;
nctempfloat2 *nctemp22;
nctemp22=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp22->d[0]=Model->Nx;
nctemp22->d[1]=Model->Ny;
nctemp22->a=(float *)RunMalloc(sizeof(float)*nctemp23);
El2d->p=nctemp22;
int nctemp34=Model->Nx;
nctemp34=nctemp34*Model->Ny;
nctempfloat2 *nctemp33;
nctemp33=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp33->d[0]=Model->Nx;
nctemp33->d[1]=Model->Ny;
nctemp33->a=(float *)RunMalloc(sizeof(float)*nctemp34);
El2d->sigmaxx=nctemp33;
int nctemp45=Model->Nx;
nctemp45=nctemp45*Model->Ny;
nctempfloat2 *nctemp44;
nctemp44=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp44->d[0]=Model->Nx;
nctemp44->d[1]=Model->Ny;
nctemp44->a=(float *)RunMalloc(sizeof(float)*nctemp45);
El2d->sigmayy=nctemp44;
int nctemp56=Model->Nx;
nctemp56=nctemp56*Model->Ny;
nctempfloat2 *nctemp55;
nctemp55=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp55->d[0]=Model->Nx;
nctemp55->d[1]=Model->Ny;
nctemp55->a=(float *)RunMalloc(sizeof(float)*nctemp56);
El2d->sigmaxy=nctemp55;
int nctemp67=Model->Nx;
nctemp67=nctemp67*Model->Ny;
nctempfloat2 *nctemp66;
nctemp66=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp66->d[0]=Model->Nx;
nctemp66->d[1]=Model->Ny;
nctemp66->a=(float *)RunMalloc(sizeof(float)*nctemp67);
El2d->sigmayx=nctemp66;
int nctemp78=Model->Nx;
nctemp78=nctemp78*Model->Ny;
nctempfloat2 *nctemp77;
nctemp77=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp77->d[0]=Model->Nx;
nctemp77->d[1]=Model->Ny;
nctemp77->a=(float *)RunMalloc(sizeof(float)*nctemp78);
El2d->vx=nctemp77;
int nctemp89=Model->Nx;
nctemp89=nctemp89*Model->Ny;
nctempfloat2 *nctemp88;
nctemp88=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp88->d[0]=Model->Nx;
nctemp88->d[1]=Model->Ny;
nctemp88->a=(float *)RunMalloc(sizeof(float)*nctemp89);
El2d->vy=nctemp88;
int nctemp100=Model->Nx;
nctemp100=nctemp100*Model->Ny;
nctempfloat2 *nctemp99;
nctemp99=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp99->d[0]=Model->Nx;
nctemp99->d[1]=Model->Ny;
nctemp99->a=(float *)RunMalloc(sizeof(float)*nctemp100);
El2d->exx=nctemp99;
int nctemp111=Model->Nx;
nctemp111=nctemp111*Model->Ny;
nctempfloat2 *nctemp110;
nctemp110=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp110->d[0]=Model->Nx;
nctemp110->d[1]=Model->Ny;
nctemp110->a=(float *)RunMalloc(sizeof(float)*nctemp111);
El2d->eyy=nctemp110;
int nctemp122=Model->Nx;
nctemp122=nctemp122*Model->Ny;
nctempfloat2 *nctemp121;
nctemp121=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp121->d[0]=Model->Nx;
nctemp121->d[1]=Model->Ny;
nctemp121->a=(float *)RunMalloc(sizeof(float)*nctemp122);
El2d->exy=nctemp121;
int nctemp133=Model->Nx;
nctemp133=nctemp133*Model->Ny;
nctempfloat2 *nctemp132;
nctemp132=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp132->d[0]=Model->Nx;
nctemp132->d[1]=Model->Ny;
nctemp132->a=(float *)RunMalloc(sizeof(float)*nctemp133);
El2d->eyx=nctemp132;
int nctemp144=Model->Nx;
nctemp144=nctemp144*Model->Ny;
nctempfloat2 *nctemp143;
nctemp143=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp143->d[0]=Model->Nx;
nctemp143->d[1]=Model->Ny;
nctemp143->a=(float *)RunMalloc(sizeof(float)*nctemp144);
El2d->gammaxx=nctemp143;
int nctemp155=Model->Nx;
nctemp155=nctemp155*Model->Ny;
nctempfloat2 *nctemp154;
nctemp154=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp154->d[0]=Model->Nx;
nctemp154->d[1]=Model->Ny;
nctemp154->a=(float *)RunMalloc(sizeof(float)*nctemp155);
El2d->gammayy=nctemp154;
int nctemp166=Model->Nx;
nctemp166=nctemp166*Model->Ny;
nctempfloat2 *nctemp165;
nctemp165=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp165->d[0]=Model->Nx;
nctemp165->d[1]=Model->Ny;
nctemp165->a=(float *)RunMalloc(sizeof(float)*nctemp166);
El2d->gammaxy=nctemp165;
int nctemp177=Model->Nx;
nctemp177=nctemp177*Model->Ny;
nctempfloat2 *nctemp176;
nctemp176=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp176->d[0]=Model->Nx;
nctemp176->d[1]=Model->Ny;
nctemp176->a=(float *)RunMalloc(sizeof(float)*nctemp177);
El2d->gammayx=nctemp176;
int nctemp188=Model->Nx;
nctemp188=nctemp188*Model->Ny;
nctempfloat2 *nctemp187;
nctemp187=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp187->d[0]=Model->Nx;
nctemp187->d[1]=Model->Ny;
nctemp187->a=(float *)RunMalloc(sizeof(float)*nctemp188);
El2d->thetaxxx=nctemp187;
int nctemp199=Model->Nx;
nctemp199=nctemp199*Model->Ny;
nctempfloat2 *nctemp198;
nctemp198=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp198->d[0]=Model->Nx;
nctemp198->d[1]=Model->Ny;
nctemp198->a=(float *)RunMalloc(sizeof(float)*nctemp199);
El2d->thetayyy=nctemp198;
int nctemp210=Model->Nx;
nctemp210=nctemp210*Model->Ny;
nctempfloat2 *nctemp209;
nctemp209=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp209->d[0]=Model->Nx;
nctemp209->d[1]=Model->Ny;
nctemp209->a=(float *)RunMalloc(sizeof(float)*nctemp210);
El2d->thetayxy=nctemp209;
int nctemp221=Model->Nx;
nctemp221=nctemp221*Model->Ny;
nctempfloat2 *nctemp220;
nctemp220=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp220->d[0]=Model->Nx;
nctemp220->d[1]=Model->Ny;
nctemp220->a=(float *)RunMalloc(sizeof(float)*nctemp221);
El2d->thetaxyx=nctemp220;
i =0;
int nctemp230 = (i < Model->Nx);
while(nctemp230){
{
j =0;
int nctemp238 = (j < Model->Ny);
while(nctemp238){
{
int nctemp245=i;
nctemp245=j*El2d->p->d[0]+nctemp245;
El2d->p->a[nctemp245] =0.0;
int nctemp252=i;
nctemp252=j*El2d->sigmaxx->d[0]+nctemp252;
El2d->sigmaxx->a[nctemp252] =0.0;
int nctemp259=i;
nctemp259=j*El2d->sigmayy->d[0]+nctemp259;
El2d->sigmayy->a[nctemp259] =0.0;
int nctemp266=i;
nctemp266=j*El2d->sigmaxy->d[0]+nctemp266;
El2d->sigmaxy->a[nctemp266] =0.0;
int nctemp273=i;
nctemp273=j*El2d->sigmayx->d[0]+nctemp273;
El2d->sigmayx->a[nctemp273] =0.0;
int nctemp280=i;
nctemp280=j*El2d->vx->d[0]+nctemp280;
El2d->vx->a[nctemp280] =0.0;
int nctemp287=i;
nctemp287=j*El2d->vy->d[0]+nctemp287;
El2d->vy->a[nctemp287] =0.0;
int nctemp294=i;
nctemp294=j*El2d->exx->d[0]+nctemp294;
El2d->exx->a[nctemp294] =0.0;
int nctemp301=i;
nctemp301=j*El2d->eyy->d[0]+nctemp301;
El2d->eyy->a[nctemp301] =0.0;
int nctemp308=i;
nctemp308=j*El2d->exy->d[0]+nctemp308;
El2d->exy->a[nctemp308] =0.0;
int nctemp315=i;
nctemp315=j*El2d->eyx->d[0]+nctemp315;
El2d->eyx->a[nctemp315] =0.0;
int nctemp322=i;
nctemp322=j*El2d->gammaxx->d[0]+nctemp322;
El2d->gammaxx->a[nctemp322] =0.0;
int nctemp329=i;
nctemp329=j*El2d->gammayy->d[0]+nctemp329;
El2d->gammayy->a[nctemp329] =0.0;
int nctemp336=i;
nctemp336=j*El2d->gammaxy->d[0]+nctemp336;
El2d->gammaxy->a[nctemp336] =0.0;
int nctemp343=i;
nctemp343=j*El2d->gammayx->d[0]+nctemp343;
El2d->gammayx->a[nctemp343] =0.0;
int nctemp350=i;
nctemp350=j*El2d->thetaxxx->d[0]+nctemp350;
El2d->thetaxxx->a[nctemp350] =0.0;
int nctemp357=i;
nctemp357=j*El2d->thetayyy->d[0]+nctemp357;
El2d->thetayyy->a[nctemp357] =0.0;
int nctemp364=i;
nctemp364=j*El2d->thetayxy->d[0]+nctemp364;
El2d->thetayxy->a[nctemp364] =0.0;
int nctemp371=i;
nctemp371=j*El2d->thetaxyx->d[0]+nctemp371;
El2d->thetaxyx->a[nctemp371] =0.0;
El2d->ts =0;
}
int nctemp387 = j + 1;
j =nctemp387;
int nctemp388 = (j < Model->Ny);
nctemp238=nctemp388;
}
}
int nctemp400 = i + 1;
i =nctemp400;
int nctemp401 = (i < Model->Nx);
nctemp230=nctemp401;
}
int nctemp408=0;
int nctemp405 = (El2d->snpflags->a[nctemp408] ==1);
if(nctemp405)
{
struct nctempchar1 *nctemp417;
static struct nctempchar1 nctemp418 = {{ 12}, (char*)"snp-sxx.bin\0"};
nctemp417=&nctemp418;
nctempchar1* nctemp415= nctemp417;
struct nctempchar1 *nctemp421;
static struct nctempchar1 nctemp422 = {{ 2}, (char*)"w\0"};
nctemp421=&nctemp422;
nctempchar1* nctemp419= nctemp421;
int nctemp423=LibeOpen(nctemp415,nctemp419);
El2d->fdsxx =nctemp423;
}
int nctemp427=1;
int nctemp424 = (El2d->snpflags->a[nctemp427] ==1);
if(nctemp424)
{
struct nctempchar1 *nctemp436;
static struct nctempchar1 nctemp437 = {{ 12}, (char*)"snp-syy.bin\0"};
nctemp436=&nctemp437;
nctempchar1* nctemp434= nctemp436;
struct nctempchar1 *nctemp440;
static struct nctempchar1 nctemp441 = {{ 2}, (char*)"w\0"};
nctemp440=&nctemp441;
nctempchar1* nctemp438= nctemp440;
int nctemp442=LibeOpen(nctemp434,nctemp438);
El2d->fdsyy =nctemp442;
}
int nctemp446=2;
int nctemp443 = (El2d->snpflags->a[nctemp446] ==1);
if(nctemp443)
{
struct nctempchar1 *nctemp455;
static struct nctempchar1 nctemp456 = {{ 11}, (char*)"snp-vx.bin\0"};
nctemp455=&nctemp456;
nctempchar1* nctemp453= nctemp455;
struct nctempchar1 *nctemp459;
static struct nctempchar1 nctemp460 = {{ 2}, (char*)"w\0"};
nctemp459=&nctemp460;
nctempchar1* nctemp457= nctemp459;
int nctemp461=LibeOpen(nctemp453,nctemp457);
El2d->fdvx =nctemp461;
}
int nctemp465=3;
int nctemp462 = (El2d->snpflags->a[nctemp465] ==1);
if(nctemp462)
{
struct nctempchar1 *nctemp474;
static struct nctempchar1 nctemp475 = {{ 11}, (char*)"snp-vy.bin\0"};
nctemp474=&nctemp475;
nctempchar1* nctemp472= nctemp474;
struct nctempchar1 *nctemp478;
static struct nctempchar1 nctemp479 = {{ 2}, (char*)"w\0"};
nctemp478=&nctemp479;
nctempchar1* nctemp476= nctemp478;
int nctemp480=LibeOpen(nctemp472,nctemp476);
El2d->fdvy =nctemp480;
}
return El2d;
}
__global__ void kernel_El2dvx (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp492=0;
int nctemp494=nx;
int nctemp497=0;
int nctemp499=ny;
int nctemp490=(nctemp494-nctemp492)*(nctemp499-nctemp497);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp490;nctempno+=blockDim.x*gridDim.x){
j=nctemp497+nctempno/(nctemp494-nctemp492);
i=nctemp492+nctempno%(nctemp494-nctemp492);
{
int nctemp504=i;
nctemp504=j*El2d->vx->d[0]+nctemp504;
int nctemp524=i;
nctemp524=j*Model->Rhox->d[0]+nctemp524;
float nctemp527 = Model->Dt * Model->Rhox->a[nctemp524];
int nctemp532=i;
nctemp532=j*El2d->exx->d[0]+nctemp532;
int nctemp536=i;
nctemp536=j*El2d->exy->d[0]+nctemp536;
float nctemp539 = El2d->exx->a[nctemp532] + El2d->exy->a[nctemp536];
float nctemp540 = nctemp527 * nctemp539;
int nctemp549=i;
nctemp549=j*El2d->thetaxxx->d[0]+nctemp549;
float nctemp552 = Model->Dt * El2d->thetaxxx->a[nctemp549];
int nctemp554=i;
nctemp554=j*Model->Drhopx->d[0]+nctemp554;
float nctemp557 = nctemp552 * Model->Drhopx->a[nctemp554];
float nctemp558 = nctemp540 + nctemp557;
int nctemp567=i;
nctemp567=j*El2d->thetayxy->d[0]+nctemp567;
float nctemp570 = Model->Dt * El2d->thetayxy->a[nctemp567];
int nctemp572=i;
nctemp572=j*Model->Drhopy->d[0]+nctemp572;
float nctemp575 = nctemp570 * Model->Drhopy->a[nctemp572];
float nctemp576 = nctemp558 + nctemp575;
int nctemp578=i;
nctemp578=j*El2d->vx->d[0]+nctemp578;
float nctemp581 = nctemp576 + El2d->vx->a[nctemp578];
El2d->vx->a[nctemp504] =nctemp581;
int nctemp585=i;
nctemp585=j*El2d->thetaxxx->d[0]+nctemp585;
int nctemp595=i;
nctemp595=j*Model->Eta1x->d[0]+nctemp595;
int nctemp599=i;
nctemp599=j*El2d->thetaxxx->d[0]+nctemp599;
float nctemp602 = Model->Eta1x->a[nctemp595] * El2d->thetaxxx->a[nctemp599];
int nctemp607=i;
nctemp607=j*Model->Eta2x->d[0]+nctemp607;
int nctemp611=i;
nctemp611=j*El2d->exx->d[0]+nctemp611;
float nctemp614 = Model->Eta2x->a[nctemp607] * El2d->exx->a[nctemp611];
float nctemp615 = nctemp602 + nctemp614;
El2d->thetaxxx->a[nctemp585] =nctemp615;
int nctemp619=i;
nctemp619=j*El2d->thetayxy->d[0]+nctemp619;
int nctemp629=i;
nctemp629=j*Model->Eta1y->d[0]+nctemp629;
int nctemp633=i;
nctemp633=j*El2d->thetayxy->d[0]+nctemp633;
float nctemp636 = Model->Eta1y->a[nctemp629] * El2d->thetayxy->a[nctemp633];
int nctemp641=i;
nctemp641=j*Model->Eta2y->d[0]+nctemp641;
int nctemp645=i;
nctemp645=j*El2d->exy->d[0]+nctemp645;
float nctemp648 = Model->Eta2y->a[nctemp641] * El2d->exy->a[nctemp645];
float nctemp649 = nctemp636 + nctemp648;
El2d->thetayxy->a[nctemp619] =nctemp649;
}
}
}
int El2dvx (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvx<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dvy (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp660=0;
int nctemp662=nx;
int nctemp665=0;
int nctemp667=ny;
int nctemp658=(nctemp662-nctemp660)*(nctemp667-nctemp665);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp658;nctempno+=blockDim.x*gridDim.x){
j=nctemp665+nctempno/(nctemp662-nctemp660);
i=nctemp660+nctempno%(nctemp662-nctemp660);
{
int nctemp672=i;
nctemp672=j*El2d->vy->d[0]+nctemp672;
int nctemp692=i;
nctemp692=j*Model->Rhoy->d[0]+nctemp692;
float nctemp695 = Model->Dt * Model->Rhoy->a[nctemp692];
int nctemp700=i;
nctemp700=j*El2d->eyy->d[0]+nctemp700;
int nctemp704=i;
nctemp704=j*El2d->eyx->d[0]+nctemp704;
float nctemp707 = El2d->eyy->a[nctemp700] + El2d->eyx->a[nctemp704];
float nctemp708 = nctemp695 * nctemp707;
int nctemp717=i;
nctemp717=j*El2d->thetayyy->d[0]+nctemp717;
float nctemp720 = Model->Dt * El2d->thetayyy->a[nctemp717];
int nctemp722=i;
nctemp722=j*Model->Drhopy->d[0]+nctemp722;
float nctemp725 = nctemp720 * Model->Drhopy->a[nctemp722];
float nctemp726 = nctemp708 + nctemp725;
int nctemp735=i;
nctemp735=j*El2d->thetaxyx->d[0]+nctemp735;
float nctemp738 = Model->Dt * El2d->thetaxyx->a[nctemp735];
int nctemp740=i;
nctemp740=j*Model->Drhopx->d[0]+nctemp740;
float nctemp743 = nctemp738 * Model->Drhopx->a[nctemp740];
float nctemp744 = nctemp726 + nctemp743;
int nctemp746=i;
nctemp746=j*El2d->vy->d[0]+nctemp746;
float nctemp749 = nctemp744 + El2d->vy->a[nctemp746];
El2d->vy->a[nctemp672] =nctemp749;
int nctemp753=i;
nctemp753=j*El2d->thetayyy->d[0]+nctemp753;
int nctemp763=i;
nctemp763=j*Model->Eta1y->d[0]+nctemp763;
int nctemp767=i;
nctemp767=j*El2d->thetayyy->d[0]+nctemp767;
float nctemp770 = Model->Eta1y->a[nctemp763] * El2d->thetayyy->a[nctemp767];
int nctemp775=i;
nctemp775=j*Model->Eta2y->d[0]+nctemp775;
int nctemp779=i;
nctemp779=j*El2d->eyy->d[0]+nctemp779;
float nctemp782 = Model->Eta2y->a[nctemp775] * El2d->eyy->a[nctemp779];
float nctemp783 = nctemp770 + nctemp782;
El2d->thetayyy->a[nctemp753] =nctemp783;
int nctemp787=i;
nctemp787=j*El2d->thetaxyx->d[0]+nctemp787;
int nctemp797=i;
nctemp797=j*Model->Eta1x->d[0]+nctemp797;
int nctemp801=i;
nctemp801=j*El2d->thetaxyx->d[0]+nctemp801;
float nctemp804 = Model->Eta1x->a[nctemp797] * El2d->thetaxyx->a[nctemp801];
int nctemp809=i;
nctemp809=j*Model->Eta2x->d[0]+nctemp809;
int nctemp813=i;
nctemp813=j*El2d->eyx->d[0]+nctemp813;
float nctemp816 = Model->Eta2x->a[nctemp809] * El2d->eyx->a[nctemp813];
float nctemp817 = nctemp804 + nctemp816;
El2d->thetaxyx->a[nctemp787] =nctemp817;
}
}
}
int El2dvy (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvy<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp828=0;
int nctemp830=nx;
int nctemp833=0;
int nctemp835=ny;
int nctemp826=(nctemp830-nctemp828)*(nctemp835-nctemp833);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp826;nctempno+=blockDim.x*gridDim.x){
j=nctemp833+nctempno/(nctemp830-nctemp828);
i=nctemp828+nctempno%(nctemp830-nctemp828);
{
int nctemp840=i;
nctemp840=j*El2d->exy->d[0]+nctemp840;
int nctemp851=i;
nctemp851=j*tmp1->d[0]+nctemp851;
int nctemp855=i;
nctemp855=j*tmp2->d[0]+nctemp855;
float nctemp858 = tmp1->a[nctemp851] + tmp2->a[nctemp855];
float nctemp859 = 0.5 * nctemp858;
El2d->exy->a[nctemp840] =nctemp859;
}
}
}
int El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2dexy<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp870=0;
int nctemp872=nx;
int nctemp875=0;
int nctemp877=ny;
int nctemp868=(nctemp872-nctemp870)*(nctemp877-nctemp875);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp868;nctempno+=blockDim.x*gridDim.x){
j=nctemp875+nctempno/(nctemp872-nctemp870);
i=nctemp870+nctempno%(nctemp872-nctemp870);
{
int nctemp882=i;
nctemp882=j*El2d->eyx->d[0]+nctemp882;
int nctemp893=i;
nctemp893=j*tmp1->d[0]+nctemp893;
int nctemp897=i;
nctemp897=j*tmp2->d[0]+nctemp897;
float nctemp900 = tmp1->a[nctemp893] + tmp2->a[nctemp897];
float nctemp901 = 0.5 * nctemp900;
El2d->eyx->a[nctemp882] =nctemp901;
}
}
}
int El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2deyx<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2dstress (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp912=0;
int nctemp914=nx;
int nctemp917=0;
int nctemp919=ny;
int nctemp910=(nctemp914-nctemp912)*(nctemp919-nctemp917);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp910;nctempno+=blockDim.x*gridDim.x){
j=nctemp917+nctempno/(nctemp914-nctemp912);
i=nctemp912+nctempno%(nctemp914-nctemp912);
{
int nctemp924=i;
nctemp924=j*El2d->sigmaxx->d[0]+nctemp924;
int nctemp947=i;
nctemp947=j*Model->Lambda->d[0]+nctemp947;
float nctemp950 = Model->Dt * Model->Lambda->a[nctemp947];
int nctemp955=i;
nctemp955=j*El2d->exx->d[0]+nctemp955;
int nctemp959=i;
nctemp959=j*El2d->eyy->d[0]+nctemp959;
float nctemp962 = El2d->exx->a[nctemp955] + El2d->eyy->a[nctemp959];
float nctemp963 = nctemp950 * nctemp962;
float nctemp975 = 2.0 * Model->Dt;
int nctemp977=i;
nctemp977=j*Model->Mu->d[0]+nctemp977;
float nctemp980 = nctemp975 * Model->Mu->a[nctemp977];
int nctemp982=i;
nctemp982=j*El2d->exx->d[0]+nctemp982;
float nctemp985 = nctemp980 * El2d->exx->a[nctemp982];
float nctemp986 = nctemp963 + nctemp985;
int nctemp998=i;
nctemp998=j*El2d->gammaxx->d[0]+nctemp998;
int nctemp1002=i;
nctemp1002=j*Model->Dlambdax->d[0]+nctemp1002;
float nctemp1005 = El2d->gammaxx->a[nctemp998] * Model->Dlambdax->a[nctemp1002];
int nctemp1010=i;
nctemp1010=j*El2d->gammayy->d[0]+nctemp1010;
int nctemp1014=i;
nctemp1014=j*Model->Dlambday->d[0]+nctemp1014;
float nctemp1017 = El2d->gammayy->a[nctemp1010] * Model->Dlambday->a[nctemp1014];
float nctemp1018 = nctemp1005 + nctemp1017;
float nctemp1019 = Model->Dt * nctemp1018;
float nctemp1020 = nctemp986 + nctemp1019;
float nctemp1032 = 2.0 * Model->Dt;
int nctemp1034=i;
nctemp1034=j*El2d->gammaxx->d[0]+nctemp1034;
float nctemp1037 = nctemp1032 * El2d->gammaxx->a[nctemp1034];
int nctemp1039=i;
nctemp1039=j*Model->Dmux->d[0]+nctemp1039;
float nctemp1042 = nctemp1037 * Model->Dmux->a[nctemp1039];
float nctemp1043 = nctemp1020 + nctemp1042;
int nctemp1045=i;
nctemp1045=j*El2d->sigmaxx->d[0]+nctemp1045;
float nctemp1048 = nctemp1043 + El2d->sigmaxx->a[nctemp1045];
El2d->sigmaxx->a[nctemp924] =nctemp1048;
int nctemp1052=i;
nctemp1052=j*El2d->sigmayy->d[0]+nctemp1052;
int nctemp1075=i;
nctemp1075=j*Model->Lambda->d[0]+nctemp1075;
float nctemp1078 = Model->Dt * Model->Lambda->a[nctemp1075];
int nctemp1083=i;
nctemp1083=j*El2d->exx->d[0]+nctemp1083;
int nctemp1087=i;
nctemp1087=j*El2d->eyy->d[0]+nctemp1087;
float nctemp1090 = El2d->exx->a[nctemp1083] + El2d->eyy->a[nctemp1087];
float nctemp1091 = nctemp1078 * nctemp1090;
float nctemp1103 = 2.0 * Model->Dt;
int nctemp1105=i;
nctemp1105=j*Model->Mu->d[0]+nctemp1105;
float nctemp1108 = nctemp1103 * Model->Mu->a[nctemp1105];
int nctemp1110=i;
nctemp1110=j*El2d->eyy->d[0]+nctemp1110;
float nctemp1113 = nctemp1108 * El2d->eyy->a[nctemp1110];
float nctemp1114 = nctemp1091 + nctemp1113;
int nctemp1126=i;
nctemp1126=j*El2d->gammaxx->d[0]+nctemp1126;
int nctemp1130=i;
nctemp1130=j*Model->Dlambdax->d[0]+nctemp1130;
float nctemp1133 = El2d->gammaxx->a[nctemp1126] * Model->Dlambdax->a[nctemp1130];
int nctemp1138=i;
nctemp1138=j*El2d->gammayy->d[0]+nctemp1138;
int nctemp1142=i;
nctemp1142=j*Model->Dlambday->d[0]+nctemp1142;
float nctemp1145 = El2d->gammayy->a[nctemp1138] * Model->Dlambday->a[nctemp1142];
float nctemp1146 = nctemp1133 + nctemp1145;
float nctemp1147 = Model->Dt * nctemp1146;
float nctemp1148 = nctemp1114 + nctemp1147;
float nctemp1160 = 2.0 * Model->Dt;
int nctemp1162=i;
nctemp1162=j*El2d->gammayy->d[0]+nctemp1162;
float nctemp1165 = nctemp1160 * El2d->gammayy->a[nctemp1162];
int nctemp1167=i;
nctemp1167=j*Model->Dmuy->d[0]+nctemp1167;
float nctemp1170 = nctemp1165 * Model->Dmuy->a[nctemp1167];
float nctemp1171 = nctemp1148 + nctemp1170;
int nctemp1173=i;
nctemp1173=j*El2d->sigmayy->d[0]+nctemp1173;
float nctemp1176 = nctemp1171 + El2d->sigmayy->a[nctemp1173];
El2d->sigmayy->a[nctemp1052] =nctemp1176;
int nctemp1180=i;
nctemp1180=j*El2d->sigmaxy->d[0]+nctemp1180;
float nctemp1200 = 2.0 * Model->Dt;
int nctemp1202=i;
nctemp1202=j*Model->Muxy->d[0]+nctemp1202;
float nctemp1205 = nctemp1200 * Model->Muxy->a[nctemp1202];
int nctemp1207=i;
nctemp1207=j*El2d->exy->d[0]+nctemp1207;
float nctemp1210 = nctemp1205 * El2d->exy->a[nctemp1207];
float nctemp1222 = 2.0 * Model->Dt;
int nctemp1224=i;
nctemp1224=j*El2d->gammaxy->d[0]+nctemp1224;
float nctemp1227 = nctemp1222 * El2d->gammaxy->a[nctemp1224];
int nctemp1229=i;
nctemp1229=j*Model->Dmuxyy->d[0]+nctemp1229;
float nctemp1232 = nctemp1227 * Model->Dmuxyy->a[nctemp1229];
float nctemp1233 = nctemp1210 + nctemp1232;
int nctemp1235=i;
nctemp1235=j*El2d->sigmaxy->d[0]+nctemp1235;
float nctemp1238 = nctemp1233 + El2d->sigmaxy->a[nctemp1235];
El2d->sigmaxy->a[nctemp1180] =nctemp1238;
int nctemp1242=i;
nctemp1242=j*El2d->sigmayx->d[0]+nctemp1242;
float nctemp1262 = 2.0 * Model->Dt;
int nctemp1264=i;
nctemp1264=j*Model->Muxy->d[0]+nctemp1264;
float nctemp1267 = nctemp1262 * Model->Muxy->a[nctemp1264];
int nctemp1269=i;
nctemp1269=j*El2d->exy->d[0]+nctemp1269;
float nctemp1272 = nctemp1267 * El2d->exy->a[nctemp1269];
float nctemp1284 = 2.0 * Model->Dt;
int nctemp1286=i;
nctemp1286=j*El2d->gammayx->d[0]+nctemp1286;
float nctemp1289 = nctemp1284 * El2d->gammayx->a[nctemp1286];
int nctemp1291=i;
nctemp1291=j*Model->Dmuxyx->d[0]+nctemp1291;
float nctemp1294 = nctemp1289 * Model->Dmuxyx->a[nctemp1291];
float nctemp1295 = nctemp1272 + nctemp1294;
int nctemp1297=i;
nctemp1297=j*El2d->sigmayx->d[0]+nctemp1297;
float nctemp1300 = nctemp1295 + El2d->sigmayx->a[nctemp1297];
El2d->sigmayx->a[nctemp1242] =nctemp1300;
int nctemp1304=i;
nctemp1304=j*El2d->gammaxx->d[0]+nctemp1304;
int nctemp1314=i;
nctemp1314=j*Model->Alpha1x->d[0]+nctemp1314;
int nctemp1318=i;
nctemp1318=j*El2d->gammaxx->d[0]+nctemp1318;
float nctemp1321 = Model->Alpha1x->a[nctemp1314] * El2d->gammaxx->a[nctemp1318];
int nctemp1326=i;
nctemp1326=j*Model->Alpha2x->d[0]+nctemp1326;
int nctemp1330=i;
nctemp1330=j*El2d->exx->d[0]+nctemp1330;
float nctemp1333 = Model->Alpha2x->a[nctemp1326] * El2d->exx->a[nctemp1330];
float nctemp1334 = nctemp1321 + nctemp1333;
El2d->gammaxx->a[nctemp1304] =nctemp1334;
int nctemp1338=i;
nctemp1338=j*El2d->gammayy->d[0]+nctemp1338;
int nctemp1348=i;
nctemp1348=j*Model->Alpha1y->d[0]+nctemp1348;
int nctemp1352=i;
nctemp1352=j*El2d->gammayy->d[0]+nctemp1352;
float nctemp1355 = Model->Alpha1y->a[nctemp1348] * El2d->gammayy->a[nctemp1352];
int nctemp1360=i;
nctemp1360=j*Model->Alpha2y->d[0]+nctemp1360;
int nctemp1364=i;
nctemp1364=j*El2d->eyy->d[0]+nctemp1364;
float nctemp1367 = Model->Alpha2y->a[nctemp1360] * El2d->eyy->a[nctemp1364];
float nctemp1368 = nctemp1355 + nctemp1367;
El2d->gammayy->a[nctemp1338] =nctemp1368;
int nctemp1372=i;
nctemp1372=j*El2d->gammaxy->d[0]+nctemp1372;
int nctemp1382=i;
nctemp1382=j*Model->Beta1y->d[0]+nctemp1382;
int nctemp1386=i;
nctemp1386=j*El2d->gammaxy->d[0]+nctemp1386;
float nctemp1389 = Model->Beta1y->a[nctemp1382] * El2d->gammaxy->a[nctemp1386];
int nctemp1394=i;
nctemp1394=j*Model->Beta2y->d[0]+nctemp1394;
int nctemp1398=i;
nctemp1398=j*El2d->exy->d[0]+nctemp1398;
float nctemp1401 = Model->Beta2y->a[nctemp1394] * El2d->exy->a[nctemp1398];
float nctemp1402 = nctemp1389 + nctemp1401;
El2d->gammaxy->a[nctemp1372] =nctemp1402;
int nctemp1406=i;
nctemp1406=j*El2d->gammayx->d[0]+nctemp1406;
int nctemp1416=i;
nctemp1416=j*Model->Beta1x->d[0]+nctemp1416;
int nctemp1420=i;
nctemp1420=j*El2d->gammayx->d[0]+nctemp1420;
float nctemp1423 = Model->Beta1x->a[nctemp1416] * El2d->gammayx->a[nctemp1420];
int nctemp1428=i;
nctemp1428=j*Model->Beta2x->d[0]+nctemp1428;
int nctemp1432=i;
nctemp1432=j*El2d->eyx->d[0]+nctemp1432;
float nctemp1435 = Model->Beta2x->a[nctemp1428] * El2d->eyx->a[nctemp1432];
float nctemp1436 = nctemp1423 + nctemp1435;
El2d->gammayx->a[nctemp1406] =nctemp1436;
}
}
}
int El2dstress (struct el2d* El2d,struct model* Model)
{
  kernel_El2dstress<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
int El2dSnap (struct el2d* El2d,int it)
{
int n;
int Nx;
int Ny;
nctempchar1 *tmp;
int nctemp1437 = (El2d->sresamp <= 0);
if(nctemp1437)
{
return 1;
}
int nctemp1446=El2d->sigmaxx->d[0];Nx =nctemp1446;
int nctemp1454=El2d->sigmaxx->d[1];Ny =nctemp1454;
int nctemp1466 = Nx * Ny;
n =nctemp1466;
int nctemp1470= it;
int nctemp1472= El2d->sresamp;
int nctemp1474=LibeMod(nctemp1470,nctemp1472);
int nctemp1467 = (nctemp1474 ==0);
if(nctemp1467)
{
int nctemp1479=0;
int nctemp1476 = (El2d->snpflags->a[nctemp1479] ==1);
if(nctemp1476)
{
nctempchar1 nctemp1488;
nctempchar1 *nctemp1487;
nctemp1488=*(nctempchar1*)(El2d->sigmaxx);
int nctemp1495 = 4 * n;
nctemp1488.d[0]=nctemp1495;
nctemp1487=&nctemp1488;
tmp=nctemp1487;
int nctemp1497= El2d->fdsxx;
int nctemp1504 = 4 * n;
int nctemp1499= nctemp1504;
nctempchar1* nctemp1505= tmp;
int nctemp1508=LibeWrite(nctemp1497,nctemp1499,nctemp1505);
}
int nctemp1512=1;
int nctemp1509 = (El2d->snpflags->a[nctemp1512] ==1);
if(nctemp1509)
{
nctempchar1 nctemp1521;
nctempchar1 *nctemp1520;
nctemp1521=*(nctempchar1*)(El2d->sigmayy);
int nctemp1528 = 4 * n;
nctemp1521.d[0]=nctemp1528;
nctemp1520=&nctemp1521;
tmp=nctemp1520;
int nctemp1530= El2d->fdsyy;
int nctemp1537 = 4 * n;
int nctemp1532= nctemp1537;
nctempchar1* nctemp1538= tmp;
int nctemp1541=LibeWrite(nctemp1530,nctemp1532,nctemp1538);
}
int nctemp1545=2;
int nctemp1542 = (El2d->snpflags->a[nctemp1545] ==1);
if(nctemp1542)
{
nctempchar1 nctemp1554;
nctempchar1 *nctemp1553;
nctemp1554=*(nctempchar1*)(El2d->vx);
int nctemp1561 = 4 * n;
nctemp1554.d[0]=nctemp1561;
nctemp1553=&nctemp1554;
tmp=nctemp1553;
int nctemp1563= El2d->fdvx;
int nctemp1570 = 4 * n;
int nctemp1565= nctemp1570;
nctempchar1* nctemp1571= tmp;
int nctemp1574=LibeWrite(nctemp1563,nctemp1565,nctemp1571);
}
int nctemp1578=3;
int nctemp1575 = (El2d->snpflags->a[nctemp1578] ==1);
if(nctemp1575)
{
nctempchar1 nctemp1587;
nctempchar1 *nctemp1586;
nctemp1587=*(nctempchar1*)(El2d->vy);
int nctemp1594 = 4 * n;
nctemp1587.d[0]=nctemp1594;
nctemp1586=&nctemp1587;
tmp=nctemp1586;
int nctemp1596= El2d->fdvy;
int nctemp1603 = 4 * n;
int nctemp1598= nctemp1603;
nctempchar1* nctemp1604= tmp;
int nctemp1607=LibeWrite(nctemp1596,nctemp1598,nctemp1604);
}
}
return 1;
}
int El2dSolve (struct el2d* El2d,struct model* Model,struct src* Src,struct rec* Rec,int nt,int l)
{
int sx;
int sy;
struct diff* Diff;
int ns;
int ne;
nctempfloat2 *tmp1;
nctempfloat2 *tmp2;
int i;
int k;
float perc;
float oldperc;
int iperc;
int nctemp1613= l;
struct diff* nctemp1615=DiffNew(nctemp1613);
Diff =nctemp1615;
int nctemp1622=Model->Nx;
nctemp1622=nctemp1622*Model->Ny;
nctempfloat2 *nctemp1621;
nctemp1621=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1621->d[0]=Model->Nx;
nctemp1621->d[1]=Model->Ny;
nctemp1621->a=(float *)RunMalloc(sizeof(float)*nctemp1622);
tmp1=nctemp1621;
int nctemp1633=Model->Nx;
nctemp1633=nctemp1633*Model->Ny;
nctempfloat2 *nctemp1632;
nctemp1632=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1632->d[0]=Model->Nx;
nctemp1632->d[1]=Model->Ny;
nctemp1632->a=(float *)RunMalloc(sizeof(float)*nctemp1633);
tmp2=nctemp1632;
oldperc =0.0;
ns =El2d->ts;
int nctemp1654 = ns + nt;
ne =nctemp1654;
i =ns;
int nctemp1659 = (i < ne);
while(nctemp1659){
{
struct diff* nctemp1664= Diff;
nctempfloat2* nctemp1666= El2d->sigmaxx;
nctempfloat2* nctemp1669= El2d->exx;
float nctemp1672= Model->Dx;
int nctemp1674=DiffDxplus(nctemp1664,nctemp1666,nctemp1669,nctemp1672);
struct diff* nctemp1676= Diff;
nctempfloat2* nctemp1678= El2d->sigmaxy;
nctempfloat2* nctemp1681= El2d->exy;
float nctemp1684= Model->Dx;
int nctemp1686=DiffDyminus(nctemp1676,nctemp1678,nctemp1681,nctemp1684);
struct el2d* nctemp1688= El2d;
struct model* nctemp1690= Model;
int nctemp1692=El2dvx(nctemp1688,nctemp1690);
struct diff* nctemp1694= Diff;
nctempfloat2* nctemp1696= El2d->sigmayy;
nctempfloat2* nctemp1699= El2d->eyy;
float nctemp1702= Model->Dx;
int nctemp1704=DiffDyplus(nctemp1694,nctemp1696,nctemp1699,nctemp1702);
struct diff* nctemp1706= Diff;
nctempfloat2* nctemp1708= El2d->sigmaxy;
nctempfloat2* nctemp1711= El2d->eyx;
float nctemp1714= Model->Dx;
int nctemp1716=DiffDxminus(nctemp1706,nctemp1708,nctemp1711,nctemp1714);
struct el2d* nctemp1718= El2d;
struct model* nctemp1720= Model;
int nctemp1722=El2dvy(nctemp1718,nctemp1720);
struct diff* nctemp1724= Diff;
nctempfloat2* nctemp1726= El2d->vx;
nctempfloat2* nctemp1729= El2d->exx;
float nctemp1732= Model->Dx;
int nctemp1734=DiffDxminus(nctemp1724,nctemp1726,nctemp1729,nctemp1732);
struct diff* nctemp1736= Diff;
nctempfloat2* nctemp1738= El2d->vy;
nctempfloat2* nctemp1741= El2d->eyy;
float nctemp1744= Model->Dx;
int nctemp1746=DiffDyminus(nctemp1736,nctemp1738,nctemp1741,nctemp1744);
struct diff* nctemp1748= Diff;
nctempfloat2* nctemp1750= El2d->vy;
nctempfloat2* nctemp1753= tmp1;
float nctemp1756= Model->Dx;
int nctemp1758=DiffDxplus(nctemp1748,nctemp1750,nctemp1753,nctemp1756);
struct diff* nctemp1760= Diff;
nctempfloat2* nctemp1762= El2d->vx;
nctempfloat2* nctemp1765= tmp2;
float nctemp1768= Model->Dx;
int nctemp1770=DiffDyplus(nctemp1760,nctemp1762,nctemp1765,nctemp1768);
struct el2d* nctemp1772= El2d;
struct model* nctemp1774= Model;
nctempfloat2* nctemp1776= tmp1;
nctempfloat2* nctemp1779= tmp2;
int nctemp1782=El2dexy(nctemp1772,nctemp1774,nctemp1776,nctemp1779);
struct el2d* nctemp1784= El2d;
struct model* nctemp1786= Model;
nctempfloat2* nctemp1788= tmp1;
nctempfloat2* nctemp1791= tmp2;
int nctemp1794=El2deyx(nctemp1784,nctemp1786,nctemp1788,nctemp1791);
struct el2d* nctemp1796= El2d;
struct model* nctemp1798= Model;
int nctemp1800=El2dstress(nctemp1796,nctemp1798);
k =0;
int nctemp1805 = (k < Src->Ns);
while(nctemp1805){
{
int nctemp1813=k;
sx =Src->Sx->a[nctemp1813];
int nctemp1819=k;
sy =Src->Sy->a[nctemp1819];
int nctemp1824=sx;
nctemp1824=sy*El2d->sigmaxx->d[0]+nctemp1824;
int nctemp1831=sx;
nctemp1831=sy*El2d->sigmaxx->d[0]+nctemp1831;
int nctemp1842=i;
nctemp1842=k*Src->Sqxx->d[0]+nctemp1842;
float nctemp1850 = Model->Dx * Model->Dx;
float nctemp1851 = Src->Sqxx->a[nctemp1842] / nctemp1850;
float nctemp1852 = Model->Dt * nctemp1851;
float nctemp1853 = El2d->sigmaxx->a[nctemp1831] + nctemp1852;
El2d->sigmaxx->a[nctemp1824] =nctemp1853;
int nctemp1857=sx;
nctemp1857=sy*El2d->sigmayy->d[0]+nctemp1857;
int nctemp1864=sx;
nctemp1864=sy*El2d->sigmayy->d[0]+nctemp1864;
int nctemp1875=i;
nctemp1875=k*Src->Sqyy->d[0]+nctemp1875;
float nctemp1883 = Model->Dx * Model->Dx;
float nctemp1884 = Src->Sqyy->a[nctemp1875] / nctemp1883;
float nctemp1885 = Model->Dt * nctemp1884;
float nctemp1886 = El2d->sigmayy->a[nctemp1864] + nctemp1885;
El2d->sigmayy->a[nctemp1857] =nctemp1886;
int nctemp1890=sx;
nctemp1890=sy*El2d->vx->d[0]+nctemp1890;
int nctemp1897=sx;
nctemp1897=sy*El2d->vx->d[0]+nctemp1897;
int nctemp1908=i;
nctemp1908=k*Src->Sfx->d[0]+nctemp1908;
float nctemp1916 = Model->Dx * Model->Dx;
float nctemp1917 = Src->Sfx->a[nctemp1908] / nctemp1916;
float nctemp1918 = Model->Dt * nctemp1917;
float nctemp1919 = El2d->vx->a[nctemp1897] + nctemp1918;
El2d->vx->a[nctemp1890] =nctemp1919;
int nctemp1923=sx;
nctemp1923=sy*El2d->vy->d[0]+nctemp1923;
int nctemp1930=sx;
nctemp1930=sy*El2d->vy->d[0]+nctemp1930;
int nctemp1941=i;
nctemp1941=k*Src->Sfy->d[0]+nctemp1941;
float nctemp1949 = Model->Dx * Model->Dx;
float nctemp1950 = Src->Sfy->a[nctemp1941] / nctemp1949;
float nctemp1951 = Model->Dt * nctemp1950;
float nctemp1952 = El2d->vy->a[nctemp1930] + nctemp1951;
El2d->vy->a[nctemp1923] =nctemp1952;
}
int nctemp1961 = k + 1;
k =nctemp1961;
int nctemp1962 = (k < Src->Ns);
nctemp1805=nctemp1962;
}
float nctemp1977=(float)(i);
int nctemp1990 = ne - ns;
int nctemp1992 = nctemp1990 - 1;
float nctemp1981=(float)(nctemp1992);
float nctemp1993 = nctemp1977 / nctemp1981;
float nctemp1994 = 1000.0 * nctemp1993;
perc =nctemp1994;
float nctemp2002 = perc - oldperc;
int nctemp1995 = (nctemp2002 >= 10.0);
if(nctemp1995)
{
int nctemp2011=(int)(perc);
int nctemp2015 = nctemp2011 / 10;
iperc =nctemp2015;
int nctemp2019= iperc;
int nctemp2021= 10;
int nctemp2023=LibeMod(nctemp2019,nctemp2021);
int nctemp2016 = (nctemp2023 ==0);
if(nctemp2016)
{
int nctemp2026= 4;
int nctemp2028= iperc;
int nctemp2030=LibePuti(nctemp2026,nctemp2028);
int nctemp2032= 4;
struct nctempchar1 *nctemp2036;
static struct nctempchar1 nctemp2037 = {{ 3}, (char*)"\n\0"};
nctemp2036=&nctemp2037;
nctempchar1* nctemp2034= nctemp2036;
int nctemp2038=LibePuts(nctemp2032,nctemp2034);
int nctemp2040= 4;
int nctemp2042=LibeFlush(nctemp2040);
}
oldperc =perc;
}
struct rec* nctemp2048= Rec;
int nctemp2050= i;
nctempfloat2* nctemp2052= El2d->sigmaxx;
nctempfloat2* nctemp2055= El2d->sigmayy;
nctempfloat2* nctemp2058= El2d->vx;
nctempfloat2* nctemp2061= El2d->vy;
int nctemp2064=RecReceiver(nctemp2048,nctemp2050,nctemp2052,nctemp2055,nctemp2058,nctemp2061);
struct el2d* nctemp2066= El2d;
int nctemp2068= i;
int nctemp2070=El2dSnap(nctemp2066,nctemp2068);
}
int nctemp2079 = i + 1;
i =nctemp2079;
int nctemp2080 = (i < ne);
nctemp1659=nctemp2080;
}
return 1;
}
}
