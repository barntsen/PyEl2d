//  Translated by epsc  version December 2021  
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int LibeErrno;
nctempchar1 *LibeErrstr;
int LibeErrinit ();
int LibeGeterrno ();
int LibeClearerr ();
nctempchar1 * LibeGeterrstr ();
nctempchar1 * LibeGetenv (nctempchar1 *name);
;
;
;
;
;
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
;
;
;
;
;
;
;
float LibeSincosmax;
float LibeSincoslim;
float LibeLnmax;
float LibeLnmin;
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSincos (float x,float y,float sign);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeAtan (float f);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeMathinit ();
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1 * LibeStradd (nctempchar1 *t,nctempchar1 *s);
nctempchar1 * LibeStrsave (nctempchar1 *s);
int LibeIsalhpa (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoaf (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoae (int mant,int nexp,int nfield,int nfrac,nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
struct LibeFdescr {int cnt;
int ptr;
int bufsize;
nctempchar1 *base;
int readflg;
int writflg;
int unbflg;
int errflg;
int eoflg;
int fd;
};
typedef struct nctempLibeFdescr1 {int d[1]; struct LibeFdescr *a; } nctempLibeFdescr1;
struct nctempLibeFdescr2 {int d[2]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr3 {int d[3]; struct LibeFdescr *a; } ;
struct nctempLibeFdescr4 {int d[4]; struct LibeFdescr *a; } ;
;
struct nctempLibeFdescr1 *LibeFarr;
;
nctempchar1 *LibeTmpstr;
int LibeIoinit ();
int LibeFlushbuff (int fp);
int LibeFillbuff (int fp);
int LibeFlush (int fp);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibePutf (int fp,float fval,nctempchar1 *form);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibeRead (int fp,int n,nctempchar1 *buffer);
int LibeWrite (int fp,int n,nctempchar1 *buffer);
int LibeSeek (int fp,int pos,int flag);
int LibeIodelete ();
int NBLOCKS;
int NTHREADS;
int LibeSetnb (int nb);
int LibeSetnt (int nt);
int LibeGetnb ();
int LibeGetnt ();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeSystem (nctempchar1 *cmd);
int LibeInit ();
int LibeExit ();
struct diff {int l;
int lmax;
nctempfloat2 *coeffs;
nctempfloat1 *w;
};
typedef struct nctempdiff1 {int d[1]; struct diff *a; } nctempdiff1;
struct nctempdiff2 {int d[2]; struct diff *a; } ;
struct nctempdiff3 {int d[3]; struct diff *a; } ;
struct nctempdiff4 {int d[4]; struct diff *a; } ;
struct diff* DiffNew (int l);
int DiffDxminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDxplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
struct rec {int nr;
nctempint1 *rx;
nctempint1 *ry;
int fd;
int nt;
nctempfloat2 *p;
nctempfloat2 *sxx;
nctempfloat2 *syy;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *wrk;
int resamp;
int pit;
};
typedef struct nctemprec1 {int d[1]; struct rec *a; } nctemprec1;
struct nctemprec2 {int d[2]; struct rec *a; } ;
struct nctemprec3 {int d[3]; struct rec *a; } ;
struct nctemprec4 {int d[4]; struct rec *a; } ;
struct rec* RecNew (nctempint1 *rx,nctempint1 *ry,int nt,int resamp);
int RecReceiver (struct rec* Rec,int it,nctempfloat2 *p,nctempfloat2 *vx,nctempfloat2 *vy);
nctempfloat2 * RecGetrec (struct rec* Rec,int data);
struct src {nctempint1 *Sx;
nctempint1 *Sy;
nctempfloat2 *Sqyy;
nctempfloat2 *Sqxx;
nctempfloat2 *Sfx;
nctempfloat2 *Sfy;
int Ns;
};
typedef struct nctempsrc1 {int d[1]; struct src *a; } nctempsrc1;
struct nctempsrc2 {int d[2]; struct src *a; } ;
struct nctempsrc3 {int d[3]; struct src *a; } ;
struct nctempsrc4 {int d[4]; struct src *a; } ;
struct src* SrcNew (nctempint1 *sx,nctempint1 *sy,nctempfloat2 *sqxx,nctempfloat2 *sqyy,nctempfloat2 *sfx,nctempfloat2 *sfy);
int SrcDel (struct src* Src);
int Srcricker (nctempfloat1 *source,float t0,float f0,int nt,float dt);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Qlx;
nctempfloat2 *Qly;
nctempfloat2 *Qmx;
nctempfloat2 *Qmy;
nctempfloat2 *Qpx;
nctempfloat2 *Qpy;
nctempfloat2 *Lambda;
nctempfloat2 *Mu;
nctempfloat2 *Muxy;
nctempfloat2 *Dmuxyx;
nctempfloat2 *Dmuxyy;
nctempfloat2 *Dlambdax;
nctempfloat2 *Dlambday;
nctempfloat2 *Dmux;
nctempfloat2 *Dmuy;
nctempfloat2 *Drhopx;
nctempfloat2 *Drhopy;
nctempfloat2 *Rho;
nctempfloat2 *Rhox;
nctempfloat2 *Rhoy;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Beta1x;
nctempfloat2 *Beta2x;
nctempfloat2 *Beta1y;
nctempfloat2 *Beta2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
nctempfloat1 *dx1;
nctempfloat1 *dy1;
nctempfloat1 *dx2;
nctempfloat1 *dy2;
float Dx;
float Dt;
int Freesurface;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
;
;
;
;
int Modeld (nctempfloat1 *d,float dx,int nb);
int Modele (nctempfloat1 *d,float dx,int nb);
nctempfloat2 * Modelcopy (nctempfloat2 *a);
int Modelstaggerx (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelstaggery (nctempfloat2 *a,nctempfloat2 *astagg);
int Modelslscoeffs (nctempfloat2 *Qx,nctempfloat2 *Qy,nctempfloat2 *modx,nctempfloat2 *mody,nctempfloat2 *coeff1x,nctempfloat2 *coeff1y,nctempfloat2 *coeff2x,nctempfloat2 *coeff2y,struct model* Model);
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Freesurface);
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qlx,nctempfloat2 *Qly,nctempfloat2 *Qmx,nctempfloat2 *Qmy,nctempfloat2 *Qpx,nctempfloat2 *Qpy,float Dx,float Dt,float W0,int Nb,int Rheol,int Freesurface);
float ModelStability (struct model* Model);
struct el2d {nctempfloat2 *p;
nctempfloat2 *sigmaxx;
nctempfloat2 *sigmayy;
nctempfloat2 *sigmaxy;
nctempfloat2 *sigmayx;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *exx;
nctempfloat2 *eyy;
nctempfloat2 *exy;
nctempfloat2 *eyx;
nctempfloat2 *e;
nctempfloat2 *gammaxx;
nctempfloat2 *gammayy;
nctempfloat2 *gammaxy;
nctempfloat2 *gammayx;
nctempfloat2 *thetaxxx;
nctempfloat2 *thetayyy;
nctempfloat2 *thetaxyx;
nctempfloat2 *thetayxy;
int ts;
int fdp;
int fdvx;
int fdvy;
int fde;
int fdexy;
int sresamp;
nctempint1 *snpflags;
};
typedef struct nctempel2d1 {int d[1]; struct el2d *a; } nctempel2d1;
struct nctempel2d2 {int d[2]; struct el2d *a; } ;
struct nctempel2d3 {int d[3]; struct el2d *a; } ;
struct nctempel2d4 {int d[4]; struct el2d *a; } ;
struct el2d* El2dNew (struct model* Model,int sresamp,nctempint1 *snpflags)
{
struct el2d* El2d;
int i;
int j;
struct el2d *nctemp5=(struct el2d*)RunMalloc(sizeof(struct el2d));
El2d =nctemp5;
El2d->sresamp =sresamp;
El2d->snpflags=snpflags;
int nctemp23=Model->Nx;
nctemp23=nctemp23*Model->Ny;
nctempfloat2 *nctemp22;
nctemp22=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp22->d[0]=Model->Nx;
nctemp22->d[1]=Model->Ny;
nctemp22->a=(float *)RunMalloc(sizeof(float)*nctemp23);
El2d->p=nctemp22;
int nctemp34=Model->Nx;
nctemp34=nctemp34*Model->Ny;
nctempfloat2 *nctemp33;
nctemp33=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp33->d[0]=Model->Nx;
nctemp33->d[1]=Model->Ny;
nctemp33->a=(float *)RunMalloc(sizeof(float)*nctemp34);
El2d->sigmaxx=nctemp33;
int nctemp45=Model->Nx;
nctemp45=nctemp45*Model->Ny;
nctempfloat2 *nctemp44;
nctemp44=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp44->d[0]=Model->Nx;
nctemp44->d[1]=Model->Ny;
nctemp44->a=(float *)RunMalloc(sizeof(float)*nctemp45);
El2d->sigmayy=nctemp44;
int nctemp56=Model->Nx;
nctemp56=nctemp56*Model->Ny;
nctempfloat2 *nctemp55;
nctemp55=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp55->d[0]=Model->Nx;
nctemp55->d[1]=Model->Ny;
nctemp55->a=(float *)RunMalloc(sizeof(float)*nctemp56);
El2d->p=nctemp55;
int nctemp67=Model->Nx;
nctemp67=nctemp67*Model->Ny;
nctempfloat2 *nctemp66;
nctemp66=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp66->d[0]=Model->Nx;
nctemp66->d[1]=Model->Ny;
nctemp66->a=(float *)RunMalloc(sizeof(float)*nctemp67);
El2d->sigmaxy=nctemp66;
int nctemp78=Model->Nx;
nctemp78=nctemp78*Model->Ny;
nctempfloat2 *nctemp77;
nctemp77=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp77->d[0]=Model->Nx;
nctemp77->d[1]=Model->Ny;
nctemp77->a=(float *)RunMalloc(sizeof(float)*nctemp78);
El2d->sigmayx=nctemp77;
int nctemp89=Model->Nx;
nctemp89=nctemp89*Model->Ny;
nctempfloat2 *nctemp88;
nctemp88=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp88->d[0]=Model->Nx;
nctemp88->d[1]=Model->Ny;
nctemp88->a=(float *)RunMalloc(sizeof(float)*nctemp89);
El2d->vx=nctemp88;
int nctemp100=Model->Nx;
nctemp100=nctemp100*Model->Ny;
nctempfloat2 *nctemp99;
nctemp99=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp99->d[0]=Model->Nx;
nctemp99->d[1]=Model->Ny;
nctemp99->a=(float *)RunMalloc(sizeof(float)*nctemp100);
El2d->vy=nctemp99;
int nctemp111=Model->Nx;
nctemp111=nctemp111*Model->Ny;
nctempfloat2 *nctemp110;
nctemp110=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp110->d[0]=Model->Nx;
nctemp110->d[1]=Model->Ny;
nctemp110->a=(float *)RunMalloc(sizeof(float)*nctemp111);
El2d->exx=nctemp110;
int nctemp122=Model->Nx;
nctemp122=nctemp122*Model->Ny;
nctempfloat2 *nctemp121;
nctemp121=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp121->d[0]=Model->Nx;
nctemp121->d[1]=Model->Ny;
nctemp121->a=(float *)RunMalloc(sizeof(float)*nctemp122);
El2d->eyy=nctemp121;
int nctemp133=Model->Nx;
nctemp133=nctemp133*Model->Ny;
nctempfloat2 *nctemp132;
nctemp132=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp132->d[0]=Model->Nx;
nctemp132->d[1]=Model->Ny;
nctemp132->a=(float *)RunMalloc(sizeof(float)*nctemp133);
El2d->exy=nctemp132;
int nctemp144=Model->Nx;
nctemp144=nctemp144*Model->Ny;
nctempfloat2 *nctemp143;
nctemp143=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp143->d[0]=Model->Nx;
nctemp143->d[1]=Model->Ny;
nctemp143->a=(float *)RunMalloc(sizeof(float)*nctemp144);
El2d->eyx=nctemp143;
int nctemp155=Model->Nx;
nctemp155=nctemp155*Model->Ny;
nctempfloat2 *nctemp154;
nctemp154=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp154->d[0]=Model->Nx;
nctemp154->d[1]=Model->Ny;
nctemp154->a=(float *)RunMalloc(sizeof(float)*nctemp155);
El2d->e=nctemp154;
int nctemp166=Model->Nx;
nctemp166=nctemp166*Model->Ny;
nctempfloat2 *nctemp165;
nctemp165=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp165->d[0]=Model->Nx;
nctemp165->d[1]=Model->Ny;
nctemp165->a=(float *)RunMalloc(sizeof(float)*nctemp166);
El2d->gammaxx=nctemp165;
int nctemp177=Model->Nx;
nctemp177=nctemp177*Model->Ny;
nctempfloat2 *nctemp176;
nctemp176=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp176->d[0]=Model->Nx;
nctemp176->d[1]=Model->Ny;
nctemp176->a=(float *)RunMalloc(sizeof(float)*nctemp177);
El2d->gammayy=nctemp176;
int nctemp188=Model->Nx;
nctemp188=nctemp188*Model->Ny;
nctempfloat2 *nctemp187;
nctemp187=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp187->d[0]=Model->Nx;
nctemp187->d[1]=Model->Ny;
nctemp187->a=(float *)RunMalloc(sizeof(float)*nctemp188);
El2d->gammaxy=nctemp187;
int nctemp199=Model->Nx;
nctemp199=nctemp199*Model->Ny;
nctempfloat2 *nctemp198;
nctemp198=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp198->d[0]=Model->Nx;
nctemp198->d[1]=Model->Ny;
nctemp198->a=(float *)RunMalloc(sizeof(float)*nctemp199);
El2d->gammayx=nctemp198;
int nctemp210=Model->Nx;
nctemp210=nctemp210*Model->Ny;
nctempfloat2 *nctemp209;
nctemp209=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp209->d[0]=Model->Nx;
nctemp209->d[1]=Model->Ny;
nctemp209->a=(float *)RunMalloc(sizeof(float)*nctemp210);
El2d->thetaxxx=nctemp209;
int nctemp221=Model->Nx;
nctemp221=nctemp221*Model->Ny;
nctempfloat2 *nctemp220;
nctemp220=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp220->d[0]=Model->Nx;
nctemp220->d[1]=Model->Ny;
nctemp220->a=(float *)RunMalloc(sizeof(float)*nctemp221);
El2d->thetayyy=nctemp220;
int nctemp232=Model->Nx;
nctemp232=nctemp232*Model->Ny;
nctempfloat2 *nctemp231;
nctemp231=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp231->d[0]=Model->Nx;
nctemp231->d[1]=Model->Ny;
nctemp231->a=(float *)RunMalloc(sizeof(float)*nctemp232);
El2d->thetayxy=nctemp231;
int nctemp243=Model->Nx;
nctemp243=nctemp243*Model->Ny;
nctempfloat2 *nctemp242;
nctemp242=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp242->d[0]=Model->Nx;
nctemp242->d[1]=Model->Ny;
nctemp242->a=(float *)RunMalloc(sizeof(float)*nctemp243);
El2d->thetaxyx=nctemp242;
i =0;
int nctemp252 = (i < Model->Nx);
while(nctemp252){
{
j =0;
int nctemp260 = (j < Model->Ny);
while(nctemp260){
{
int nctemp267=i;
nctemp267=j*El2d->p->d[0]+nctemp267;
El2d->p->a[nctemp267] =0.0;
int nctemp274=i;
nctemp274=j*El2d->sigmaxx->d[0]+nctemp274;
El2d->sigmaxx->a[nctemp274] =0.0;
int nctemp281=i;
nctemp281=j*El2d->sigmayy->d[0]+nctemp281;
El2d->sigmayy->a[nctemp281] =0.0;
int nctemp288=i;
nctemp288=j*El2d->sigmaxy->d[0]+nctemp288;
El2d->sigmaxy->a[nctemp288] =0.0;
int nctemp295=i;
nctemp295=j*El2d->sigmayx->d[0]+nctemp295;
El2d->sigmayx->a[nctemp295] =0.0;
int nctemp302=i;
nctemp302=j*El2d->vx->d[0]+nctemp302;
El2d->vx->a[nctemp302] =0.0;
int nctemp309=i;
nctemp309=j*El2d->vy->d[0]+nctemp309;
El2d->vy->a[nctemp309] =0.0;
int nctemp316=i;
nctemp316=j*El2d->exx->d[0]+nctemp316;
El2d->exx->a[nctemp316] =0.0;
int nctemp323=i;
nctemp323=j*El2d->eyy->d[0]+nctemp323;
El2d->eyy->a[nctemp323] =0.0;
int nctemp330=i;
nctemp330=j*El2d->exy->d[0]+nctemp330;
El2d->exy->a[nctemp330] =0.0;
int nctemp337=i;
nctemp337=j*El2d->eyx->d[0]+nctemp337;
El2d->eyx->a[nctemp337] =0.0;
int nctemp344=i;
nctemp344=j*El2d->e->d[0]+nctemp344;
El2d->e->a[nctemp344] =0.0;
int nctemp351=i;
nctemp351=j*El2d->gammaxx->d[0]+nctemp351;
El2d->gammaxx->a[nctemp351] =0.0;
int nctemp358=i;
nctemp358=j*El2d->gammayy->d[0]+nctemp358;
El2d->gammayy->a[nctemp358] =0.0;
int nctemp365=i;
nctemp365=j*El2d->gammaxy->d[0]+nctemp365;
El2d->gammaxy->a[nctemp365] =0.0;
int nctemp372=i;
nctemp372=j*El2d->gammayx->d[0]+nctemp372;
El2d->gammayx->a[nctemp372] =0.0;
int nctemp379=i;
nctemp379=j*El2d->thetaxxx->d[0]+nctemp379;
El2d->thetaxxx->a[nctemp379] =0.0;
int nctemp386=i;
nctemp386=j*El2d->thetayyy->d[0]+nctemp386;
El2d->thetayyy->a[nctemp386] =0.0;
int nctemp393=i;
nctemp393=j*El2d->thetayxy->d[0]+nctemp393;
El2d->thetayxy->a[nctemp393] =0.0;
int nctemp400=i;
nctemp400=j*El2d->thetaxyx->d[0]+nctemp400;
El2d->thetaxyx->a[nctemp400] =0.0;
El2d->ts =0;
}
int nctemp416 = j + 1;
j =nctemp416;
int nctemp417 = (j < Model->Ny);
nctemp260=nctemp417;
}
}
int nctemp429 = i + 1;
i =nctemp429;
int nctemp430 = (i < Model->Nx);
nctemp252=nctemp430;
}
int nctemp437=0;
int nctemp434 = (El2d->snpflags->a[nctemp437] ==1);
if(nctemp434)
{
struct nctempchar1 *nctemp446;
static struct nctempchar1 nctemp447 = {{ 10}, (char*)"snp-p.bin\0"};
nctemp446=&nctemp447;
nctempchar1* nctemp444= nctemp446;
struct nctempchar1 *nctemp450;
static struct nctempchar1 nctemp451 = {{ 2}, (char*)"w\0"};
nctemp450=&nctemp451;
nctempchar1* nctemp448= nctemp450;
int nctemp452=LibeOpen(nctemp444,nctemp448);
El2d->fdp =nctemp452;
}
int nctemp456=1;
int nctemp453 = (El2d->snpflags->a[nctemp456] ==1);
if(nctemp453)
{
struct nctempchar1 *nctemp465;
static struct nctempchar1 nctemp466 = {{ 11}, (char*)"snp-vx.bin\0"};
nctemp465=&nctemp466;
nctempchar1* nctemp463= nctemp465;
struct nctempchar1 *nctemp469;
static struct nctempchar1 nctemp470 = {{ 2}, (char*)"w\0"};
nctemp469=&nctemp470;
nctempchar1* nctemp467= nctemp469;
int nctemp471=LibeOpen(nctemp463,nctemp467);
El2d->fdvx =nctemp471;
}
int nctemp475=2;
int nctemp472 = (El2d->snpflags->a[nctemp475] ==1);
if(nctemp472)
{
struct nctempchar1 *nctemp484;
static struct nctempchar1 nctemp485 = {{ 11}, (char*)"snp-vy.bin\0"};
nctemp484=&nctemp485;
nctempchar1* nctemp482= nctemp484;
struct nctempchar1 *nctemp488;
static struct nctempchar1 nctemp489 = {{ 2}, (char*)"w\0"};
nctemp488=&nctemp489;
nctempchar1* nctemp486= nctemp488;
int nctemp490=LibeOpen(nctemp482,nctemp486);
El2d->fdvy =nctemp490;
}
int nctemp494=3;
int nctemp491 = (El2d->snpflags->a[nctemp494] ==1);
if(nctemp491)
{
struct nctempchar1 *nctemp503;
static struct nctempchar1 nctemp504 = {{ 10}, (char*)"snp-e.bin\0"};
nctemp503=&nctemp504;
nctempchar1* nctemp501= nctemp503;
struct nctempchar1 *nctemp507;
static struct nctempchar1 nctemp508 = {{ 2}, (char*)"w\0"};
nctemp507=&nctemp508;
nctempchar1* nctemp505= nctemp507;
int nctemp509=LibeOpen(nctemp501,nctemp505);
El2d->fde =nctemp509;
}
int nctemp513=4;
int nctemp510 = (El2d->snpflags->a[nctemp513] ==1);
if(nctemp510)
{
struct nctempchar1 *nctemp522;
static struct nctempchar1 nctemp523 = {{ 12}, (char*)"snp-exy.bin\0"};
nctemp522=&nctemp523;
nctempchar1* nctemp520= nctemp522;
struct nctempchar1 *nctemp526;
static struct nctempchar1 nctemp527 = {{ 2}, (char*)"w\0"};
nctemp526=&nctemp527;
nctempchar1* nctemp524= nctemp526;
int nctemp528=LibeOpen(nctemp520,nctemp524);
El2d->fdexy =nctemp528;
}
return El2d;
}
__global__ void kernel_El2dvx (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp540=0;
int nctemp542=nx;
int nctemp545=0;
int nctemp547=ny;
int nctemp538=(nctemp542-nctemp540)*(nctemp547-nctemp545);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp538;nctempno+=blockDim.x*gridDim.x){
j=nctemp545+nctempno/(nctemp542-nctemp540);
i=nctemp540+nctempno%(nctemp542-nctemp540);
{
int nctemp552=i;
nctemp552=j*El2d->vx->d[0]+nctemp552;
int nctemp572=i;
nctemp572=j*Model->Rhox->d[0]+nctemp572;
float nctemp575 = Model->Dt * Model->Rhox->a[nctemp572];
int nctemp580=i;
nctemp580=j*El2d->exx->d[0]+nctemp580;
int nctemp584=i;
nctemp584=j*El2d->exy->d[0]+nctemp584;
float nctemp587 = El2d->exx->a[nctemp580] + El2d->exy->a[nctemp584];
float nctemp588 = nctemp575 * nctemp587;
int nctemp597=i;
nctemp597=j*El2d->thetaxxx->d[0]+nctemp597;
float nctemp600 = Model->Dt * El2d->thetaxxx->a[nctemp597];
int nctemp602=i;
nctemp602=j*Model->Drhopx->d[0]+nctemp602;
float nctemp605 = nctemp600 * Model->Drhopx->a[nctemp602];
float nctemp606 = nctemp588 + nctemp605;
int nctemp615=i;
nctemp615=j*El2d->thetayxy->d[0]+nctemp615;
float nctemp618 = Model->Dt * El2d->thetayxy->a[nctemp615];
int nctemp620=i;
nctemp620=j*Model->Drhopy->d[0]+nctemp620;
float nctemp623 = nctemp618 * Model->Drhopy->a[nctemp620];
float nctemp624 = nctemp606 + nctemp623;
int nctemp626=i;
nctemp626=j*El2d->vx->d[0]+nctemp626;
float nctemp629 = nctemp624 + El2d->vx->a[nctemp626];
El2d->vx->a[nctemp552] =nctemp629;
int nctemp633=i;
nctemp633=j*El2d->thetaxxx->d[0]+nctemp633;
int nctemp643=i;
nctemp643=j*Model->Eta1x->d[0]+nctemp643;
int nctemp647=i;
nctemp647=j*El2d->thetaxxx->d[0]+nctemp647;
float nctemp650 = Model->Eta1x->a[nctemp643] * El2d->thetaxxx->a[nctemp647];
int nctemp655=i;
nctemp655=j*Model->Eta2x->d[0]+nctemp655;
int nctemp659=i;
nctemp659=j*El2d->exx->d[0]+nctemp659;
float nctemp662 = Model->Eta2x->a[nctemp655] * El2d->exx->a[nctemp659];
float nctemp663 = nctemp650 + nctemp662;
El2d->thetaxxx->a[nctemp633] =nctemp663;
int nctemp667=i;
nctemp667=j*El2d->thetayxy->d[0]+nctemp667;
int nctemp677=i;
nctemp677=j*Model->Eta1y->d[0]+nctemp677;
int nctemp681=i;
nctemp681=j*El2d->thetayxy->d[0]+nctemp681;
float nctemp684 = Model->Eta1y->a[nctemp677] * El2d->thetayxy->a[nctemp681];
int nctemp689=i;
nctemp689=j*Model->Eta2y->d[0]+nctemp689;
int nctemp693=i;
nctemp693=j*El2d->exy->d[0]+nctemp693;
float nctemp696 = Model->Eta2y->a[nctemp689] * El2d->exy->a[nctemp693];
float nctemp697 = nctemp684 + nctemp696;
El2d->thetayxy->a[nctemp667] =nctemp697;
}
}
}
int El2dvx (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvx<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dvy (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp708=0;
int nctemp710=nx;
int nctemp713=0;
int nctemp715=ny;
int nctemp706=(nctemp710-nctemp708)*(nctemp715-nctemp713);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp706;nctempno+=blockDim.x*gridDim.x){
j=nctemp713+nctempno/(nctemp710-nctemp708);
i=nctemp708+nctempno%(nctemp710-nctemp708);
{
int nctemp720=i;
nctemp720=j*El2d->vy->d[0]+nctemp720;
int nctemp740=i;
nctemp740=j*Model->Rhoy->d[0]+nctemp740;
float nctemp743 = Model->Dt * Model->Rhoy->a[nctemp740];
int nctemp748=i;
nctemp748=j*El2d->eyy->d[0]+nctemp748;
int nctemp752=i;
nctemp752=j*El2d->eyx->d[0]+nctemp752;
float nctemp755 = El2d->eyy->a[nctemp748] + El2d->eyx->a[nctemp752];
float nctemp756 = nctemp743 * nctemp755;
int nctemp765=i;
nctemp765=j*El2d->thetayyy->d[0]+nctemp765;
float nctemp768 = Model->Dt * El2d->thetayyy->a[nctemp765];
int nctemp770=i;
nctemp770=j*Model->Drhopy->d[0]+nctemp770;
float nctemp773 = nctemp768 * Model->Drhopy->a[nctemp770];
float nctemp774 = nctemp756 + nctemp773;
int nctemp783=i;
nctemp783=j*El2d->thetaxyx->d[0]+nctemp783;
float nctemp786 = Model->Dt * El2d->thetaxyx->a[nctemp783];
int nctemp788=i;
nctemp788=j*Model->Drhopx->d[0]+nctemp788;
float nctemp791 = nctemp786 * Model->Drhopx->a[nctemp788];
float nctemp792 = nctemp774 + nctemp791;
int nctemp794=i;
nctemp794=j*El2d->vy->d[0]+nctemp794;
float nctemp797 = nctemp792 + El2d->vy->a[nctemp794];
El2d->vy->a[nctemp720] =nctemp797;
int nctemp801=i;
nctemp801=j*El2d->thetayyy->d[0]+nctemp801;
int nctemp811=i;
nctemp811=j*Model->Eta1y->d[0]+nctemp811;
int nctemp815=i;
nctemp815=j*El2d->thetayyy->d[0]+nctemp815;
float nctemp818 = Model->Eta1y->a[nctemp811] * El2d->thetayyy->a[nctemp815];
int nctemp823=i;
nctemp823=j*Model->Eta2y->d[0]+nctemp823;
int nctemp827=i;
nctemp827=j*El2d->eyy->d[0]+nctemp827;
float nctemp830 = Model->Eta2y->a[nctemp823] * El2d->eyy->a[nctemp827];
float nctemp831 = nctemp818 + nctemp830;
El2d->thetayyy->a[nctemp801] =nctemp831;
int nctemp835=i;
nctemp835=j*El2d->thetaxyx->d[0]+nctemp835;
int nctemp845=i;
nctemp845=j*Model->Eta1x->d[0]+nctemp845;
int nctemp849=i;
nctemp849=j*El2d->thetaxyx->d[0]+nctemp849;
float nctemp852 = Model->Eta1x->a[nctemp845] * El2d->thetaxyx->a[nctemp849];
int nctemp857=i;
nctemp857=j*Model->Eta2x->d[0]+nctemp857;
int nctemp861=i;
nctemp861=j*El2d->eyx->d[0]+nctemp861;
float nctemp864 = Model->Eta2x->a[nctemp857] * El2d->eyx->a[nctemp861];
float nctemp865 = nctemp852 + nctemp864;
El2d->thetaxyx->a[nctemp835] =nctemp865;
}
}
}
int El2dvy (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvy<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2de (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp876=0;
int nctemp878=nx;
int nctemp881=0;
int nctemp883=ny;
int nctemp874=(nctemp878-nctemp876)*(nctemp883-nctemp881);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp874;nctempno+=blockDim.x*gridDim.x){
j=nctemp881+nctempno/(nctemp878-nctemp876);
i=nctemp876+nctempno%(nctemp878-nctemp876);
{
int nctemp888=i;
nctemp888=j*El2d->e->d[0]+nctemp888;
int nctemp895=i;
nctemp895=j*El2d->exx->d[0]+nctemp895;
int nctemp899=i;
nctemp899=j*El2d->eyy->d[0]+nctemp899;
float nctemp902 = El2d->exx->a[nctemp895] + El2d->eyy->a[nctemp899];
El2d->e->a[nctemp888] =nctemp902;
}
}
}
int El2de (struct el2d* El2d,struct model* Model)
{
  kernel_El2de<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp913=0;
int nctemp915=nx;
int nctemp918=0;
int nctemp920=ny;
int nctemp911=(nctemp915-nctemp913)*(nctemp920-nctemp918);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp911;nctempno+=blockDim.x*gridDim.x){
j=nctemp918+nctempno/(nctemp915-nctemp913);
i=nctemp913+nctempno%(nctemp915-nctemp913);
{
int nctemp925=i;
nctemp925=j*El2d->exy->d[0]+nctemp925;
int nctemp936=i;
nctemp936=j*tmp1->d[0]+nctemp936;
int nctemp940=i;
nctemp940=j*tmp2->d[0]+nctemp940;
float nctemp943 = tmp1->a[nctemp936] + tmp2->a[nctemp940];
float nctemp944 = 0.5 * nctemp943;
El2d->exy->a[nctemp925] =nctemp944;
}
}
}
int El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2dexy<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp955=0;
int nctemp957=nx;
int nctemp960=0;
int nctemp962=ny;
int nctemp953=(nctemp957-nctemp955)*(nctemp962-nctemp960);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp953;nctempno+=blockDim.x*gridDim.x){
j=nctemp960+nctempno/(nctemp957-nctemp955);
i=nctemp955+nctempno%(nctemp957-nctemp955);
{
int nctemp967=i;
nctemp967=j*El2d->eyx->d[0]+nctemp967;
int nctemp978=i;
nctemp978=j*tmp1->d[0]+nctemp978;
int nctemp982=i;
nctemp982=j*tmp2->d[0]+nctemp982;
float nctemp985 = tmp1->a[nctemp978] + tmp2->a[nctemp982];
float nctemp986 = 0.5 * nctemp985;
El2d->eyx->a[nctemp967] =nctemp986;
}
}
}
int El2deyx (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2deyx<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2dstress (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp997=0;
int nctemp999=nx;
int nctemp1002=0;
int nctemp1004=ny;
int nctemp995=(nctemp999-nctemp997)*(nctemp1004-nctemp1002);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp995;nctempno+=blockDim.x*gridDim.x){
j=nctemp1002+nctempno/(nctemp999-nctemp997);
i=nctemp997+nctempno%(nctemp999-nctemp997);
{
int nctemp1009=i;
nctemp1009=j*El2d->sigmaxx->d[0]+nctemp1009;
int nctemp1032=i;
nctemp1032=j*Model->Lambda->d[0]+nctemp1032;
float nctemp1035 = Model->Dt * Model->Lambda->a[nctemp1032];
int nctemp1040=i;
nctemp1040=j*El2d->exx->d[0]+nctemp1040;
int nctemp1044=i;
nctemp1044=j*El2d->eyy->d[0]+nctemp1044;
float nctemp1047 = El2d->exx->a[nctemp1040] + El2d->eyy->a[nctemp1044];
float nctemp1048 = nctemp1035 * nctemp1047;
float nctemp1060 = 2.0 * Model->Dt;
int nctemp1062=i;
nctemp1062=j*Model->Mu->d[0]+nctemp1062;
float nctemp1065 = nctemp1060 * Model->Mu->a[nctemp1062];
int nctemp1067=i;
nctemp1067=j*El2d->exx->d[0]+nctemp1067;
float nctemp1070 = nctemp1065 * El2d->exx->a[nctemp1067];
float nctemp1071 = nctemp1048 + nctemp1070;
int nctemp1083=i;
nctemp1083=j*El2d->gammaxx->d[0]+nctemp1083;
int nctemp1087=i;
nctemp1087=j*Model->Dlambdax->d[0]+nctemp1087;
float nctemp1090 = El2d->gammaxx->a[nctemp1083] * Model->Dlambdax->a[nctemp1087];
int nctemp1095=i;
nctemp1095=j*El2d->gammayy->d[0]+nctemp1095;
int nctemp1099=i;
nctemp1099=j*Model->Dlambday->d[0]+nctemp1099;
float nctemp1102 = El2d->gammayy->a[nctemp1095] * Model->Dlambday->a[nctemp1099];
float nctemp1103 = nctemp1090 + nctemp1102;
float nctemp1104 = Model->Dt * nctemp1103;
float nctemp1105 = nctemp1071 + nctemp1104;
float nctemp1117 = 2.0 * Model->Dt;
int nctemp1119=i;
nctemp1119=j*El2d->gammaxx->d[0]+nctemp1119;
float nctemp1122 = nctemp1117 * El2d->gammaxx->a[nctemp1119];
int nctemp1124=i;
nctemp1124=j*Model->Dmux->d[0]+nctemp1124;
float nctemp1127 = nctemp1122 * Model->Dmux->a[nctemp1124];
float nctemp1128 = nctemp1105 + nctemp1127;
int nctemp1130=i;
nctemp1130=j*El2d->sigmaxx->d[0]+nctemp1130;
float nctemp1133 = nctemp1128 + El2d->sigmaxx->a[nctemp1130];
El2d->sigmaxx->a[nctemp1009] =nctemp1133;
int nctemp1137=i;
nctemp1137=j*El2d->sigmayy->d[0]+nctemp1137;
int nctemp1160=i;
nctemp1160=j*Model->Lambda->d[0]+nctemp1160;
float nctemp1163 = Model->Dt * Model->Lambda->a[nctemp1160];
int nctemp1168=i;
nctemp1168=j*El2d->exx->d[0]+nctemp1168;
int nctemp1172=i;
nctemp1172=j*El2d->eyy->d[0]+nctemp1172;
float nctemp1175 = El2d->exx->a[nctemp1168] + El2d->eyy->a[nctemp1172];
float nctemp1176 = nctemp1163 * nctemp1175;
float nctemp1188 = 2.0 * Model->Dt;
int nctemp1190=i;
nctemp1190=j*Model->Mu->d[0]+nctemp1190;
float nctemp1193 = nctemp1188 * Model->Mu->a[nctemp1190];
int nctemp1195=i;
nctemp1195=j*El2d->eyy->d[0]+nctemp1195;
float nctemp1198 = nctemp1193 * El2d->eyy->a[nctemp1195];
float nctemp1199 = nctemp1176 + nctemp1198;
int nctemp1211=i;
nctemp1211=j*El2d->gammaxx->d[0]+nctemp1211;
int nctemp1215=i;
nctemp1215=j*Model->Dlambdax->d[0]+nctemp1215;
float nctemp1218 = El2d->gammaxx->a[nctemp1211] * Model->Dlambdax->a[nctemp1215];
int nctemp1223=i;
nctemp1223=j*El2d->gammayy->d[0]+nctemp1223;
int nctemp1227=i;
nctemp1227=j*Model->Dlambday->d[0]+nctemp1227;
float nctemp1230 = El2d->gammayy->a[nctemp1223] * Model->Dlambday->a[nctemp1227];
float nctemp1231 = nctemp1218 + nctemp1230;
float nctemp1232 = Model->Dt * nctemp1231;
float nctemp1233 = nctemp1199 + nctemp1232;
float nctemp1245 = 2.0 * Model->Dt;
int nctemp1247=i;
nctemp1247=j*El2d->gammayy->d[0]+nctemp1247;
float nctemp1250 = nctemp1245 * El2d->gammayy->a[nctemp1247];
int nctemp1252=i;
nctemp1252=j*Model->Dmuy->d[0]+nctemp1252;
float nctemp1255 = nctemp1250 * Model->Dmuy->a[nctemp1252];
float nctemp1256 = nctemp1233 + nctemp1255;
int nctemp1258=i;
nctemp1258=j*El2d->sigmayy->d[0]+nctemp1258;
float nctemp1261 = nctemp1256 + El2d->sigmayy->a[nctemp1258];
El2d->sigmayy->a[nctemp1137] =nctemp1261;
int nctemp1265=i;
nctemp1265=j*El2d->p->d[0]+nctemp1265;
int nctemp1276=i;
nctemp1276=j*El2d->sigmaxx->d[0]+nctemp1276;
int nctemp1280=i;
nctemp1280=j*El2d->sigmayy->d[0]+nctemp1280;
float nctemp1283 = El2d->sigmaxx->a[nctemp1276] + El2d->sigmayy->a[nctemp1280];
float nctemp1284 = 0.5 * nctemp1283;
El2d->p->a[nctemp1265] =nctemp1284;
int nctemp1288=i;
nctemp1288=j*El2d->sigmaxy->d[0]+nctemp1288;
float nctemp1308 = 2.0 * Model->Dt;
int nctemp1310=i;
nctemp1310=j*Model->Muxy->d[0]+nctemp1310;
float nctemp1313 = nctemp1308 * Model->Muxy->a[nctemp1310];
int nctemp1315=i;
nctemp1315=j*El2d->exy->d[0]+nctemp1315;
float nctemp1318 = nctemp1313 * El2d->exy->a[nctemp1315];
float nctemp1330 = 2.0 * Model->Dt;
int nctemp1332=i;
nctemp1332=j*El2d->gammaxy->d[0]+nctemp1332;
float nctemp1335 = nctemp1330 * El2d->gammaxy->a[nctemp1332];
int nctemp1337=i;
nctemp1337=j*Model->Dmuxyy->d[0]+nctemp1337;
float nctemp1340 = nctemp1335 * Model->Dmuxyy->a[nctemp1337];
float nctemp1341 = nctemp1318 + nctemp1340;
int nctemp1343=i;
nctemp1343=j*El2d->sigmaxy->d[0]+nctemp1343;
float nctemp1346 = nctemp1341 + El2d->sigmaxy->a[nctemp1343];
El2d->sigmaxy->a[nctemp1288] =nctemp1346;
int nctemp1350=i;
nctemp1350=j*El2d->sigmayx->d[0]+nctemp1350;
float nctemp1370 = 2.0 * Model->Dt;
int nctemp1372=i;
nctemp1372=j*Model->Muxy->d[0]+nctemp1372;
float nctemp1375 = nctemp1370 * Model->Muxy->a[nctemp1372];
int nctemp1377=i;
nctemp1377=j*El2d->exy->d[0]+nctemp1377;
float nctemp1380 = nctemp1375 * El2d->exy->a[nctemp1377];
float nctemp1392 = 2.0 * Model->Dt;
int nctemp1394=i;
nctemp1394=j*El2d->gammayx->d[0]+nctemp1394;
float nctemp1397 = nctemp1392 * El2d->gammayx->a[nctemp1394];
int nctemp1399=i;
nctemp1399=j*Model->Dmuxyx->d[0]+nctemp1399;
float nctemp1402 = nctemp1397 * Model->Dmuxyx->a[nctemp1399];
float nctemp1403 = nctemp1380 + nctemp1402;
int nctemp1405=i;
nctemp1405=j*El2d->sigmayx->d[0]+nctemp1405;
float nctemp1408 = nctemp1403 + El2d->sigmayx->a[nctemp1405];
El2d->sigmayx->a[nctemp1350] =nctemp1408;
int nctemp1412=i;
nctemp1412=j*El2d->gammaxx->d[0]+nctemp1412;
int nctemp1422=i;
nctemp1422=j*Model->Alpha1x->d[0]+nctemp1422;
int nctemp1426=i;
nctemp1426=j*El2d->gammaxx->d[0]+nctemp1426;
float nctemp1429 = Model->Alpha1x->a[nctemp1422] * El2d->gammaxx->a[nctemp1426];
int nctemp1434=i;
nctemp1434=j*Model->Alpha2x->d[0]+nctemp1434;
int nctemp1438=i;
nctemp1438=j*El2d->exx->d[0]+nctemp1438;
float nctemp1441 = Model->Alpha2x->a[nctemp1434] * El2d->exx->a[nctemp1438];
float nctemp1442 = nctemp1429 + nctemp1441;
El2d->gammaxx->a[nctemp1412] =nctemp1442;
int nctemp1446=i;
nctemp1446=j*El2d->gammayy->d[0]+nctemp1446;
int nctemp1456=i;
nctemp1456=j*Model->Alpha1y->d[0]+nctemp1456;
int nctemp1460=i;
nctemp1460=j*El2d->gammayy->d[0]+nctemp1460;
float nctemp1463 = Model->Alpha1y->a[nctemp1456] * El2d->gammayy->a[nctemp1460];
int nctemp1468=i;
nctemp1468=j*Model->Alpha2y->d[0]+nctemp1468;
int nctemp1472=i;
nctemp1472=j*El2d->eyy->d[0]+nctemp1472;
float nctemp1475 = Model->Alpha2y->a[nctemp1468] * El2d->eyy->a[nctemp1472];
float nctemp1476 = nctemp1463 + nctemp1475;
El2d->gammayy->a[nctemp1446] =nctemp1476;
int nctemp1480=i;
nctemp1480=j*El2d->gammaxy->d[0]+nctemp1480;
int nctemp1490=i;
nctemp1490=j*Model->Beta1y->d[0]+nctemp1490;
int nctemp1494=i;
nctemp1494=j*El2d->gammaxy->d[0]+nctemp1494;
float nctemp1497 = Model->Beta1y->a[nctemp1490] * El2d->gammaxy->a[nctemp1494];
int nctemp1502=i;
nctemp1502=j*Model->Beta2y->d[0]+nctemp1502;
int nctemp1506=i;
nctemp1506=j*El2d->exy->d[0]+nctemp1506;
float nctemp1509 = Model->Beta2y->a[nctemp1502] * El2d->exy->a[nctemp1506];
float nctemp1510 = nctemp1497 + nctemp1509;
El2d->gammaxy->a[nctemp1480] =nctemp1510;
int nctemp1514=i;
nctemp1514=j*El2d->gammayx->d[0]+nctemp1514;
int nctemp1524=i;
nctemp1524=j*Model->Beta1x->d[0]+nctemp1524;
int nctemp1528=i;
nctemp1528=j*El2d->gammayx->d[0]+nctemp1528;
float nctemp1531 = Model->Beta1x->a[nctemp1524] * El2d->gammayx->a[nctemp1528];
int nctemp1536=i;
nctemp1536=j*Model->Beta2x->d[0]+nctemp1536;
int nctemp1540=i;
nctemp1540=j*El2d->eyx->d[0]+nctemp1540;
float nctemp1543 = Model->Beta2x->a[nctemp1536] * El2d->eyx->a[nctemp1540];
float nctemp1544 = nctemp1531 + nctemp1543;
El2d->gammayx->a[nctemp1514] =nctemp1544;
}
}
}
int El2dstress (struct el2d* El2d,struct model* Model)
{
  kernel_El2dstress<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
int El2dSnap (struct el2d* El2d,int it)
{
int n;
int Nx;
int Ny;
nctempchar1 *tmp;
int nctemp1545 = (El2d->sresamp <= 0);
if(nctemp1545)
{
return 1;
}
int nctemp1554=El2d->sigmaxx->d[0];Nx =nctemp1554;
int nctemp1562=El2d->sigmaxx->d[1];Ny =nctemp1562;
int nctemp1574 = Nx * Ny;
n =nctemp1574;
int nctemp1578= it;
int nctemp1580= El2d->sresamp;
int nctemp1582=LibeMod(nctemp1578,nctemp1580);
int nctemp1575 = (nctemp1582 ==0);
if(nctemp1575)
{
int nctemp1587=0;
int nctemp1584 = (El2d->snpflags->a[nctemp1587] ==1);
if(nctemp1584)
{
nctempchar1 nctemp1596;
nctempchar1 *nctemp1595;
nctemp1596=*(nctempchar1*)(El2d->p);
int nctemp1603 = 4 * n;
nctemp1596.d[0]=nctemp1603;
nctemp1595=&nctemp1596;
tmp=nctemp1595;
int nctemp1605= El2d->fdp;
int nctemp1612 = 4 * n;
int nctemp1607= nctemp1612;
nctempchar1* nctemp1613= tmp;
int nctemp1616=LibeWrite(nctemp1605,nctemp1607,nctemp1613);
}
int nctemp1620=1;
int nctemp1617 = (El2d->snpflags->a[nctemp1620] ==1);
if(nctemp1617)
{
nctempchar1 nctemp1629;
nctempchar1 *nctemp1628;
nctemp1629=*(nctempchar1*)(El2d->vx);
int nctemp1636 = 4 * n;
nctemp1629.d[0]=nctemp1636;
nctemp1628=&nctemp1629;
tmp=nctemp1628;
int nctemp1638= El2d->fdvx;
int nctemp1645 = 4 * n;
int nctemp1640= nctemp1645;
nctempchar1* nctemp1646= tmp;
int nctemp1649=LibeWrite(nctemp1638,nctemp1640,nctemp1646);
}
int nctemp1653=2;
int nctemp1650 = (El2d->snpflags->a[nctemp1653] ==1);
if(nctemp1650)
{
nctempchar1 nctemp1662;
nctempchar1 *nctemp1661;
nctemp1662=*(nctempchar1*)(El2d->vy);
int nctemp1669 = 4 * n;
nctemp1662.d[0]=nctemp1669;
nctemp1661=&nctemp1662;
tmp=nctemp1661;
int nctemp1671= El2d->fdvy;
int nctemp1678 = 4 * n;
int nctemp1673= nctemp1678;
nctempchar1* nctemp1679= tmp;
int nctemp1682=LibeWrite(nctemp1671,nctemp1673,nctemp1679);
}
int nctemp1686=3;
int nctemp1683 = (El2d->snpflags->a[nctemp1686] ==1);
if(nctemp1683)
{
nctempchar1 nctemp1695;
nctempchar1 *nctemp1694;
nctemp1695=*(nctempchar1*)(El2d->e);
int nctemp1702 = 4 * n;
nctemp1695.d[0]=nctemp1702;
nctemp1694=&nctemp1695;
tmp=nctemp1694;
int nctemp1704= El2d->fde;
int nctemp1711 = 4 * n;
int nctemp1706= nctemp1711;
nctempchar1* nctemp1712= tmp;
int nctemp1715=LibeWrite(nctemp1704,nctemp1706,nctemp1712);
}
int nctemp1719=4;
int nctemp1716 = (El2d->snpflags->a[nctemp1719] ==1);
if(nctemp1716)
{
nctempchar1 nctemp1728;
nctempchar1 *nctemp1727;
nctemp1728=*(nctempchar1*)(El2d->exy);
int nctemp1735 = 4 * n;
nctemp1728.d[0]=nctemp1735;
nctemp1727=&nctemp1728;
tmp=nctemp1727;
int nctemp1737= El2d->fdexy;
int nctemp1744 = 4 * n;
int nctemp1739= nctemp1744;
nctempchar1* nctemp1745= tmp;
int nctemp1748=LibeWrite(nctemp1737,nctemp1739,nctemp1745);
}
}
return 1;
}
int El2dSolve (struct el2d* El2d,struct model* Model,struct src* Src,struct rec* Rec,int nt,int l)
{
int sx;
int sy;
struct diff* Diff;
int ns;
int ne;
nctempfloat2 *tmp1;
nctempfloat2 *tmp2;
int i;
int k;
float perc;
float oldperc;
int iperc;
int nctemp1754= l;
struct diff* nctemp1756=DiffNew(nctemp1754);
Diff =nctemp1756;
int nctemp1763=Model->Nx;
nctemp1763=nctemp1763*Model->Ny;
nctempfloat2 *nctemp1762;
nctemp1762=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1762->d[0]=Model->Nx;
nctemp1762->d[1]=Model->Ny;
nctemp1762->a=(float *)RunMalloc(sizeof(float)*nctemp1763);
tmp1=nctemp1762;
int nctemp1774=Model->Nx;
nctemp1774=nctemp1774*Model->Ny;
nctempfloat2 *nctemp1773;
nctemp1773=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1773->d[0]=Model->Nx;
nctemp1773->d[1]=Model->Ny;
nctemp1773->a=(float *)RunMalloc(sizeof(float)*nctemp1774);
tmp2=nctemp1773;
oldperc =0.0;
ns =El2d->ts;
int nctemp1795 = ns + nt;
ne =nctemp1795;
i =ns;
int nctemp1800 = (i < ne);
while(nctemp1800){
{
struct diff* nctemp1805= Diff;
nctempfloat2* nctemp1807= El2d->sigmaxx;
nctempfloat2* nctemp1810= El2d->exx;
float nctemp1813= Model->Dx;
int nctemp1815=DiffDxplus(nctemp1805,nctemp1807,nctemp1810,nctemp1813);
struct diff* nctemp1817= Diff;
nctempfloat2* nctemp1819= El2d->sigmaxy;
nctempfloat2* nctemp1822= El2d->exy;
float nctemp1825= Model->Dx;
int nctemp1827=DiffDyminus(nctemp1817,nctemp1819,nctemp1822,nctemp1825);
struct el2d* nctemp1829= El2d;
struct model* nctemp1831= Model;
int nctemp1833=El2dvx(nctemp1829,nctemp1831);
struct diff* nctemp1835= Diff;
nctempfloat2* nctemp1837= El2d->sigmayy;
nctempfloat2* nctemp1840= El2d->eyy;
float nctemp1843= Model->Dx;
int nctemp1845=DiffDyplus(nctemp1835,nctemp1837,nctemp1840,nctemp1843);
struct diff* nctemp1847= Diff;
nctempfloat2* nctemp1849= El2d->sigmaxy;
nctempfloat2* nctemp1852= El2d->eyx;
float nctemp1855= Model->Dx;
int nctemp1857=DiffDxminus(nctemp1847,nctemp1849,nctemp1852,nctemp1855);
struct el2d* nctemp1859= El2d;
struct model* nctemp1861= Model;
int nctemp1863=El2dvy(nctemp1859,nctemp1861);
struct diff* nctemp1865= Diff;
nctempfloat2* nctemp1867= El2d->vx;
nctempfloat2* nctemp1870= El2d->exx;
float nctemp1873= Model->Dx;
int nctemp1875=DiffDxminus(nctemp1865,nctemp1867,nctemp1870,nctemp1873);
struct diff* nctemp1877= Diff;
nctempfloat2* nctemp1879= El2d->vy;
nctempfloat2* nctemp1882= El2d->eyy;
float nctemp1885= Model->Dx;
int nctemp1887=DiffDyminus(nctemp1877,nctemp1879,nctemp1882,nctemp1885);
struct diff* nctemp1889= Diff;
nctempfloat2* nctemp1891= El2d->vy;
nctempfloat2* nctemp1894= tmp1;
float nctemp1897= Model->Dx;
int nctemp1899=DiffDxplus(nctemp1889,nctemp1891,nctemp1894,nctemp1897);
struct diff* nctemp1901= Diff;
nctempfloat2* nctemp1903= El2d->vx;
nctempfloat2* nctemp1906= tmp2;
float nctemp1909= Model->Dx;
int nctemp1911=DiffDyplus(nctemp1901,nctemp1903,nctemp1906,nctemp1909);
struct el2d* nctemp1913= El2d;
struct model* nctemp1915= Model;
nctempfloat2* nctemp1917= tmp1;
nctempfloat2* nctemp1920= tmp2;
int nctemp1923=El2dexy(nctemp1913,nctemp1915,nctemp1917,nctemp1920);
struct el2d* nctemp1925= El2d;
struct model* nctemp1927= Model;
nctempfloat2* nctemp1929= tmp1;
nctempfloat2* nctemp1932= tmp2;
int nctemp1935=El2deyx(nctemp1925,nctemp1927,nctemp1929,nctemp1932);
struct el2d* nctemp1937= El2d;
struct model* nctemp1939= Model;
int nctemp1941=El2de(nctemp1937,nctemp1939);
struct el2d* nctemp1943= El2d;
struct model* nctemp1945= Model;
int nctemp1947=El2dstress(nctemp1943,nctemp1945);
k =0;
int nctemp1952 = (k < Src->Ns);
while(nctemp1952){
{
int nctemp1960=k;
sx =Src->Sx->a[nctemp1960];
int nctemp1966=k;
sy =Src->Sy->a[nctemp1966];
int nctemp1971=sx;
nctemp1971=sy*El2d->sigmaxx->d[0]+nctemp1971;
int nctemp1978=sx;
nctemp1978=sy*El2d->sigmaxx->d[0]+nctemp1978;
int nctemp1989=i;
nctemp1989=k*Src->Sqxx->d[0]+nctemp1989;
float nctemp1997 = Model->Dx * Model->Dx;
float nctemp1998 = Src->Sqxx->a[nctemp1989] / nctemp1997;
float nctemp1999 = Model->Dt * nctemp1998;
float nctemp2000 = El2d->sigmaxx->a[nctemp1978] + nctemp1999;
El2d->sigmaxx->a[nctemp1971] =nctemp2000;
int nctemp2004=sx;
nctemp2004=sy*El2d->sigmayy->d[0]+nctemp2004;
int nctemp2011=sx;
nctemp2011=sy*El2d->sigmayy->d[0]+nctemp2011;
int nctemp2022=i;
nctemp2022=k*Src->Sqyy->d[0]+nctemp2022;
float nctemp2030 = Model->Dx * Model->Dx;
float nctemp2031 = Src->Sqyy->a[nctemp2022] / nctemp2030;
float nctemp2032 = Model->Dt * nctemp2031;
float nctemp2033 = El2d->sigmayy->a[nctemp2011] + nctemp2032;
El2d->sigmayy->a[nctemp2004] =nctemp2033;
int nctemp2037=sx;
nctemp2037=sy*El2d->vx->d[0]+nctemp2037;
int nctemp2044=sx;
nctemp2044=sy*El2d->vx->d[0]+nctemp2044;
int nctemp2055=i;
nctemp2055=k*Src->Sfx->d[0]+nctemp2055;
float nctemp2063 = Model->Dx * Model->Dx;
float nctemp2064 = Src->Sfx->a[nctemp2055] / nctemp2063;
float nctemp2065 = Model->Dt * nctemp2064;
float nctemp2066 = El2d->vx->a[nctemp2044] + nctemp2065;
El2d->vx->a[nctemp2037] =nctemp2066;
int nctemp2070=sx;
nctemp2070=sy*El2d->vy->d[0]+nctemp2070;
int nctemp2077=sx;
nctemp2077=sy*El2d->vy->d[0]+nctemp2077;
int nctemp2088=i;
nctemp2088=k*Src->Sfy->d[0]+nctemp2088;
float nctemp2096 = Model->Dx * Model->Dx;
float nctemp2097 = Src->Sfy->a[nctemp2088] / nctemp2096;
float nctemp2098 = Model->Dt * nctemp2097;
float nctemp2099 = El2d->vy->a[nctemp2077] + nctemp2098;
El2d->vy->a[nctemp2070] =nctemp2099;
}
int nctemp2108 = k + 1;
k =nctemp2108;
int nctemp2109 = (k < Src->Ns);
nctemp1952=nctemp2109;
}
float nctemp2124=(float)(i);
int nctemp2137 = ne - ns;
int nctemp2139 = nctemp2137 - 1;
float nctemp2128=(float)(nctemp2139);
float nctemp2140 = nctemp2124 / nctemp2128;
float nctemp2141 = 1000.0 * nctemp2140;
perc =nctemp2141;
float nctemp2149 = perc - oldperc;
int nctemp2142 = (nctemp2149 >= 10.0);
if(nctemp2142)
{
int nctemp2158=(int)(perc);
int nctemp2162 = nctemp2158 / 10;
iperc =nctemp2162;
int nctemp2166= iperc;
int nctemp2168= 10;
int nctemp2170=LibeMod(nctemp2166,nctemp2168);
int nctemp2163 = (nctemp2170 ==0);
if(nctemp2163)
{
int nctemp2173= 4;
int nctemp2175= iperc;
int nctemp2177=LibePuti(nctemp2173,nctemp2175);
int nctemp2179= 4;
struct nctempchar1 *nctemp2183;
static struct nctempchar1 nctemp2184 = {{ 3}, (char*)"\n\0"};
nctemp2183=&nctemp2184;
nctempchar1* nctemp2181= nctemp2183;
int nctemp2185=LibePuts(nctemp2179,nctemp2181);
int nctemp2187= 4;
int nctemp2189=LibeFlush(nctemp2187);
}
oldperc =perc;
}
struct rec* nctemp2195= Rec;
int nctemp2197= i;
nctempfloat2* nctemp2199= El2d->p;
nctempfloat2* nctemp2202= El2d->vx;
nctempfloat2* nctemp2205= El2d->vy;
int nctemp2208=RecReceiver(nctemp2195,nctemp2197,nctemp2199,nctemp2202,nctemp2205);
struct el2d* nctemp2210= El2d;
int nctemp2212= i;
int nctemp2214=El2dSnap(nctemp2210,nctemp2212);
}
int nctemp2223 = i + 1;
i =nctemp2223;
int nctemp2224 = (i < ne);
nctemp1800=nctemp2224;
}
int nctemp2236 = El2d->ts + ne;
El2d->ts =nctemp2236;
return 1;
}
}
