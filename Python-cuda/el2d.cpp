/*  Translated by epsc  version December 2021 */
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeClearerr ();
int LibeGeterrno ();
nctempchar1* LibeGeterrstr ();
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int Main (struct nctempMainArg1 *MainArgs);
int LibeInit ();
int LibeDelete ();
int LibeExit ();
nctempchar1* LibeGetenv (nctempchar1 *name);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibePutf (int fp,float r,nctempchar1 *form);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibeRead (int fp,int n,nctempchar1 *array);
int LibeWrite (int fp,int n,nctempchar1 *array);
int LibeSeek (int fp,int pos,int flag);
int LibeFlush (int fp);
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
nctempchar1* LibeStrsave (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1* LibeStradd (nctempchar1 *t,nctempchar1 *s);
int LibeIsalpha (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
int LibeSetnb (int n);
int LibeSetnt (int n);
int LibeGetnb ();
int LibeGetnt ();
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeSystem (nctempchar1 *cmd);
struct diff {int l;
int lmax;
nctempfloat2 *coeffs;
nctempfloat1 *w;
};
typedef struct nctempdiff1 {int d[1]; struct diff *a; } nctempdiff1;
struct nctempdiff2 {int d[2]; struct diff *a; } ;
struct nctempdiff3 {int d[3]; struct diff *a; } ;
struct nctempdiff4 {int d[4]; struct diff *a; } ;
struct diff* DiffNew (int l);
int DiffDxminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyminus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDxplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
int DiffDyplus (struct diff* Diff,nctempfloat2 *A,nctempfloat2 *dA,float dx);
struct rec {int nr;
nctempint1 *rx;
nctempint1 *ry;
int fd;
int nt;
nctempfloat2 *p;
nctempfloat2 *wrk;
int resamp;
int sresamp;
int pit;
};
typedef struct nctemprec1 {int d[1]; struct rec *a; } nctemprec1;
struct nctemprec2 {int d[2]; struct rec *a; } ;
struct nctemprec3 {int d[3]; struct rec *a; } ;
struct nctemprec4 {int d[4]; struct rec *a; } ;
struct rec* RecNew (nctempint1 *rx,nctempint1 *ry,int nt,int resamp,int sresamp,nctempchar1 *file);
int RecReceiver (struct rec* Rec,int it,nctempfloat2 *p);
int RecSave (struct rec* Rec,nctempchar1 *file);
int RecSnap (struct rec* Rec,int it,nctempfloat2 *snp);
struct src {nctempfloat1 *Src;
nctempint1 *Sx;
nctempint1 *Sy;
int Ns;
};
typedef struct nctempsrc1 {int d[1]; struct src *a; } nctempsrc1;
struct nctempsrc2 {int d[2]; struct src *a; } ;
struct nctempsrc3 {int d[3]; struct src *a; } ;
struct nctempsrc4 {int d[4]; struct src *a; } ;
struct src* SrcNew (nctempfloat1 *source,nctempint1 *sx,nctempint1 *sy);
int SrcDel (struct src* Src);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Ql;
nctempfloat2 *Qm;
nctempfloat2 *Qs;
nctempfloat2 *Lambda;
nctempfloat2 *Mu;
nctempfloat2 *Dlambda;
nctempfloat2 *Dlambdax;
nctempfloat2 *Dlambday;
nctempfloat2 *Dmu;
nctempfloat2 *Dmux;
nctempfloat2 *Dmuy;
nctempfloat2 *Drhox;
nctempfloat2 *Drhoy;
nctempfloat2 *Rho;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Beta1x;
nctempfloat2 *Beta2x;
nctempfloat2 *Beta1y;
nctempfloat2 *Beta2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
float Dx;
float Dt;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *vs,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb,int Rheol);
float ModelStability (struct model* Model);
struct el2d {nctempfloat2 *p;
nctempfloat2 *sigmaxx;
nctempfloat2 *sigmayy;
nctempfloat2 *sigmaxy;
nctempfloat2 *sigmayx;
nctempfloat2 *vx;
nctempfloat2 *vy;
nctempfloat2 *exx;
nctempfloat2 *eyy;
nctempfloat2 *exy;
nctempfloat2 *gammaxx;
nctempfloat2 *gammayy;
nctempfloat2 *gammaxy;
nctempfloat2 *thetax;
nctempfloat2 *thetay;
int ts;
};
typedef struct nctempel2d1 {int d[1]; struct el2d *a; } nctempel2d1;
struct nctempel2d2 {int d[2]; struct el2d *a; } ;
struct nctempel2d3 {int d[3]; struct el2d *a; } ;
struct nctempel2d4 {int d[4]; struct el2d *a; } ;
struct el2d* El2dNew (struct model* Model);
int El2dSolve (struct el2d* El2d,struct model* Model,struct src* Src,struct rec* Rec,int nt,int l);
int El2dvx (struct el2d* El2d,struct model* Model);
int El2dvy (struct el2d* El2d,struct model* Model);
int El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *vx,nctempfloat2 *vy);
int El2dstress (struct el2d* El2d,struct model* Model);
struct el2d* El2dNew (struct model* Model)
{
struct el2d* El2d;
int i;
int j;
struct el2d *nctemp5=(struct el2d*)RunMalloc(sizeof(struct el2d));
El2d =nctemp5;
int nctemp13=Model->Nx;
nctemp13=nctemp13*Model->Ny;
nctempfloat2 *nctemp12;
nctemp12=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp12->d[0]=Model->Nx;
nctemp12->d[1]=Model->Ny;
nctemp12->a=(float *)RunMalloc(sizeof(float)*nctemp13);
El2d->p=nctemp12;
int nctemp24=Model->Nx;
nctemp24=nctemp24*Model->Ny;
nctempfloat2 *nctemp23;
nctemp23=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp23->d[0]=Model->Nx;
nctemp23->d[1]=Model->Ny;
nctemp23->a=(float *)RunMalloc(sizeof(float)*nctemp24);
El2d->sigmaxx=nctemp23;
int nctemp35=Model->Nx;
nctemp35=nctemp35*Model->Ny;
nctempfloat2 *nctemp34;
nctemp34=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp34->d[0]=Model->Nx;
nctemp34->d[1]=Model->Ny;
nctemp34->a=(float *)RunMalloc(sizeof(float)*nctemp35);
El2d->sigmayy=nctemp34;
int nctemp46=Model->Nx;
nctemp46=nctemp46*Model->Ny;
nctempfloat2 *nctemp45;
nctemp45=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp45->d[0]=Model->Nx;
nctemp45->d[1]=Model->Ny;
nctemp45->a=(float *)RunMalloc(sizeof(float)*nctemp46);
El2d->sigmaxy=nctemp45;
int nctemp57=Model->Nx;
nctemp57=nctemp57*Model->Ny;
nctempfloat2 *nctemp56;
nctemp56=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp56->d[0]=Model->Nx;
nctemp56->d[1]=Model->Ny;
nctemp56->a=(float *)RunMalloc(sizeof(float)*nctemp57);
El2d->vx=nctemp56;
int nctemp68=Model->Nx;
nctemp68=nctemp68*Model->Ny;
nctempfloat2 *nctemp67;
nctemp67=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp67->d[0]=Model->Nx;
nctemp67->d[1]=Model->Ny;
nctemp67->a=(float *)RunMalloc(sizeof(float)*nctemp68);
El2d->vy=nctemp67;
int nctemp79=Model->Nx;
nctemp79=nctemp79*Model->Ny;
nctempfloat2 *nctemp78;
nctemp78=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp78->d[0]=Model->Nx;
nctemp78->d[1]=Model->Ny;
nctemp78->a=(float *)RunMalloc(sizeof(float)*nctemp79);
El2d->exx=nctemp78;
int nctemp90=Model->Nx;
nctemp90=nctemp90*Model->Ny;
nctempfloat2 *nctemp89;
nctemp89=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp89->d[0]=Model->Nx;
nctemp89->d[1]=Model->Ny;
nctemp89->a=(float *)RunMalloc(sizeof(float)*nctemp90);
El2d->eyy=nctemp89;
int nctemp101=Model->Nx;
nctemp101=nctemp101*Model->Ny;
nctempfloat2 *nctemp100;
nctemp100=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp100->d[0]=Model->Nx;
nctemp100->d[1]=Model->Ny;
nctemp100->a=(float *)RunMalloc(sizeof(float)*nctemp101);
El2d->exy=nctemp100;
int nctemp112=Model->Nx;
nctemp112=nctemp112*Model->Ny;
nctempfloat2 *nctemp111;
nctemp111=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp111->d[0]=Model->Nx;
nctemp111->d[1]=Model->Ny;
nctemp111->a=(float *)RunMalloc(sizeof(float)*nctemp112);
El2d->gammaxx=nctemp111;
int nctemp123=Model->Nx;
nctemp123=nctemp123*Model->Ny;
nctempfloat2 *nctemp122;
nctemp122=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp122->d[0]=Model->Nx;
nctemp122->d[1]=Model->Ny;
nctemp122->a=(float *)RunMalloc(sizeof(float)*nctemp123);
El2d->gammayy=nctemp122;
int nctemp134=Model->Nx;
nctemp134=nctemp134*Model->Ny;
nctempfloat2 *nctemp133;
nctemp133=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp133->d[0]=Model->Nx;
nctemp133->d[1]=Model->Ny;
nctemp133->a=(float *)RunMalloc(sizeof(float)*nctemp134);
El2d->gammaxy=nctemp133;
int nctemp145=Model->Nx;
nctemp145=nctemp145*Model->Ny;
nctempfloat2 *nctemp144;
nctemp144=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp144->d[0]=Model->Nx;
nctemp144->d[1]=Model->Ny;
nctemp144->a=(float *)RunMalloc(sizeof(float)*nctemp145);
El2d->thetax=nctemp144;
int nctemp156=Model->Nx;
nctemp156=nctemp156*Model->Ny;
nctempfloat2 *nctemp155;
nctemp155=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp155->d[0]=Model->Nx;
nctemp155->d[1]=Model->Ny;
nctemp155->a=(float *)RunMalloc(sizeof(float)*nctemp156);
El2d->thetay=nctemp155;
i =0;
int nctemp165 = (i < Model->Nx);
while(nctemp165){
{
j =0;
int nctemp173 = (j < Model->Ny);
while(nctemp173){
{
int nctemp180=i;
nctemp180=j*El2d->p->d[0]+nctemp180;
El2d->p->a[nctemp180] =0.0;
int nctemp187=i;
nctemp187=j*El2d->sigmaxx->d[0]+nctemp187;
El2d->sigmaxx->a[nctemp187] =0.0;
int nctemp194=i;
nctemp194=j*El2d->sigmayy->d[0]+nctemp194;
El2d->sigmayy->a[nctemp194] =0.0;
int nctemp201=i;
nctemp201=j*El2d->sigmaxy->d[0]+nctemp201;
El2d->sigmaxy->a[nctemp201] =0.0;
int nctemp208=i;
nctemp208=j*El2d->vx->d[0]+nctemp208;
El2d->vx->a[nctemp208] =0.0;
int nctemp215=i;
nctemp215=j*El2d->vy->d[0]+nctemp215;
El2d->vy->a[nctemp215] =0.0;
int nctemp222=i;
nctemp222=j*El2d->exx->d[0]+nctemp222;
El2d->exx->a[nctemp222] =0.0;
int nctemp229=i;
nctemp229=j*El2d->eyy->d[0]+nctemp229;
El2d->eyy->a[nctemp229] =0.0;
int nctemp236=i;
nctemp236=j*El2d->exy->d[0]+nctemp236;
El2d->exy->a[nctemp236] =0.0;
int nctemp243=i;
nctemp243=j*El2d->gammaxx->d[0]+nctemp243;
El2d->gammaxx->a[nctemp243] =0.0;
int nctemp250=i;
nctemp250=j*El2d->gammayy->d[0]+nctemp250;
El2d->gammayy->a[nctemp250] =0.0;
int nctemp257=i;
nctemp257=j*El2d->gammaxy->d[0]+nctemp257;
El2d->gammaxy->a[nctemp257] =0.0;
int nctemp264=i;
nctemp264=j*El2d->thetax->d[0]+nctemp264;
El2d->thetax->a[nctemp264] =0.0;
int nctemp271=i;
nctemp271=j*El2d->thetay->d[0]+nctemp271;
El2d->thetay->a[nctemp271] =0.0;
El2d->ts =0;
}
int nctemp287 = j + 1;
j =nctemp287;
int nctemp288 = (j < Model->Ny);
nctemp173=nctemp288;
}
}
int nctemp300 = i + 1;
i =nctemp300;
int nctemp301 = (i < Model->Nx);
nctemp165=nctemp301;
}
return El2d;
}
int El2dSolve (struct el2d* El2d,struct model* Model,struct src* Src,struct rec* Rec,int nt,int l)
{
int sx;
int sy;
struct diff* Diff;
int ns;
int ne;
nctempfloat2 *tmp1;
nctempfloat2 *tmp2;
int i;
int k;
float perc;
float oldperc;
int iperc;
int nctemp310= l;
struct diff* nctemp312=DiffNew(nctemp310);
Diff =nctemp312;
int nctemp319=Model->Nx;
nctemp319=nctemp319*Model->Ny;
nctempfloat2 *nctemp318;
nctemp318=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp318->d[0]=Model->Nx;
nctemp318->d[1]=Model->Ny;
nctemp318->a=(float *)RunMalloc(sizeof(float)*nctemp319);
tmp1=nctemp318;
int nctemp330=Model->Nx;
nctemp330=nctemp330*Model->Ny;
nctempfloat2 *nctemp329;
nctemp329=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp329->d[0]=Model->Nx;
nctemp329->d[1]=Model->Ny;
nctemp329->a=(float *)RunMalloc(sizeof(float)*nctemp330);
tmp2=nctemp329;
oldperc =0.0;
ns =El2d->ts;
int nctemp351 = ns + nt;
ne =nctemp351;
i =ns;
int nctemp356 = (i < ne);
while(nctemp356){
{
struct diff* nctemp361= Diff;
nctempfloat2* nctemp363= El2d->sigmaxx;
nctempfloat2* nctemp366= El2d->exx;
float nctemp369= Model->Dx;
int nctemp371=DiffDxplus(nctemp361,nctemp363,nctemp366,nctemp369);
struct diff* nctemp373= Diff;
nctempfloat2* nctemp375= El2d->sigmaxy;
nctempfloat2* nctemp378= El2d->exy;
float nctemp381= Model->Dx;
int nctemp383=DiffDyminus(nctemp373,nctemp375,nctemp378,nctemp381);
struct el2d* nctemp385= El2d;
struct model* nctemp387= Model;
int nctemp389=El2dvx(nctemp385,nctemp387);
struct diff* nctemp391= Diff;
nctempfloat2* nctemp393= El2d->sigmayy;
nctempfloat2* nctemp396= El2d->eyy;
float nctemp399= Model->Dx;
int nctemp401=DiffDyplus(nctemp391,nctemp393,nctemp396,nctemp399);
struct diff* nctemp403= Diff;
nctempfloat2* nctemp405= El2d->sigmaxy;
nctempfloat2* nctemp408= El2d->exy;
float nctemp411= Model->Dx;
int nctemp413=DiffDxminus(nctemp403,nctemp405,nctemp408,nctemp411);
struct el2d* nctemp415= El2d;
struct model* nctemp417= Model;
int nctemp419=El2dvy(nctemp415,nctemp417);
struct diff* nctemp421= Diff;
nctempfloat2* nctemp423= El2d->vx;
nctempfloat2* nctemp426= El2d->exx;
float nctemp429= Model->Dx;
int nctemp431=DiffDxminus(nctemp421,nctemp423,nctemp426,nctemp429);
struct diff* nctemp433= Diff;
nctempfloat2* nctemp435= El2d->vy;
nctempfloat2* nctemp438= El2d->eyy;
float nctemp441= Model->Dx;
int nctemp443=DiffDyminus(nctemp433,nctemp435,nctemp438,nctemp441);
struct diff* nctemp445= Diff;
nctempfloat2* nctemp447= El2d->vy;
nctempfloat2* nctemp450= tmp1;
float nctemp453= Model->Dx;
int nctemp455=DiffDxplus(nctemp445,nctemp447,nctemp450,nctemp453);
struct diff* nctemp457= Diff;
nctempfloat2* nctemp459= El2d->vx;
nctempfloat2* nctemp462= tmp2;
float nctemp465= Model->Dx;
int nctemp467=DiffDyplus(nctemp457,nctemp459,nctemp462,nctemp465);
struct el2d* nctemp469= El2d;
struct model* nctemp471= Model;
nctempfloat2* nctemp473= tmp1;
nctempfloat2* nctemp476= tmp2;
int nctemp479=El2dexy(nctemp469,nctemp471,nctemp473,nctemp476);
struct el2d* nctemp481= El2d;
struct model* nctemp483= Model;
int nctemp485=El2dstress(nctemp481,nctemp483);
k =0;
int nctemp490 = (k < Src->Ns);
while(nctemp490){
{
int nctemp498=k;
sx =Src->Sx->a[nctemp498];
int nctemp504=k;
sy =Src->Sy->a[nctemp504];
int nctemp509=sx;
nctemp509=sy*El2d->vy->d[0]+nctemp509;
int nctemp516=sx;
nctemp516=sy*El2d->vy->d[0]+nctemp516;
int nctemp527=i;
float nctemp534 = Model->Dx * Model->Dx;
float nctemp535 = Src->Src->a[nctemp527] / nctemp534;
float nctemp536 = Model->Dt * nctemp535;
float nctemp537 = El2d->vy->a[nctemp516] + nctemp536;
El2d->vy->a[nctemp509] =nctemp537;
}
int nctemp546 = k + 1;
k =nctemp546;
int nctemp547 = (k < Src->Ns);
nctemp490=nctemp547;
}
float nctemp562=(float)(i);
int nctemp575 = ne - ns;
int nctemp577 = nctemp575 - 1;
float nctemp566=(float)(nctemp577);
float nctemp578 = nctemp562 / nctemp566;
float nctemp579 = 1000.0 * nctemp578;
perc =nctemp579;
float nctemp587 = perc - oldperc;
int nctemp580 = (nctemp587 >= 10.0);
if(nctemp580)
{
int nctemp596=(int)(perc);
int nctemp600 = nctemp596 / 10;
iperc =nctemp600;
int nctemp604= iperc;
int nctemp606= 10;
int nctemp608=LibeMod(nctemp604,nctemp606);
int nctemp601 = (nctemp608 ==0);
if(nctemp601)
{
int nctemp611= 4;
int nctemp613= iperc;
int nctemp615=LibePuti(nctemp611,nctemp613);
int nctemp617= 4;
struct nctempchar1 *nctemp621;
static struct nctempchar1 nctemp622 = {{ 3}, (char*)"\n\0"};
nctemp621=&nctemp622;
nctempchar1* nctemp619= nctemp621;
int nctemp623=LibePuts(nctemp617,nctemp619);
int nctemp625= 4;
int nctemp627=LibeFlush(nctemp625);
}
oldperc =perc;
}
struct rec* nctemp633= Rec;
int nctemp635= i;
nctempfloat2* nctemp637= El2d->vx;
int nctemp640=RecReceiver(nctemp633,nctemp635,nctemp637);
struct rec* nctemp642= Rec;
int nctemp644= i;
nctempfloat2* nctemp646= El2d->vx;
int nctemp649=RecSnap(nctemp642,nctemp644,nctemp646);
}
int nctemp658 = i + 1;
i =nctemp658;
int nctemp659 = (i < ne);
nctemp356=nctemp659;
}
return 1;
}
__global__ void kernel_El2dvx (struct el2d* El2d,struct model* Model);
__global__ void kernel_El2dvx (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp674=0;
int nctemp676=nx;
int nctemp679=0;
int nctemp681=ny;
int nctemp672=(nctemp676-nctemp674)*(nctemp681-nctemp679);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp672;nctempno+=blockDim.x*gridDim.x){
j=nctemp679+nctempno/(nctemp676-nctemp674);
i=nctemp674+nctempno%(nctemp676-nctemp674);
{
int nctemp686=i;
nctemp686=j*El2d->vx->d[0]+nctemp686;
int nctemp700=i;
nctemp700=j*Model->Rho->d[0]+nctemp700;
float nctemp703 = Model->Dt * Model->Rho->a[nctemp700];
int nctemp708=i;
nctemp708=j*El2d->exx->d[0]+nctemp708;
int nctemp712=i;
nctemp712=j*El2d->exy->d[0]+nctemp712;
float nctemp715 = El2d->exx->a[nctemp708] + El2d->exy->a[nctemp712];
float nctemp716 = nctemp703 * nctemp715;
int nctemp718=i;
nctemp718=j*El2d->vx->d[0]+nctemp718;
float nctemp721 = nctemp716 + El2d->vx->a[nctemp718];
El2d->vx->a[nctemp686] =nctemp721;
}
}
}
int El2dvx (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvx<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dvy (struct el2d* El2d,struct model* Model);
__global__ void kernel_El2dvy (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp732=0;
int nctemp734=nx;
int nctemp737=0;
int nctemp739=ny;
int nctemp730=(nctemp734-nctemp732)*(nctemp739-nctemp737);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp730;nctempno+=blockDim.x*gridDim.x){
j=nctemp737+nctempno/(nctemp734-nctemp732);
i=nctemp732+nctempno%(nctemp734-nctemp732);
{
int nctemp744=i;
nctemp744=j*El2d->vy->d[0]+nctemp744;
int nctemp758=i;
nctemp758=j*Model->Rho->d[0]+nctemp758;
float nctemp761 = Model->Dt * Model->Rho->a[nctemp758];
int nctemp766=i;
nctemp766=j*El2d->eyy->d[0]+nctemp766;
int nctemp770=i;
nctemp770=j*El2d->exy->d[0]+nctemp770;
float nctemp773 = El2d->eyy->a[nctemp766] + El2d->exy->a[nctemp770];
float nctemp774 = nctemp761 * nctemp773;
int nctemp776=i;
nctemp776=j*El2d->vy->d[0]+nctemp776;
float nctemp779 = nctemp774 + El2d->vy->a[nctemp776];
El2d->vy->a[nctemp744] =nctemp779;
}
}
}
int El2dvy (struct el2d* El2d,struct model* Model)
{
  kernel_El2dvy<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
__global__ void kernel_El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2);
__global__ void kernel_El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
int nx;
int ny;
int i;
int j;
nx =Model->Nx;
ny =Model->Ny;
int nctemp790=0;
int nctemp792=nx;
int nctemp795=0;
int nctemp797=ny;
int nctemp788=(nctemp792-nctemp790)*(nctemp797-nctemp795);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp788;nctempno+=blockDim.x*gridDim.x){
j=nctemp795+nctempno/(nctemp792-nctemp790);
i=nctemp790+nctempno%(nctemp792-nctemp790);
{
int nctemp802=i;
nctemp802=j*El2d->exy->d[0]+nctemp802;
int nctemp813=i;
nctemp813=j*tmp1->d[0]+nctemp813;
int nctemp817=i;
nctemp817=j*tmp2->d[0]+nctemp817;
float nctemp820 = tmp1->a[nctemp813] + tmp2->a[nctemp817];
float nctemp821 = 0.5 * nctemp820;
El2d->exy->a[nctemp802] =nctemp821;
}
}
}
int El2dexy (struct el2d* El2d,struct model* Model,nctempfloat2 *tmp1,nctempfloat2 *tmp2)
{
  kernel_El2dexy<<< RunGetnb(),RunGetnt() >>>(El2d,Model,tmp1,tmp2);
GpuError();
return(1);
}
__global__ void kernel_El2dstress (struct el2d* El2d,struct model* Model);
__global__ void kernel_El2dstress (struct el2d* El2d,struct model* Model)
{
int nx;
int ny;
int i;
int j;
int l;
nx =Model->Nx;
ny =Model->Ny;
int nctemp832=0;
int nctemp834=nx;
int nctemp837=0;
int nctemp839=ny;
int nctemp830=(nctemp834-nctemp832)*(nctemp839-nctemp837);
for(int nctempno=blockIdx.x*blockDim.x + threadIdx.x; nctempno<nctemp830;nctempno+=blockDim.x*gridDim.x){
j=nctemp837+nctempno/(nctemp834-nctemp832);
i=nctemp832+nctempno%(nctemp834-nctemp832);
{
int nctemp844=i;
nctemp844=j*El2d->sigmaxx->d[0]+nctemp844;
int nctemp867=i;
nctemp867=j*Model->Lambda->d[0]+nctemp867;
float nctemp870 = Model->Dt * Model->Lambda->a[nctemp867];
int nctemp875=i;
nctemp875=j*El2d->exx->d[0]+nctemp875;
int nctemp879=i;
nctemp879=j*El2d->eyy->d[0]+nctemp879;
float nctemp882 = El2d->exx->a[nctemp875] + El2d->eyy->a[nctemp879];
float nctemp883 = nctemp870 * nctemp882;
float nctemp895 = 2.0 * Model->Dt;
int nctemp897=i;
nctemp897=j*Model->Mu->d[0]+nctemp897;
float nctemp900 = nctemp895 * Model->Mu->a[nctemp897];
int nctemp902=i;
nctemp902=j*El2d->exx->d[0]+nctemp902;
float nctemp905 = nctemp900 * El2d->exx->a[nctemp902];
float nctemp906 = nctemp883 + nctemp905;
int nctemp918=i;
nctemp918=j*El2d->gammaxx->d[0]+nctemp918;
int nctemp922=i;
nctemp922=j*El2d->gammayy->d[0]+nctemp922;
float nctemp925 = El2d->gammaxx->a[nctemp918] + El2d->gammayy->a[nctemp922];
float nctemp926 = Model->Dt * nctemp925;
int nctemp928=i;
nctemp928=j*Model->Dlambda->d[0]+nctemp928;
float nctemp931 = nctemp926 * Model->Dlambda->a[nctemp928];
float nctemp932 = nctemp906 + nctemp931;
float nctemp944 = 2.0 * Model->Dt;
int nctemp946=i;
nctemp946=j*El2d->gammaxx->d[0]+nctemp946;
float nctemp949 = nctemp944 * El2d->gammaxx->a[nctemp946];
int nctemp951=i;
nctemp951=j*Model->Dmu->d[0]+nctemp951;
float nctemp954 = nctemp949 * Model->Dmu->a[nctemp951];
float nctemp955 = nctemp932 + nctemp954;
int nctemp957=i;
nctemp957=j*El2d->sigmaxx->d[0]+nctemp957;
float nctemp960 = nctemp955 + El2d->sigmaxx->a[nctemp957];
El2d->sigmaxx->a[nctemp844] =nctemp960;
int nctemp964=i;
nctemp964=j*El2d->sigmayy->d[0]+nctemp964;
int nctemp987=i;
nctemp987=j*Model->Lambda->d[0]+nctemp987;
float nctemp990 = Model->Dt * Model->Lambda->a[nctemp987];
int nctemp995=i;
nctemp995=j*El2d->exx->d[0]+nctemp995;
int nctemp999=i;
nctemp999=j*El2d->eyy->d[0]+nctemp999;
float nctemp1002 = El2d->exx->a[nctemp995] + El2d->eyy->a[nctemp999];
float nctemp1003 = nctemp990 * nctemp1002;
float nctemp1015 = 2.0 * Model->Dt;
int nctemp1017=i;
nctemp1017=j*Model->Mu->d[0]+nctemp1017;
float nctemp1020 = nctemp1015 * Model->Mu->a[nctemp1017];
int nctemp1022=i;
nctemp1022=j*El2d->eyy->d[0]+nctemp1022;
float nctemp1025 = nctemp1020 * El2d->eyy->a[nctemp1022];
float nctemp1026 = nctemp1003 + nctemp1025;
int nctemp1038=i;
nctemp1038=j*El2d->gammaxx->d[0]+nctemp1038;
int nctemp1042=i;
nctemp1042=j*El2d->gammayy->d[0]+nctemp1042;
float nctemp1045 = El2d->gammaxx->a[nctemp1038] + El2d->gammayy->a[nctemp1042];
float nctemp1046 = Model->Dt * nctemp1045;
int nctemp1048=i;
nctemp1048=j*Model->Dlambda->d[0]+nctemp1048;
float nctemp1051 = nctemp1046 * Model->Dlambda->a[nctemp1048];
float nctemp1052 = nctemp1026 + nctemp1051;
float nctemp1064 = 2.0 * Model->Dt;
int nctemp1066=i;
nctemp1066=j*El2d->gammayy->d[0]+nctemp1066;
float nctemp1069 = nctemp1064 * El2d->gammayy->a[nctemp1066];
int nctemp1071=i;
nctemp1071=j*Model->Dmu->d[0]+nctemp1071;
float nctemp1074 = nctemp1069 * Model->Dmu->a[nctemp1071];
float nctemp1075 = nctemp1052 + nctemp1074;
int nctemp1077=i;
nctemp1077=j*El2d->sigmayy->d[0]+nctemp1077;
float nctemp1080 = nctemp1075 + El2d->sigmayy->a[nctemp1077];
El2d->sigmayy->a[nctemp964] =nctemp1080;
int nctemp1084=i;
nctemp1084=j*El2d->sigmaxy->d[0]+nctemp1084;
float nctemp1104 = 2.0 * Model->Dt;
int nctemp1106=i;
nctemp1106=j*Model->Mu->d[0]+nctemp1106;
float nctemp1109 = nctemp1104 * Model->Mu->a[nctemp1106];
int nctemp1111=i;
nctemp1111=j*El2d->exy->d[0]+nctemp1111;
float nctemp1114 = nctemp1109 * El2d->exy->a[nctemp1111];
float nctemp1126 = 2.0 * Model->Dt;
int nctemp1128=i;
nctemp1128=j*El2d->gammaxy->d[0]+nctemp1128;
float nctemp1131 = nctemp1126 * El2d->gammaxy->a[nctemp1128];
int nctemp1133=i;
nctemp1133=j*Model->Dmu->d[0]+nctemp1133;
float nctemp1136 = nctemp1131 * Model->Dmu->a[nctemp1133];
float nctemp1137 = nctemp1114 + nctemp1136;
int nctemp1139=i;
nctemp1139=j*El2d->sigmaxy->d[0]+nctemp1139;
float nctemp1142 = nctemp1137 + El2d->sigmaxy->a[nctemp1139];
El2d->sigmaxy->a[nctemp1084] =nctemp1142;
int nctemp1146=i;
nctemp1146=j*El2d->gammaxx->d[0]+nctemp1146;
int nctemp1156=i;
nctemp1156=j*Model->Alpha1x->d[0]+nctemp1156;
int nctemp1160=i;
nctemp1160=j*El2d->gammaxx->d[0]+nctemp1160;
float nctemp1163 = Model->Alpha1x->a[nctemp1156] * El2d->gammaxx->a[nctemp1160];
int nctemp1168=i;
nctemp1168=j*Model->Alpha2x->d[0]+nctemp1168;
int nctemp1172=i;
nctemp1172=j*El2d->exx->d[0]+nctemp1172;
float nctemp1175 = Model->Alpha2x->a[nctemp1168] * El2d->exx->a[nctemp1172];
float nctemp1176 = nctemp1163 + nctemp1175;
El2d->gammaxx->a[nctemp1146] =nctemp1176;
int nctemp1180=i;
nctemp1180=j*El2d->gammayy->d[0]+nctemp1180;
int nctemp1190=i;
nctemp1190=j*Model->Alpha1y->d[0]+nctemp1190;
int nctemp1194=i;
nctemp1194=j*El2d->gammayy->d[0]+nctemp1194;
float nctemp1197 = Model->Alpha1y->a[nctemp1190] * El2d->gammayy->a[nctemp1194];
int nctemp1202=i;
nctemp1202=j*Model->Alpha2y->d[0]+nctemp1202;
int nctemp1206=i;
nctemp1206=j*El2d->eyy->d[0]+nctemp1206;
float nctemp1209 = Model->Alpha2y->a[nctemp1202] * El2d->eyy->a[nctemp1206];
float nctemp1210 = nctemp1197 + nctemp1209;
El2d->gammayy->a[nctemp1180] =nctemp1210;
int nctemp1214=i;
nctemp1214=j*El2d->gammaxy->d[0]+nctemp1214;
int nctemp1224=i;
nctemp1224=j*Model->Beta1y->d[0]+nctemp1224;
int nctemp1228=i;
nctemp1228=j*El2d->gammaxy->d[0]+nctemp1228;
float nctemp1231 = Model->Beta1y->a[nctemp1224] * El2d->gammaxy->a[nctemp1228];
int nctemp1236=i;
nctemp1236=j*Model->Beta2y->d[0]+nctemp1236;
int nctemp1240=i;
nctemp1240=j*El2d->exy->d[0]+nctemp1240;
float nctemp1243 = Model->Beta2y->a[nctemp1236] * El2d->exy->a[nctemp1240];
float nctemp1244 = nctemp1231 + nctemp1243;
El2d->gammaxy->a[nctemp1214] =nctemp1244;
}
}
}
int El2dstress (struct el2d* El2d,struct model* Model)
{
  kernel_El2dstress<<< RunGetnb(),RunGetnt() >>>(El2d,Model);
GpuError();
return(1);
}
}
